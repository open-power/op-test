************* Module HDCT
HDCT.txt:1:1: E0001: Parsing failed: 'invalid syntax (HDCT, line 1)' (syntax-error)
************* Module LICENSE
LICENSE:2:33: E0001: Parsing failed: 'unexpected indent (LICENSE, line 2)' (syntax-error)
************* Module README
README.md:3:6: E0001: Parsing failed: 'invalid syntax (README, line 3)' (syntax-error)
************* Module skiboot
skiboot.tcl:2:8: E0001: Parsing failed: 'invalid syntax (skiboot, line 2)' (syntax-error)
************* Module OpTestConfiguration
OpTestConfiguration.py:102:0: C0301: Line too long (121/100) (line-too-long)
OpTestConfiguration.py:184:0: C0301: Line too long (118/100) (line-too-long)
OpTestConfiguration.py:186:0: C0301: Line too long (115/100) (line-too-long)
OpTestConfiguration.py:192:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:194:0: C0301: Line too long (191/100) (line-too-long)
OpTestConfiguration.py:197:0: C0301: Line too long (148/100) (line-too-long)
OpTestConfiguration.py:199:0: C0301: Line too long (159/100) (line-too-long)
OpTestConfiguration.py:205:0: C0301: Line too long (141/100) (line-too-long)
OpTestConfiguration.py:207:0: C0301: Line too long (136/100) (line-too-long)
OpTestConfiguration.py:209:0: C0301: Line too long (148/100) (line-too-long)
OpTestConfiguration.py:211:0: C0301: Line too long (128/100) (line-too-long)
OpTestConfiguration.py:214:0: C0301: Line too long (134/100) (line-too-long)
OpTestConfiguration.py:216:0: C0301: Line too long (101/100) (line-too-long)
OpTestConfiguration.py:218:0: C0301: Line too long (145/100) (line-too-long)
OpTestConfiguration.py:222:0: C0301: Line too long (174/100) (line-too-long)
OpTestConfiguration.py:224:0: C0301: Line too long (147/100) (line-too-long)
OpTestConfiguration.py:227:0: C0301: Line too long (540/100) (line-too-long)
OpTestConfiguration.py:229:0: C0301: Line too long (141/100) (line-too-long)
OpTestConfiguration.py:231:0: C0301: Line too long (121/100) (line-too-long)
OpTestConfiguration.py:256:0: C0301: Line too long (118/100) (line-too-long)
OpTestConfiguration.py:258:0: C0301: Line too long (106/100) (line-too-long)
OpTestConfiguration.py:289:0: C0301: Line too long (103/100) (line-too-long)
OpTestConfiguration.py:292:0: C0301: Line too long (103/100) (line-too-long)
OpTestConfiguration.py:294:0: C0301: Line too long (104/100) (line-too-long)
OpTestConfiguration.py:308:0: C0301: Line too long (135/100) (line-too-long)
OpTestConfiguration.py:314:0: C0301: Line too long (129/100) (line-too-long)
OpTestConfiguration.py:330:0: C0301: Line too long (102/100) (line-too-long)
OpTestConfiguration.py:346:0: C0301: Line too long (116/100) (line-too-long)
OpTestConfiguration.py:352:0: C0301: Line too long (108/100) (line-too-long)
OpTestConfiguration.py:363:0: C0301: Line too long (137/100) (line-too-long)
OpTestConfiguration.py:365:0: C0301: Line too long (109/100) (line-too-long)
OpTestConfiguration.py:369:0: C0301: Line too long (104/100) (line-too-long)
OpTestConfiguration.py:370:0: C0301: Line too long (104/100) (line-too-long)
OpTestConfiguration.py:393:0: C0301: Line too long (106/100) (line-too-long)
OpTestConfiguration.py:394:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:427:0: C0301: Line too long (140/100) (line-too-long)
OpTestConfiguration.py:592:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestConfiguration.py:594:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
OpTestConfiguration.py:604:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestConfiguration.py:607:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestConfiguration.py:609:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
OpTestConfiguration.py:615:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestConfiguration.py:730:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestConfiguration.py:850:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:920:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:954:0: C0301: Line too long (106/100) (line-too-long)
OpTestConfiguration.py:955:0: C0301: Line too long (101/100) (line-too-long)
OpTestConfiguration.py:956:0: C0301: Line too long (109/100) (line-too-long)
OpTestConfiguration.py:980:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
OpTestConfiguration.py:981:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:985:0: C0301: Line too long (113/100) (line-too-long)
OpTestConfiguration.py:989:0: C0301: Line too long (112/100) (line-too-long)
OpTestConfiguration.py:1:0: C0302: Too many lines in module (1047/1000) (too-many-lines)
OpTestConfiguration.py:568:9: W0511: FIXME: Passing machine_state doesn't work at all with qemu or mambo (fixme)
OpTestConfiguration.py:1:0: C0114: Missing module docstring (missing-module-docstring)
OpTestConfiguration.py:1:0: C0103: Module name "OpTestConfiguration" doesn't conform to snake_case naming style (invalid-name)
OpTestConfiguration.py:54:12: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)
OpTestConfiguration.py:57:0: C0103: Constant name "qemu_default" doesn't conform to UPPER_CASE naming style (invalid-name)
OpTestConfiguration.py:58:0: C0103: Constant name "mambo_default" doesn't conform to UPPER_CASE naming style (invalid-name)
OpTestConfiguration.py:59:0: C0103: Constant name "mambo_initial_run_script" doesn't conform to UPPER_CASE naming style (invalid-name)
OpTestConfiguration.py:60:0: C0103: Constant name "mambo_autorun" doesn't conform to UPPER_CASE naming style (invalid-name)
OpTestConfiguration.py:61:0: C0103: Constant name "mambo_timeout_factor" doesn't conform to UPPER_CASE naming style (invalid-name)
OpTestConfiguration.py:153:0: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:153:0: R0914: Too many local variables (20/15) (too-many-locals)
OpTestConfiguration.py:236:4: C0103: Variable name "bmcChoices" doesn't conform to snake_case naming style (invalid-name)
OpTestConfiguration.py:239:4: C0206: Consider iterating with .items() (consider-using-dict-items)
OpTestConfiguration.py:240:8: C0103: Variable name "bmcChoices" doesn't conform to snake_case naming style (invalid-name)
OpTestConfiguration.py:153:0: R0915: Too many statements (149/50) (too-many-statements)
OpTestConfiguration.py:467:0: C0115: Missing class docstring (missing-class-docstring)
OpTestConfiguration.py:572:16: C0103: Attribute name "startState" doesn't conform to snake_case naming style (invalid-name)
OpTestConfiguration.py:467:0: R0902: Too many instance attributes (22/7) (too-many-instance-attributes)
OpTestConfiguration.py:468:4: R1711: Useless return at end of function or method (useless-return)
OpTestConfiguration.py:500:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:506:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:519:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:525:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:547:12: W0719: Raising too general exception: Exception (broad-exception-raised)
OpTestConfiguration.py:547:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:560:8: C0206: Consider iterating with .items() (consider-using-dict-items)
OpTestConfiguration.py:569:11: C0121: Comparison 'self.args.machine_state == None' should be 'self.args.machine_state is None' (singleton-comparison)
OpTestConfiguration.py:576:12: C0103: Variable name "stateMap" doesn't conform to snake_case naming style (invalid-name)
OpTestConfiguration.py:586:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:599:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:618:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:626:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:628:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:647:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:647:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:649:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:649:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:667:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:667:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:674:15: W0718: Catching too general exception Exception (broad-exception-caught)
OpTestConfiguration.py:673:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:673:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:682:15: W0718: Catching too general exception Exception (broad-exception-caught)
OpTestConfiguration.py:684:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:684:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:689:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:703:19: W0718: Catching too general exception Exception (broad-exception-caught)
OpTestConfiguration.py:705:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:705:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:706:39: E1101: Instance of 'Exception' has no 'message' member (no-member)
OpTestConfiguration.py:712:37: E1101: Instance of 'Exception' has no 'message' member (no-member)
OpTestConfiguration.py:715:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
OpTestConfiguration.py:718:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:718:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:719:20: W0707: Consider explicitly re-raising using 'raise rollup_exception from e' (raise-missing-from)
OpTestConfiguration.py:722:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestConfiguration.py:722:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:586:4: R0912: Too many branches (18/12) (too-many-branches)
OpTestConfiguration.py:586:4: R0915: Too many statements (77/50) (too-many-statements)
OpTestConfiguration.py:651:28: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
OpTestConfiguration.py:728:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:736:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:744:15: W0718: Catching too general exception Exception (broad-exception-caught)
OpTestConfiguration.py:755:16: W0707: Consider explicitly re-raising using 'raise ParameterCheck(message="OpTestSystem PingFunc fails to ping '{}', check your configuration and setup, see Exception details: {}".format(self.args.bmc_ip, e)) from e' (raise-missing-from)
OpTestConfiguration.py:755:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:866:20: W0719: Raising too general exception: Exception (broad-exception-raised)
OpTestConfiguration.py:981:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:985:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:989:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:1012:16: W0719: Raising too general exception: Exception (broad-exception-raised)
OpTestConfiguration.py:1012:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestConfiguration.py:736:4: R0912: Too many branches (23/12) (too-many-branches)
OpTestConfiguration.py:736:4: R0915: Too many statements (80/50) (too-many-statements)
OpTestConfiguration.py:1025:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1028:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1031:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1034:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1037:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1040:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:1043:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestConfiguration.py:531:8: W0201: Attribute 'defaults' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:572:16: W0201: Attribute 'startState' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:574:16: W0201: Attribute 'startState' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:583:12: W0201: Attribute 'startState' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:599:8: W0201: Attribute 'outsuffix' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:623:8: W0201: Attribute 'outsuffix' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:603:8: W0201: Attribute 'output' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:614:8: W0201: Attribute 'logdir' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:651:8: W0201: Attribute 'logfile_proc' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:658:8: W0201: Attribute 'logfile' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:809:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:830:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:875:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:900:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:946:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:973:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:999:16: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:1008:22: W0201: Attribute 'op_system' defined outside __init__ (attribute-defined-outside-init)
OpTestConfiguration.py:1047:0: W0604: Using the global statement at the module level (global-at-module-level)
OpTestConfiguration.py:25:0: C0411: standard import "atexit" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:26:0: C0411: standard import "argparse" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:27:0: C0411: standard import "time" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:28:0: C0411: standard import "traceback" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:29:0: C0411: standard import "datetime.datetime" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:30:0: C0411: standard import "subprocess" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:31:0: C0411: standard import "sys" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:32:0: C0411: standard import "configparser" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:33:0: C0411: standard import "errno" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.OpTestCronus.OpTestCronus", "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
OpTestConfiguration.py:35:0: C0411: standard import "logging" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants", "OpTestLogger"  (wrong-import-order)
OpTestConfiguration.py:49:0: C0411: standard import "importlib" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants", "OpTestLogger"  (wrong-import-order)
OpTestConfiguration.py:50:0: C0411: standard import "os" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants", "OpTestLogger"  (wrong-import-order)
OpTestConfiguration.py:51:0: C0411: standard import "stat" should be placed before first party imports "common", "common.OpTestBMC.OpTestBMC", "common.OpTestFSP.OpTestFSP" (...) "common.Exceptions.HostLocker", "common.OpTestConstants.OpTestConstants", "OpTestLogger"  (wrong-import-order)
OpTestConfiguration.py:23:0: W0611: Unused HostLocker imported from common.Exceptions (unused-import)
OpTestConfiguration.py:23:0: W0611: Unused AES imported from common.Exceptions (unused-import)
OpTestConfiguration.py:52:0: W0611: Unused import addons (unused-import)
************* Module OpTestLogger
OpTestLogger.py:93:0: C0301: Line too long (111/100) (line-too-long)
OpTestLogger.py:101:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestLogger.py:104:0: C0301: Line too long (116/100) (line-too-long)
OpTestLogger.py:116:0: C0301: Line too long (117/100) (line-too-long)
OpTestLogger.py:123:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestLogger.py:126:0: C0301: Line too long (121/100) (line-too-long)
OpTestLogger.py:149:0: C0301: Line too long (117/100) (line-too-long)
OpTestLogger.py:158:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
OpTestLogger.py:161:0: C0301: Line too long (121/100) (line-too-long)
OpTestLogger.py:1:0: C0114: Missing module docstring (missing-module-docstring)
OpTestLogger.py:1:0: C0103: Module name "OpTestLogger" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:30:0: C0115: Missing class docstring (missing-class-docstring)
OpTestLogger.py:34:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestLogger.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestLogger.py:55:8: C0103: Attribute name "maxBytes_logger_file" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:56:8: C0103: Attribute name "maxBytes_logger_debug_file" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:57:8: C0103: Attribute name "backupCount_logger_files" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:58:8: C0103: Attribute name "backupCount_debug_files" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:43:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
OpTestLogger.py:83:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:89:50: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:91:4: C0103: Method name "setUpLoggerFile" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:98:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestLogger.py:98:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:111:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestLogger.py:111:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:114:4: C0103: Method name "setUpLoggerDebugFile" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:120:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestLogger.py:120:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:133:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestLogger.py:133:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
OpTestLogger.py:136:4: C0103: Method name "setUpChildLogger" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:147:4: C0103: Method name "setUpCustomLoggerDebugFile" doesn't conform to snake_case naming style (invalid-name)
OpTestLogger.py:169:39: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
OpTestLogger.py:169:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
OpTestLogger.py:155:8: W0201: Attribute 'optest_custom_logger' defined outside __init__ (attribute-defined-outside-init)
OpTestLogger.py:173:0: W0604: Using the global statement at the module level (global-at-module-level)
OpTestLogger.py:24:0: W0611: Unused import sys (unused-import)
OpTestLogger.py:25:0: W0611: Unused datetime imported from datetime (unused-import)
************* Module setup
autopylint/setup.py:9:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
************* Module tests.test_repair_regex
autopylint/tests/test_repair_regex.py:162:0: C0305: Trailing newlines (trailing-newlines)
autopylint/tests/test_repair_regex.py:6:0: E0401: Unable to import 'pytest' (import-error)
autopylint/tests/test_repair_regex.py:8:0: E0401: Unable to import 'src.python.autopylint.repair_regex' (import-error)
autopylint/tests/test_repair_regex.py:8:0: E0611: No name 'python' in module 'src' (no-name-in-module)
autopylint/tests/test_repair_regex.py:14:0: C0115: Missing class docstring (missing-class-docstring)
autopylint/tests/test_repair_regex.py:14:0: R0205: Class 'TestAutopylintRegex' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
autopylint/tests/test_repair_regex.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:121:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:133:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:145:4: C0116: Missing function or method docstring (missing-function-docstring)
autopylint/tests/test_repair_regex.py:157:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module build.lib.src.repair_regex
autopylint/build/lib/src/repair_regex.py:20:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/repair_regex.py:25:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/repair_regex.py:31:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/repair_regex.py:38:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/repair_regex.py:47:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/repair_regex.py:50:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module build.lib.src.autopylint
autopylint/build/lib/src/autopylint.py:14:0: E0401: Unable to import 'sed.engine' (import-error)
autopylint/build/lib/src/autopylint.py:14:0: E0611: No name 'engine' in module 'sed' (no-name-in-module)
autopylint/build/lib/src/autopylint.py:98:0: R0914: Too many local variables (19/15) (too-many-locals)
autopylint/build/lib/src/autopylint.py:161:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:186:8: W0107: Unnecessary pass statement (unnecessary-pass)
autopylint/build/lib/src/autopylint.py:179:0: R0903: Too few public methods (1/2) (too-few-public-methods)
autopylint/build/lib/src/autopylint.py:189:0: R0205: Class 'EditorOptions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
autopylint/build/lib/src/autopylint.py:189:0: R0903: Too few public methods (0/2) (too-few-public-methods)
autopylint/build/lib/src/autopylint.py:209:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:216:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:217:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:218:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:221:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:243:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:245:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:266:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:272:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:276:27: W0613: Unused argument 'editor' (unused-argument)
autopylint/build/lib/src/autopylint.py:282:23: W0613: Unused argument 'editor' (unused-argument)
autopylint/build/lib/src/autopylint.py:298:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:302:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:316:17: W0613: Unused argument 'editor' (unused-argument)
autopylint/build/lib/src/autopylint.py:333:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:334:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:336:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:340:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:341:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:346:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:355:34: W0613: Unused argument 'editor' (unused-argument)
autopylint/build/lib/src/autopylint.py:395:22: W0613: Unused argument 'editor' (unused-argument)
autopylint/build/lib/src/autopylint.py:405:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:415:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:416:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:417:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:425:0: R0914: Too many local variables (16/15) (too-many-locals)
autopylint/build/lib/src/autopylint.py:432:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:466:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:476:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:490:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:507:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:508:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:516:0: R0914: Too many local variables (16/15) (too-many-locals)
autopylint/build/lib/src/autopylint.py:529:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:553:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:621:19: E1136: Value 'lens' is unsubscriptable (unsubscriptable-object)
autopylint/build/lib/src/autopylint.py:642:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:653:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:655:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:673:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:675:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:679:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:681:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/build/lib/src/autopylint.py:685:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module src.repair_regex
autopylint/src/repair_regex.py:20:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/repair_regex.py:25:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/repair_regex.py:31:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/repair_regex.py:38:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/repair_regex.py:47:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/repair_regex.py:50:9: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module src.autopylint
autopylint/src/autopylint.py:14:0: E0401: Unable to import 'sed.engine' (import-error)
autopylint/src/autopylint.py:14:0: E0611: No name 'engine' in module 'sed' (no-name-in-module)
autopylint/src/autopylint.py:98:0: R0914: Too many local variables (19/15) (too-many-locals)
autopylint/src/autopylint.py:161:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:186:8: W0107: Unnecessary pass statement (unnecessary-pass)
autopylint/src/autopylint.py:179:0: R0903: Too few public methods (1/2) (too-few-public-methods)
autopylint/src/autopylint.py:189:0: R0205: Class 'EditorOptions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
autopylint/src/autopylint.py:189:0: R0903: Too few public methods (0/2) (too-few-public-methods)
autopylint/src/autopylint.py:209:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:216:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:217:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:218:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:221:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:243:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:245:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:266:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:272:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:276:27: W0613: Unused argument 'editor' (unused-argument)
autopylint/src/autopylint.py:282:23: W0613: Unused argument 'editor' (unused-argument)
autopylint/src/autopylint.py:298:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:302:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:316:17: W0613: Unused argument 'editor' (unused-argument)
autopylint/src/autopylint.py:333:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:334:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:336:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:340:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:341:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:346:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:355:34: W0613: Unused argument 'editor' (unused-argument)
autopylint/src/autopylint.py:395:22: W0613: Unused argument 'editor' (unused-argument)
autopylint/src/autopylint.py:405:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:415:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:416:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:417:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:425:0: R0914: Too many local variables (16/15) (too-many-locals)
autopylint/src/autopylint.py:432:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:466:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:476:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:490:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:507:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:508:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:516:0: R0914: Too many local variables (16/15) (too-many-locals)
autopylint/src/autopylint.py:529:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:553:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:621:19: E1136: Value 'lens' is unsubscriptable (unsubscriptable-object)
autopylint/src/autopylint.py:642:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:653:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:655:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:673:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:675:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:679:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:681:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
autopylint/src/autopylint.py:685:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module common.OpTestASM
common/OpTestASM.py:1:0: C0103: Module name "OpTestASM" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:40:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestASM.py:42:0: W0404: Reimport 'subprocess' (imported line 38) (reimported)
common/OpTestASM.py:55:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestASM.py:56:23: C0103: Argument name "i_fspIP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:56:32: C0103: Argument name "i_fspUser" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:56:43: C0103: Argument name "i_fspPasswd" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:60:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestASM.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:92:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestASM.py:86:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestASM.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:98:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestASM.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:109:11: C0117: Consider changing "not len(self.cj) == 0" to "len(self.cj) != 0" (unnecessary-negation)
common/OpTestASM.py:121:15: C0117: Consider changing "not len(self.cj) == 0" to "len(self.cj) != 0" (unnecessary-negation)
common/OpTestASM.py:132:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestASM.py:117:8: W0612: Unused variable 'resp' (unused-variable)
common/OpTestASM.py:141:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:147:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:161:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:167:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:177:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:178:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestASM.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:181:38: C0103: Argument name "partitionId" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:181:55: C0103: Argument name "sessionId" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:182:32: C0103: Argument name "sessionTimeout" doesn't conform to snake_case naming style (invalid-name)
common/OpTestASM.py:195:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:206:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestASM.py:41:0: C0411: standard import "sys" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestASM.py:42:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestASM.py:47:0: C0411: standard import "http.cookiejar" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:48:0: C0411: standard import "urllib.request" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:49:0: C0411: standard import "urllib.parse" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:50:0: C0411: standard import "urllib.error" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:51:0: C0411: standard import "re" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:52:0: C0411: standard import "ssl" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" (wrong-import-order)
common/OpTestASM.py:42:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
common/OpTestASM.py:38:0: W0611: Unused import subprocess (unused-import)
common/OpTestASM.py:39:0: W0611: Unused import os (unused-import)
common/OpTestASM.py:40:0: W0611: Unused import pexpect (unused-import)
common/OpTestASM.py:41:0: W0611: Unused import sys (unused-import)
common/OpTestASM.py:44:0: W0611: Unused OpTestConstants imported from OpTestConstants as BMC_CONST (unused-import)
************* Module common.SerialConsole
common/SerialConsole.py:154:0: C0301: Line too long (107/100) (line-too-long)
common/SerialConsole.py:177:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/SerialConsole.py:179:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/SerialConsole.py:184:0: C0325: Unnecessary parens after 'raise' keyword (superfluous-parens)
common/SerialConsole.py:1:0: C0103: Module name "SerialConsole" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:40:0: E0401: Unable to import 'pexpect' (import-error)
common/SerialConsole.py:56:0: C0115: Missing class docstring (missing-class-docstring)
common/SerialConsole.py:56:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/SerialConsole.py:60:0: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:60:0: C0103: Function name "set_system_to_UNKNOWN_BAD" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:65:0: C0115: Missing class docstring (missing-class-docstring)
common/SerialConsole.py:87:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:88:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:89:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:65:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
common/SerialConsole.py:66:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/SerialConsole.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:103:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:106:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:110:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:114:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:136:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/SerialConsole.py:127:12: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:130:20: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/SerialConsole.py:135:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError('Failed to close serial console') from exc' (raise-missing-from)
common/SerialConsole.py:138:12: W0107: Unnecessary pass statement (unnecessary-pass)
common/SerialConsole.py:125:12: W0612: Unused variable 'rc_child' (unused-variable)
common/SerialConsole.py:127:12: W0612: Unused variable 'exitCode' (unused-variable)
common/SerialConsole.py:127:23: W0612: Unused variable 'signalstatus' (unused-variable)
common/SerialConsole.py:136:8: W0612: Unused variable 'e' (unused-variable)
common/SerialConsole.py:140:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:142:12: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
common/SerialConsole.py:153:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexpect.spawn', "OPexpect.spawn encountered a problem, command was '{}'".format(cmd), -1) from e' (raise-missing-from)
common/SerialConsole.py:154:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/SerialConsole.py:154:98: E0602: Undefined variable 'cmd' (undefined-variable)
common/SerialConsole.py:168:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/SerialConsole.py:168:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/SerialConsole.py:142:12: W0612: Unused variable 'rc_child' (unused-variable)
common/SerialConsole.py:151:8: W0612: Unused variable 'e' (unused-variable)
common/SerialConsole.py:172:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:184:16: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/SerialConsole.py:191:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:194:4: C0116: Missing function or method docstring (missing-function-docstring)
common/SerialConsole.py:92:8: W0201: Attribute 'system' defined outside __init__ (attribute-defined-outside-init)
common/SerialConsole.py:41:0: C0411: standard import "sys" should be placed before third party import "pexpect" (wrong-import-order)
common/SerialConsole.py:42:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
common/SerialConsole.py:52:0: C0411: standard import "logging" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestUtil.OpTestUtil" (...) "Exceptions.CommandFailed", "Exceptions.BMCDisconnected", ".OPexpect" (wrong-import-order)
common/SerialConsole.py:53:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestUtil.OpTestUtil" (...) "Exceptions.CommandFailed", "Exceptions.BMCDisconnected", ".OPexpect" (wrong-import-order)
common/SerialConsole.py:38:0: W0611: Unused import subprocess (unused-import)
common/SerialConsole.py:42:0: W0611: Unused import re (unused-import)
common/SerialConsole.py:49:0: W0611: Unused BMCDisconnected imported from Exceptions (unused-import)
common/SerialConsole.py:52:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestError
common/OpTestError.py:1:0: C0103: Module name "OpTestError" doesn't conform to snake_case naming style (invalid-name)
common/OpTestError.py:37:0: C0115: Missing class docstring (missing-class-docstring)
************* Module common.OpTestHMC
common/OpTestHMC.py:163:0: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestHMC.py:172:82: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestHMC.py:401:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestHMC.py:414:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestHMC.py:417:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestHMC.py:420:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestHMC.py:433:0: C0301: Line too long (111/100) (line-too-long)
common/OpTestHMC.py:452:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestHMC.py:455:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestHMC.py:474:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestHMC.py:492:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestHMC.py:502:0: C0301: Line too long (147/100) (line-too-long)
common/OpTestHMC.py:518:0: C0301: Line too long (127/100) (line-too-long)
common/OpTestHMC.py:527:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestHMC.py:564:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestHMC.py:582:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestHMC.py:616:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestHMC.py:618:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestHMC.py:636:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestHMC.py:692:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestHMC.py:708:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestHMC.py:1:0: C0302: Too many lines in module (1274/1000) (too-many-lines)
common/OpTestHMC.py:1274:0: C0305: Trailing newlines (trailing-newlines)
common/OpTestHMC.py:1:0: C0103: Module name "OpTestHMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHMC.py:38:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestHMC.py:61:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestHMC.py:74:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestHMC.py:85:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestHMC.py:85:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestHMC.py:90:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestHMC.py:91:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestHMC.py:91:4: R0913: Too many arguments (16/5) (too-many-arguments)
common/OpTestHMC.py:91:4: R0914: Too many local variables (16/15) (too-many-locals)
common/OpTestHMC.py:96:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestHMC.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:107:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestHMC.py:1170:12: W0201: Attribute 'logfile' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHMC.py:1172:16: W0201: Attribute 'logfile_read' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHMC.py:1174:16: W0201: Attribute 'logfile_read' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHMC.py:1189:12: W0201: Attribute 'delaybeforesend' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHMC.py:1241:8: W0201: Attribute 'buffer' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHMC.py:160:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHMC.py:161:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHMC.py:162:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHMC.py:111:0: R0902: Too many instance attributes (31/7) (too-many-instance-attributes)
common/OpTestHMC.py:115:4: R0913: Too many arguments (21/5) (too-many-arguments)
common/OpTestHMC.py:115:4: R0914: Too many local variables (21/15) (too-many-locals)
common/OpTestHMC.py:172:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:175:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestHMC.py:164:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHMC.py:188:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:191:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:193:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:201:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:210:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:219:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:235:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:254:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:257:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:272:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:283:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:293:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:319:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:336:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
common/OpTestHMC.py:339:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
common/OpTestHMC.py:341:8: W0106: Expression "self.set_lpar_cfg('io_slots="' + ','.join(exisitng_io_slots + new_slots) + '"', lpar_profile=lpar_profile) if new_slots else log.info('No new slots are added to lpar profile')" is assigned to nothing (expression-not-assigned)
common/OpTestHMC.py:359:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
common/OpTestHMC.py:359:40: E0602: Undefined variable 'add_ioslot' (undefined-variable)
common/OpTestHMC.py:362:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
common/OpTestHMC.py:363:8: W0106: Expression "self.set_lpar_cfg('io_slots="' + ','.join(set(exisitng_io_slots) - set(new_slots)) + '"', lpar_profile=lpar_profile) if new_slots else log.info('No new slots are removed from lpar profile')" is assigned to nothing (expression-not-assigned)
common/OpTestHMC.py:377:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
common/OpTestHMC.py:378:21: R0123: In 'assigned_io_slots is 'none'', use '==' when comparing constant literals not 'is' ('assigned_io_slots == 'none'') (literal-comparison)
common/OpTestHMC.py:401:4: R0913: Too many arguments (10/5) (too-many-arguments)
common/OpTestHMC.py:414:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:420:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:433:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:441:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:452:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:455:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:465:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:474:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:483:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:492:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:502:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:518:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:527:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:536:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:544:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:554:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:564:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:572:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:582:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:591:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:600:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:616:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:618:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:620:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHMC.py:633:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:654:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:672:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:686:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:688:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:688:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:692:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestHMC.py:705:11: C0121: Comparison 'src_mg_system == None' should be 'src_mg_system is None' (singleton-comparison)
common/OpTestHMC.py:705:36: C0121: Comparison 'dest_mg_system == None' should be 'dest_mg_system is None' (singleton-comparison)
common/OpTestHMC.py:708:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:710:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:713:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:715:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:715:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:718:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:722:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:722:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:727:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:727:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:743:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:747:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:753:4: R0913: Too many arguments (10/5) (too-many-arguments)
common/OpTestHMC.py:771:11: C0121: Comparison 'src_mg_system == None' should be 'src_mg_system is None' (singleton-comparison)
common/OpTestHMC.py:771:36: C0121: Comparison 'dest_mg_system == None' should be 'dest_mg_system is None' (singleton-comparison)
common/OpTestHMC.py:774:11: C0121: Comparison 'target_hmc_ip == None' should be 'target_hmc_ip is None' (singleton-comparison)
common/OpTestHMC.py:774:36: C0121: Comparison 'target_hmc_user == None' should be 'target_hmc_user is None' (singleton-comparison)
common/OpTestHMC.py:774:63: C0121: Comparison 'target_hmc_passwd == None' should be 'target_hmc_passwd is None' (singleton-comparison)
common/OpTestHMC.py:778:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:785:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:788:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:803:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:805:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:808:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:808:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:810:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHMC.py:810:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:823:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:840:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:859:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:866:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestHMC.py:878:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:888:51: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:889:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:891:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestHMC.py:893:12: W4902: Using deprecated method warn() (deprecated-method)
common/OpTestHMC.py:893:12: W4902: Using deprecated method warn() (deprecated-method)
common/OpTestHMC.py:111:0: R0904: Too many public methods (50/20) (too-many-public-methods)
common/OpTestHMC.py:925:4: R0913: Too many arguments (21/5) (too-many-arguments)
common/OpTestHMC.py:925:4: R0914: Too many local variables (21/15) (too-many-locals)
common/OpTestHMC.py:931:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestHMC.py:941:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:946:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:949:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:952:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:955:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:958:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:961:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHMC.py:965:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)
common/OpTestHMC.py:970:4: R0913: Too many arguments (19/5) (too-many-arguments)
common/OpTestHMC.py:970:4: R0914: Too many local variables (19/15) (too-many-locals)
common/OpTestHMC.py:1008:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestHMC.py:1135:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestHMC.py:1134:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise 'HMC Console: failed to close console' from exc' (raise-missing-from)
common/OpTestHMC.py:1134:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestHMC.py:1165:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHMC.py:1184:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexpect.spawn', 'OPexpect.spawn encountered a problem: ' + str(exp), -1) from exp' (raise-missing-from)
common/OpTestHMC.py:39:0: C0411: standard import "shlex" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestHMC.py:40:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestHMC.py:41:0: C0411: standard import "string" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestHMC.py:42:0: C0411: standard import "random" should be placed before third party import "pexpect" (wrong-import-order)
************* Module common.OpTestMambo
common/OpTestMambo.py:83:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestMambo.py:1:0: C0103: Module name "OpTestMambo" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:27:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestMambo.py:40:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestMambo.py:40:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestMambo.py:88:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:89:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:90:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:45:0: R0902: Too many instance attributes (21/7) (too-many-instance-attributes)
common/OpTestMambo.py:51:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestMambo.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:129:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestMambo.py:119:12: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:122:20: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestMambo.py:128:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestMambo.py:131:12: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestMambo.py:118:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestMambo.py:119:12: W0612: Unused variable 'exitCode' (unused-variable)
common/OpTestMambo.py:119:23: W0612: Unused variable 'signalstatus' (unused-variable)
common/OpTestMambo.py:126:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestMambo.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:135:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestMambo.py:143:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestMambo.py:147:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestMambo.py:149:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestMambo.py:159:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestMambo.py:165:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestMambo.py:165:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestMambo.py:172:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexpect.spawn', 'OPexpect.spawn encountered a problem: ' + str(e), -1) from e' (raise-missing-from)
common/OpTestMambo.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:200:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:206:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:212:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:228:42: W0613: Unused argument 'i_timeout' (unused-argument)
common/OpTestMambo.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:235:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:241:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:244:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:248:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestMambo.py:249:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestMambo.py:255:17: W0613: Unused argument 'prompt' (unused-argument)
common/OpTestMambo.py:256:17: W0613: Unused argument 'block_setup_term' (unused-argument)
common/OpTestMambo.py:257:17: W0613: Unused argument 'delaybeforesend' (unused-argument)
common/OpTestMambo.py:271:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:274:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:277:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:277:26: W0613: Unused argument 'command' (unused-argument)
common/OpTestMambo.py:277:35: W0613: Unused argument 'timeout' (unused-argument)
common/OpTestMambo.py:277:47: W0613: Unused argument 'retry' (unused-argument)
common/OpTestMambo.py:281:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:284:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:287:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:290:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:293:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:296:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:299:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:302:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:305:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:308:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestMambo.py:28:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestMambo.py:29:0: C0411: standard import "os" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestMambo.py:35:0: C0411: standard import "logging" should be placed before third party import "pexpect", first party import "common.Exceptions.CommandFailed", and local imports ".OPexpect", "OpTestUtil.OpTestUtil" (wrong-import-order)
common/OpTestMambo.py:36:0: C0411: first party import "OpTestLogger" should be placed before local imports ".OPexpect", "OpTestUtil.OpTestUtil" (wrong-import-order)
common/OpTestMambo.py:28:0: W0611: Unused import subprocess (unused-import)
common/OpTestMambo.py:35:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestVIOS
common/OpTestVIOS.py:81:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestVIOS.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestVIOS.py:1:0: C0103: Module name "OpTestVIOS" doesn't conform to snake_case naming style (invalid-name)
common/OpTestVIOS.py:42:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestVIOS.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestVIOS.py:53:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestVIOS.py:64:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestVIOS.py:74:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestVIOS.py:75:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestVIOS.py:77:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestVIOS.py:80:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestVIOS.py:81:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestVIOS.py:81:12: W4902: Using deprecated method warn() (deprecated-method)
common/OpTestVIOS.py:81:12: W4902: Using deprecated method warn() (deprecated-method)
common/OpTestVIOS.py:81:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module common.OpTestSSH
common/OpTestSSH.py:80:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestSSH.py:155:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
common/OpTestSSH.py:183:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSSH.py:211:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestSSH.py:213:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSSH.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestSSH.py:1:0: C0103: Module name "OpTestSSH" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:27:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestSSH.py:42:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestSSH.py:42:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestSSH.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:47:0: C0103: Function name "set_system_to_UNKNOWN_BAD" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:53:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestSSH.py:81:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:82:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:83:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:53:0: R0902: Too many instance attributes (22/7) (too-many-instance-attributes)
common/OpTestSSH.py:54:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestSSH.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:130:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSSH.py:118:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSSH.py:118:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSSH.py:120:12: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:123:20: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSSH.py:129:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestSSH.py:132:12: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestSSH.py:116:12: W0612: Unused variable 'close_rc' (unused-variable)
common/OpTestSSH.py:119:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestSSH.py:120:12: W0612: Unused variable 'exitCode' (unused-variable)
common/OpTestSSH.py:120:23: W0612: Unused variable 'signalstatus' (unused-variable)
common/OpTestSSH.py:127:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSSH.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:136:12: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
common/OpTestSSH.py:141:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSSH.py:143:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSSH.py:144:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSSH.py:175:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexepct.spawn encountered a problem', e, -1) from e' (raise-missing-from)
common/OpTestSSH.py:186:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSSH.py:186:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSSH.py:136:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestSSH.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:218:16: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestSSH.py:224:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSSH.py:159:12: W0201: Attribute 'log' defined outside __init__ (attribute-defined-outside-init)
common/OpTestSSH.py:161:12: W0201: Attribute 'log' defined outside __init__ (attribute-defined-outside-init)
common/OpTestSSH.py:163:12: W0201: Attribute 'log' defined outside __init__ (attribute-defined-outside-init)
common/OpTestSSH.py:23:0: C0411: standard import "re" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:24:0: C0411: standard import "sys" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:25:0: C0411: standard import "os" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:26:0: C0411: standard import "time" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:27:0: C0411: third party import "pexpect" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:29:0: C0411: standard import "logging" should be placed before third party import "pexpect" and local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:30:0: C0411: first party import "OpTestLogger" should be placed before local imports ".OpTestSystem", "OpTestUtil.OpTestUtil", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestSSH.py:22:0: W0611: Unused SSHSessionDisconnected imported from Exceptions (unused-import)
common/OpTestSSH.py:23:0: W0611: Unused import re (unused-import)
common/OpTestSSH.py:29:0: W0611: Unused import logging (unused-import)
************* Module common.OPexpect
common/OPexpect.py:74:24: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OPexpect.py:74:36: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OPexpect.py:75:24: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OPexpect.py:75:40: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OPexpect.py:116:61: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OPexpect.py:1:0: C0103: Module name "OPexpect" doesn't conform to snake_case naming style (invalid-name)
common/OPexpect.py:37:0: E0401: Unable to import 'pexpect' (import-error)
common/OPexpect.py:38:0: W0401: Wildcard import Exceptions (wildcard-import)
common/OPexpect.py:41:0: C0115: Missing class docstring (missing-class-docstring)
common/OPexpect.py:41:0: C0103: Class name "spawn" doesn't conform to PascalCase naming style (invalid-name)
common/OPexpect.py:43:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OPexpect.py:43:4: R0913: Too many arguments (16/5) (too-many-arguments)
common/OPexpect.py:43:4: R0914: Too many local variables (16/15) (too-many-locals)
common/OPexpect.py:51:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:45:38: W0613: Unused argument 'echo' (unused-argument)
common/OPexpect.py:45:49: W0613: Unused argument 'preexec_fn' (unused-argument)
common/OPexpect.py:46:58: W0613: Unused argument 'dimensions' (unused-argument)
common/OPexpect.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OPexpect.py:60:4: R1711: Useless return at end of function or method (useless-return)
common/OPexpect.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OPexpect.py:87:12: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:112:20: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:127:15: R1714: Consider merging these comparisons with 'in' by using 'r in (1, 8)'. Use a set instead if elements are hashable. (consider-using-in)
common/OPexpect.py:131:15: R1714: Consider merging these comparisons with 'in' by using 'r in (4, 6, 7)'. Use a set instead if elements are hashable. (consider-using-in)
common/OPexpect.py:147:16: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:161:20: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:164:20: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:167:20: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:170:20: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OPexpect.py:64:4: R0912: Too many branches (22/12) (too-many-branches)
common/OPexpect.py:64:4: R0915: Too many statements (61/50) (too-many-statements)
common/OPexpect.py:172:12: W0612: Unused variable 't' (unused-variable)
common/OPexpect.py:61:8: W0201: Attribute 'op_test_system' defined outside __init__ (attribute-defined-outside-init)
common/OPexpect.py:38:0: W0614: Unused import(s) SSHSessionDisconnected, BMCDisconnected, NoKernelConfig, KernelModuleNotLoaded, KernelConfigNotSet, HostbootShutdown, UnexpectedCase, WaitForIt, RecoverFailed, UnknownStateTransition, HostLocker, HTTPCheck, OpExit, AES, ParameterCheck, StoppingSystem and ConsoleSettings from wildcard import of Exceptions (unused-wildcard-import)
************* Module common.OpTestFSP
common/OpTestFSP.py:137:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestFSP.py:282:0: W0301: Unnecessary semicolon (unnecessary-semicolon)
common/OpTestFSP.py:393:63: W1401: Anomalous backslash in string: '\ '. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestFSP.py:1:0: C0103: Module name "OpTestFSP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:42:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestFSP.py:44:0: W0404: Reimport 'subprocess' (imported line 40) (reimported)
common/OpTestFSP.py:66:8: C0103: Attribute name "cv_ASM" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:67:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:68:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:461:8: C0103: Attribute name "fsp_MTM" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:56:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
common/OpTestFSP.py:61:23: C0103: Argument name "i_fspIP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:61:32: C0103: Argument name "i_fspUser" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:61:43: C0103: Argument name "i_fspPasswd" doesn't conform to snake_case naming style (invalid-name)
common/OpTestFSP.py:61:4: R0913: Too many arguments (8/5) (too-many-arguments)
common/OpTestFSP.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:84:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:99:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:114:8: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestFSP.py:123:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:137:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:187:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestFSP.py:189:13: R1714: Consider merging these comparisons with 'in' by using 'state in ('runtime', 'ipling')'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestFSP.py:193:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:222:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:227:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:262:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:312:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:320:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
common/OpTestFSP.py:340:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:357:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:358:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:394:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:404:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:414:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:425:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:427:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:439:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:448:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestFSP.py:451:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:471:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestFSP.py:476:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:479:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:482:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:485:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:488:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:491:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestFSP.py:95:8: W0201: Attribute 'fspc' defined outside __init__ (attribute-defined-outside-init)
common/OpTestFSP.py:98:8: W0201: Attribute 'fsp_name' defined outside __init__ (attribute-defined-outside-init)
common/OpTestFSP.py:461:8: W0201: Attribute 'fsp_MTM' defined outside __init__ (attribute-defined-outside-init)
common/OpTestFSP.py:56:0: R0904: Too many public methods (40/20) (too-many-public-methods)
common/OpTestFSP.py:43:0: C0411: standard import "sys" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestFSP.py:44:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestFSP.py:44:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
common/OpTestFSP.py:40:0: W0611: Unused import subprocess (unused-import)
common/OpTestFSP.py:41:0: W0611: Unused import os (unused-import)
common/OpTestFSP.py:42:0: W0611: Unused import pexpect (unused-import)
common/OpTestFSP.py:43:0: W0611: Unused import sys (unused-import)
************* Module common.OpTestHost
common/OpTestHost.py:53:0: C0301: Line too long (112/100) (line-too-long)
common/OpTestHost.py:199:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestHost.py:319:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestHost.py:879:0: C0301: Line too long (152/100) (line-too-long)
common/OpTestHost.py:915:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestHost.py:1:0: C0302: Too many lines in module (1067/1000) (too-many-lines)
common/OpTestHost.py:763:35: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestHost.py:776:61: W1401: Anomalous backslash in string: '\;'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestHost.py:835:25: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestHost.py:1:0: C0103: Module name "OpTestHost" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:45:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestHost.py:46:0: W0404: Reimport 'subprocess' (imported line 39) (reimported)
common/OpTestHost.py:62:0: R0902: Too many instance attributes (17/7) (too-many-instance-attributes)
common/OpTestHost.py:67:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestHost.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:102:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:106:12: W0719: Raising too general exception: Exception (broad-exception-raised)
common/OpTestHost.py:108:8: C0103: Variable name "dev_sdX" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:109:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:110:8: C0103: Variable name "dev_sdX" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:112:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:102:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHost.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:119:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:122:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:125:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:127:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:128:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:130:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:140:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:131:23: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestHost.py:149:4: C0103: Method name "host_get_OS_Level" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:162:8: W0612: Unused variable 'l_rc' (unused-variable)
common/OpTestHost.py:184:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:197:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:199:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:199:11: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestHost.py:206:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:208:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:222:12: W0707: Consider explicitly re-raising using 'except OpTestError as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:229:8: C0103: Variable name "l_logFile" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:229:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:232:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestHost.py:240:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestHost.py:241:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestHost.py:251:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg) from c' (raise-missing-from)
common/OpTestHost.py:246:12: W0612: Unused variable 'l_res' (unused-variable)
common/OpTestHost.py:255:38: W0613: Unused argument 'console' (unused-argument)
common/OpTestHost.py:286:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:289:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:291:12: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise NoKernelConfig(i_kernel, l_file) from exc' (raise-missing-from)
common/OpTestHost.py:294:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:318:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:319:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:321:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:333:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestHost.py:324:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHost.py:330:12: W0612: Unused variable 'o' (unused-variable)
common/OpTestHost.py:363:16: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:342:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHost.py:358:16: W0612: Unused variable 'res' (unused-variable)
common/OpTestHost.py:373:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:374:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:375:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:384:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:392:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:394:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:396:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg) from c' (raise-missing-from)
common/OpTestHost.py:398:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:399:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:400:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHost.py:400:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:425:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestHost.py:425:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:426:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:468:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:471:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:472:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:481:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:509:19: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestHost.py:526:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:541:12: W0707: Consider explicitly re-raising using 'except OpTestError as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:546:8: C0103: Variable name "l_logFile" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:546:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:549:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestHost.py:532:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHost.py:573:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestHost.py:598:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:607:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:610:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:616:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:624:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:627:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:630:12: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
common/OpTestHost.py:630:15: R1714: Consider merging these comparisons with 'in' by using 'entry in ('initiate_dump', '')'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestHost.py:633:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:645:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:647:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:703:20: W0707: Consider explicitly re-raising using 'raise OpTestError('kdump-tools service is failed to stop') from cf' (raise-missing-from)
common/OpTestHost.py:715:20: W0707: Consider explicitly re-raising using 'raise OpTestError('kdump service is failed to stop') from cf' (raise-missing-from)
common/OpTestHost.py:731:16: W0707: Consider explicitly re-raising using 'raise OpTestError('kdump service is failed to start') from cf' (raise-missing-from)
common/OpTestHost.py:742:16: W0707: Consider explicitly re-raising using 'raise OpTestError('kdump service is failed to start') from cf' (raise-missing-from)
common/OpTestHost.py:744:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:746:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:751:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:753:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:758:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:763:12: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
common/OpTestHost.py:767:12: W0719: Raising too general exception: Exception (broad-exception-raised)
common/OpTestHost.py:772:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:779:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:780:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:782:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:783:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:801:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:811:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:820:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:822:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestHost.py:829:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:833:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:839:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:848:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestHost.py:850:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:857:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:859:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg + str(e)) from e' (raise-missing-from)
common/OpTestHost.py:861:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:868:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:871:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg + str(e)) from e' (raise-missing-from)
common/OpTestHost.py:873:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:873:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestHost.py:899:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:899:12: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestHost.py:899:53: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestHost.py:915:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestHost.py:915:12: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestHost.py:932:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:935:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:936:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:937:8: W0612: Unused variable 'l_res' (unused-variable)
common/OpTestHost.py:939:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:940:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:942:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:944:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:946:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:957:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:958:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:959:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:960:8: W0612: Unused variable 'l_res' (unused-variable)
common/OpTestHost.py:962:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:963:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:965:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:968:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestHost.py:969:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:972:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:976:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestHost.py:987:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestHost.py:499:8: W0201: Attribute 'pci_domains' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHost.py:816:12: W0201: Attribute 'proc_gen' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHost.py:821:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
common/OpTestHost.py:62:0: R0904: Too many public methods (66/20) (too-many-public-methods)
common/OpTestHost.py:1002:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestHost.py:1005:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestHost.py:1060:4: E0102: method already defined line 1018 (function-redefined)
common/OpTestHost.py:46:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestHost.py:55:0: C0411: standard import "logging" should be placed before third party import "pexpect", first party import "OpTestConfiguration", and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestSSH.OpTestSSH", ".OpTestQemu", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestHost.py:56:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestSSH.OpTestSSH", ".OpTestQemu", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestHost.py:46:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
common/OpTestHost.py:36:0: W0611: Unused import string (unused-import)
common/OpTestHost.py:38:0: W0611: Unused import random (unused-import)
common/OpTestHost.py:41:0: W0611: Unused import telnetlib (unused-import)
common/OpTestHost.py:42:0: W0611: Unused import socket (unused-import)
common/OpTestHost.py:43:0: W0611: Unused import select (unused-import)
common/OpTestHost.py:44:0: W0611: Unused import pty (unused-import)
common/OpTestHost.py:45:0: W0611: Unused import pexpect (unused-import)
common/OpTestHost.py:48:0: W0611: Unused import OpTestConfiguration (unused-import)
common/OpTestHost.py:53:0: W0611: Unused ParameterCheck imported from Exceptions (unused-import)
common/OpTestHost.py:55:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestUtil
common/OpTestUtil.py:90:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestUtil.py:126:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
common/OpTestUtil.py:175:0: C0301: Line too long (114/100) (line-too-long)
common/OpTestUtil.py:177:0: C0301: Line too long (114/100) (line-too-long)
common/OpTestUtil.py:213:87: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestUtil.py:441:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestUtil.py:464:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestUtil.py:473:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestUtil.py:479:0: C0301: Line too long (112/100) (line-too-long)
common/OpTestUtil.py:493:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestUtil.py:573:0: C0301: Line too long (114/100) (line-too-long)
common/OpTestUtil.py:577:0: C0301: Line too long (111/100) (line-too-long)
common/OpTestUtil.py:613:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestUtil.py:614:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestUtil.py:897:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestUtil.py:1124:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestUtil.py:1132:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1148:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1163:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestUtil.py:1172:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1174:0: C0301: Line too long (135/100) (line-too-long)
common/OpTestUtil.py:1180:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:1184:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestUtil.py:1189:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1193:0: C0301: Line too long (126/100) (line-too-long)
common/OpTestUtil.py:1195:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestUtil.py:1329:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestUtil.py:1332:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestUtil.py:1349:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestUtil.py:1351:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestUtil.py:1409:0: C0301: Line too long (125/100) (line-too-long)
common/OpTestUtil.py:1444:0: C0301: Line too long (133/100) (line-too-long)
common/OpTestUtil.py:1454:0: C0301: Line too long (111/100) (line-too-long)
common/OpTestUtil.py:1455:0: C0301: Line too long (116/100) (line-too-long)
common/OpTestUtil.py:1457:0: C0301: Line too long (148/100) (line-too-long)
common/OpTestUtil.py:1463:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:1464:0: C0301: Line too long (112/100) (line-too-long)
common/OpTestUtil.py:1466:0: C0301: Line too long (138/100) (line-too-long)
common/OpTestUtil.py:1494:0: C0301: Line too long (148/100) (line-too-long)
common/OpTestUtil.py:1501:0: C0301: Line too long (134/100) (line-too-long)
common/OpTestUtil.py:1503:0: C0301: Line too long (144/100) (line-too-long)
common/OpTestUtil.py:1525:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:1528:0: C0301: Line too long (152/100) (line-too-long)
common/OpTestUtil.py:1534:0: C0301: Line too long (132/100) (line-too-long)
common/OpTestUtil.py:1537:0: C0301: Line too long (154/100) (line-too-long)
common/OpTestUtil.py:1545:0: C0301: Line too long (127/100) (line-too-long)
common/OpTestUtil.py:1548:0: C0301: Line too long (153/100) (line-too-long)
common/OpTestUtil.py:1616:0: C0301: Line too long (120/100) (line-too-long)
common/OpTestUtil.py:1617:0: C0301: Line too long (122/100) (line-too-long)
common/OpTestUtil.py:1635:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestUtil.py:1644:0: C0301: Line too long (134/100) (line-too-long)
common/OpTestUtil.py:1645:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestUtil.py:1671:0: C0301: Line too long (122/100) (line-too-long)
common/OpTestUtil.py:1681:0: C0301: Line too long (126/100) (line-too-long)
common/OpTestUtil.py:1690:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:1691:0: C0301: Line too long (111/100) (line-too-long)
common/OpTestUtil.py:1710:0: C0301: Line too long (116/100) (line-too-long)
common/OpTestUtil.py:1714:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestUtil.py:1732:0: C0301: Line too long (126/100) (line-too-long)
common/OpTestUtil.py:1758:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestUtil.py:1761:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestUtil.py:1764:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestUtil.py:1793:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
common/OpTestUtil.py:1802:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1827:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:1828:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestUtil.py:1873:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestUtil.py:1886:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestUtil.py:1957:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestUtil.py:2030:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestUtil.py:2077:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestUtil.py:2148:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestUtil.py:2177:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestUtil.py:2206:0: C0301: Line too long (119/100) (line-too-long)
common/OpTestUtil.py:2216:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestUtil.py:2217:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:2262:0: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestUtil.py:2265:0: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestUtil.py:2275:51: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestUtil.py:2278:0: C0303: Trailing whitespace (trailing-whitespace)
common/OpTestUtil.py:2296:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestUtil.py:2304:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestUtil.py:2322:0: W0311: Bad indentation. Found 15 spaces, expected 16 (bad-indentation)
common/OpTestUtil.py:2442:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestUtil.py:1:0: C0302: Too many lines in module (2573/1000) (too-many-lines)
common/OpTestUtil.py:1293:28: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1293:44: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1487:65: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1521:69: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1660:57: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1690:38: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1690:56: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1690:75: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1690:87: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1690:94: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1691:33: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1691:49: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:2433:40: W1401: Anomalous backslash in string: '\w'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestUtil.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestUtil.py:1:0: C0103: Module name "OpTestUtil" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:39:0: W0404: Reimport 'time' (imported line 30) (reimported)
common/OpTestUtil.py:41:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestUtil.py:42:0: W0404: Reimport 'subprocess' (imported line 33) (reimported)
common/OpTestUtil.py:43:0: E0401: Unable to import 'requests' (import-error)
common/OpTestUtil.py:45:0: E0401: Unable to import 'requests.adapters' (import-error)
common/OpTestUtil.py:49:0: E0401: Unable to import 'urllib3' (import-error)
common/OpTestUtil.py:67:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestUtil.py:167:16: C0103: Attribute name "prepDisk" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:67:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
common/OpTestUtil.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:81:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:107:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:124:18: E1101: Instance of 'OpTestUtil' has no 'skipTest' member (no-member)
common/OpTestUtil.py:126:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:132:12: E1101: Instance of 'OpTestUtil' has no 'fail' member (no-member)
common/OpTestUtil.py:132:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:139:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:141:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:144:12: E1101: Instance of 'OpTestUtil' has no 'fail' member (no-member)
common/OpTestUtil.py:135:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:159:4: C0103: Method name "getPRePDisk" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:173:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:173:4: C0103: Method name "backup_restore_PRepDisk" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:175:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:177:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:196:11: C0121: Comparison 'self.kernel_signature == True' should be 'self.kernel_signature is True' if checking for the singleton value True, or 'self.kernel_signature' if testing for truthiness (singleton-comparison)
common/OpTestUtil.py:204:19: C0121: Comparison 'self.grub_signature == True' should be 'self.grub_signature is True' if checking for the singleton value True, or 'self.grub_signature' if testing for truthiness (singleton-comparison)
common/OpTestUtil.py:206:60: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:213:60: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:218:24: E1101: Instance of 'OpTestUtil' has no 'fail' member (no-member)
common/OpTestUtil.py:207:24: W0612: Unused variable 'line' (unused-variable)
common/OpTestUtil.py:226:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:234:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestUtil.py:260:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:265:16: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
common/OpTestUtil.py:275:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:281:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:287:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:293:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:297:16: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
common/OpTestUtil.py:230:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
common/OpTestUtil.py:307:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:313:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:318:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:323:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:326:16: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
common/OpTestUtil.py:230:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
common/OpTestUtil.py:331:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:339:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:339:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:348:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:359:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:359:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:226:4: R0912: Too many branches (33/12) (too-many-branches)
common/OpTestUtil.py:226:4: R0915: Too many statements (76/50) (too-many-statements)
common/OpTestUtil.py:365:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:365:4: R0914: Too many local variables (21/15) (too-many-locals)
common/OpTestUtil.py:370:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:371:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:371:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:383:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:386:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:386:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:391:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:391:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:404:33: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:404:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:412:33: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:412:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:439:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:441:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:441:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:471:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:444:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:447:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:448:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:451:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:452:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:454:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:455:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:456:61: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:457:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:460:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:461:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:464:66: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:473:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:473:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:477:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:491:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:486:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:493:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:493:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:506:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:500:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:500:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:507:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:507:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:365:4: R0912: Too many branches (21/12) (too-many-branches)
common/OpTestUtil.py:365:4: R0915: Too many statements (81/50) (too-many-statements)
common/OpTestUtil.py:370:16: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:446:20: W0612: Unused variable 'journal_dmesg_entries' (unused-variable)
common/OpTestUtil.py:450:20: W0612: Unused variable 'journal_entries' (unused-variable)
common/OpTestUtil.py:453:20: W0612: Unused variable 'top_entries' (unused-variable)
common/OpTestUtil.py:456:20: W0612: Unused variable 'df_entries' (unused-variable)
common/OpTestUtil.py:459:20: W0612: Unused variable 'uptime_entries' (unused-variable)
common/OpTestUtil.py:464:20: W0612: Unused variable 'console_entries' (unused-variable)
common/OpTestUtil.py:519:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
common/OpTestUtil.py:523:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:525:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestUtil.py:527:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:529:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:530:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:530:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:531:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:543:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:546:8: W0702: No exception type(s) specified (bare-except)
common/OpTestUtil.py:555:16: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestUtil.py:565:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:565:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:568:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:572:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:579:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:584:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:588:16: W0707: Consider explicitly re-raising using 'raise HostLocker(message="Could not run 'ip' to check for no proxy?") from e' (raise-missing-from)
common/OpTestUtil.py:591:15: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
common/OpTestUtil.py:587:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:597:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:600:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:606:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:619:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:621:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:636:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:640:12: W0707: Consider explicitly re-raising using 'raise AES(message="OpTestSystem AES attempted to releasing reservation '{}' but encountered an Exception='{}', please manually verify and release".format(res_id, e)) from e' (raise-missing-from)
common/OpTestUtil.py:640:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:653:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:649:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:649:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:656:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:656:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:658:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:658:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:653:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:665:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:677:16: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestUtil.py:679:55: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:685:16: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestUtil.py:686:55: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:694:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:701:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:716:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:671:8: W0612: Unused variable 'args_dict' (unused-variable)
common/OpTestUtil.py:721:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:726:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:721:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:734:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:755:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:765:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:770:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:821:17: W0612: Unused variable 'value' (unused-variable)
common/OpTestUtil.py:829:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:839:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:841:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:845:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:852:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:829:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:865:16: W0612: Unused variable 'time_dict' (unused-variable)
common/OpTestUtil.py:870:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:876:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:872:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
common/OpTestUtil.py:871:22: W0612: Unused variable 'search_criteria' (unused-variable)
common/OpTestUtil.py:896:32: W0612: Unused variable 'time_dict' (unused-variable)
common/OpTestUtil.py:916:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:916:4: R0914: Too many local variables (19/15) (too-many-locals)
common/OpTestUtil.py:926:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:930:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:930:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:931:12: W0707: Consider explicitly re-raising using 'raise HostLocker(message="OpTestSystem HostLocker unable to query HostLocker, check that your VPN/SSH tunnel is properly configured and open, proxy configured as '{}' Exception={}".format(self.conf.args.hostlocker_proxy, e)) from e' (raise-missing-from)
common/OpTestUtil.py:931:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:937:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:967:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:967:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:978:12: W0707: Consider explicitly re-raising using 'raise HostLocker(message='OpTestSystem HostLocker unable to acquire lock from HostLocker, see Exception={}'.format(e)) from e' (raise-missing-from)
common/OpTestUtil.py:978:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:981:8: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
common/OpTestUtil.py:984:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:988:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:994:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1001:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1001:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:916:4: R0912: Too many branches (16/12) (too-many-branches)
common/OpTestUtil.py:982:12: W0612: Unused variable 'rc' (unused-variable)
common/OpTestUtil.py:1005:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1012:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1020:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1016:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1016:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1018:12: W0707: Consider explicitly re-raising using 'raise HostLocker(message="OpTestSystem HostLocker unknown host '{}'".format(self.conf.args.hostlocker)) from check' (raise-missing-from)
common/OpTestUtil.py:1018:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1021:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1021:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1032:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1033:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1033:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1038:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1038:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1047:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1048:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1048:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1005:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:1050:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1067:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1060:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1060:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1062:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1066:12: W0707: Consider explicitly re-raising using 'raise HostLocker(message=msg) from check' (raise-missing-from)
common/OpTestUtil.py:1068:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1068:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1078:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1078:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1085:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1085:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1094:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1094:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1096:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1105:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1100:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1100:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1103:12: W0707: Consider explicitly re-raising using 'raise HostLocker(message='hostlocker_unlock tried to delete a lock but it was NOT there') from check' (raise-missing-from)
common/OpTestUtil.py:1106:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1106:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1119:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1119:4: C0103: Method name "PingFunc" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1119:38: C0103: Argument name "totalSleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1120:11: C0121: Comparison 'i_ip == None' should be 'i_ip is None' (singleton-comparison)
common/OpTestUtil.py:1123:8: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1132:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1132:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestUtil.py:1133:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestUtil.py:1139:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1139:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1143:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestUtil.py:1143:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1147:16: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1150:20: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1152:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1152:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1154:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1125:17: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestUtil.py:1130:26: W0612: Unused variable 'stderr_value' (unused-variable)
common/OpTestUtil.py:1158:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1158:4: C0103: Method name "PingMTUCheck" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1158:42: C0103: Argument name "totalSleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1159:11: C0121: Comparison 'i_ip == None' should be 'i_ip is None' (singleton-comparison)
common/OpTestUtil.py:1162:8: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1172:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1172:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestUtil.py:1174:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1174:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1180:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1180:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1184:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestUtil.py:1184:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1188:16: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1191:20: C0103: Variable name "sleepTime" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1193:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1193:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1195:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1164:17: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestUtil.py:1170:26: W0612: Unused variable 'stderr_value' (unused-variable)
common/OpTestUtil.py:1198:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1198:4: C0103: Method name "copyFilesToDest" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1198:48: C0103: Argument name "destName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1198:58: C0103: Argument name "destPath" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1198:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestUtil.py:1206:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1210:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1210:4: C0103: Method name "copyFilesFromDest" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1210:40: C0103: Argument name "destName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1210:50: C0103: Argument name "destPath" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1210:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestUtil.py:1218:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1224:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1230:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestUtil.py:1230:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1235:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestUtil.py:1235:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1239:39: C0103: Argument name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1243:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1239:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:1254:40: C0103: Argument name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1259:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1264:56: C0103: Argument name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1269:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1271:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1275:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1275:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1277:35: C0103: Argument name "peer_IP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1277:44: C0103: Argument name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1282:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1286:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1286:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1289:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1297:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1302:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1310:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1314:12: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1315:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1315:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1320:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1320:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1321:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1321:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1322:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1322:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1323:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1312:12: W0612: Unused variable 'i' (unused-variable)
common/OpTestUtil.py:1336:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1337:8: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1338:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1338:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1345:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1361:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1361:37: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1385:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1385:4: C0103: Method name "set_PS1" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1385:32: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1413:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1448:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1453:20: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1462:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1465:20: W0707: Consider explicitly re-raising using 'raise ConsoleSettings(before=pty.before, after=pty.after, msg='Change of shell prompt not completed after last retry, probably a connection issue, retry') from e' (raise-missing-from)
common/OpTestUtil.py:1385:4: R0915: Too many statements (60/50) (too-many-statements)
common/OpTestUtil.py:1461:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:1471:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1471:40: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1490:20: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1499:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1507:12: C0103: Variable name "my_PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1508:12: C0103: Variable name "my_LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1524:24: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1533:20: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1541:16: C0103: Variable name "my_PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1542:16: C0103: Variable name "my_LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1544:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1471:4: R0911: Too many return statements (7/6) (too-many-return-statements)
common/OpTestUtil.py:1471:4: R0912: Too many branches (18/12) (too-many-branches)
common/OpTestUtil.py:1471:4: R0915: Too many statements (56/50) (too-many-statements)
common/OpTestUtil.py:1554:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1554:25: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1562:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1562:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1563:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1563:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1564:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1564:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1570:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1569:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1569:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1576:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1576:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1577:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1577:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1578:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1578:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1584:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1583:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1583:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1588:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1593:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1593:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1554:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:1584:16: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:1599:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1599:39: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1618:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestUtil.py:1621:12: C0103: Variable name "my_PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1623:12: C0103: Variable name "my_SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1626:12: C0103: Variable name "my_PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1628:12: C0103: Variable name "my_SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:1631:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1640:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1640:33: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1704:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1707:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1640:4: R0911: Too many return statements (8/6) (too-many-return-statements)
common/OpTestUtil.py:1640:4: R0912: Too many branches (15/12) (too-many-branches)
common/OpTestUtil.py:1716:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1716:32: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1723:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:1734:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1734:39: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1742:15: R1714: Consider merging these comparisons with 'in' by using 'rc in (0, 1)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestUtil.py:1751:12: R1723: Unnecessary "elif" after "break", remove the leading "el" from "elif" (no-else-break)
common/OpTestUtil.py:1768:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1768:40: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1775:11: R1714: Consider merging these comparisons with 'in' by using 'rc in (0, 1)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestUtil.py:1795:15: R1714: Consider merging these comparisons with 'in' by using 'rc in (2, 3)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestUtil.py:1802:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1804:22: E0602: Undefined variable 'SSHSessionDisconnected' (undefined-variable)
common/OpTestUtil.py:1810:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1818:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1818:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1819:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1826:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1826:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1827:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1810:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:1830:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1830:4: R0914: Too many local variables (17/15) (too-many-locals)
common/OpTestUtil.py:1835:8: W0621: Redefining name 'pty' from outer scope (line 40) (redefined-outer-name)
common/OpTestUtil.py:1849:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1866:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1870:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1830:4: R0912: Too many branches (14/12) (too-many-branches)
common/OpTestUtil.py:1849:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:1895:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1902:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1911:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1902:63: W0613: Unused argument 'retry' (unused-argument)
common/OpTestUtil.py:1905:8: W0612: Unused variable 'rc' (unused-variable)
common/OpTestUtil.py:1911:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:1915:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1923:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1933:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:1925:8: W0612: Unused variable 'expect_prompt' (unused-variable)
common/OpTestUtil.py:1927:8: W0612: Unused variable 'rc' (unused-variable)
common/OpTestUtil.py:1933:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestUtil.py:1937:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:1940:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1957:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1957:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1961:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1961:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1967:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:1968:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1968:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1972:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1972:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1974:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1976:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1976:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1978:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1978:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1981:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1981:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1983:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1983:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1987:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1987:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1993:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1993:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1994:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='Cronus issue rc={} output={}'.format(e.returncode, e.output)) from e' (raise-missing-from)
common/OpTestUtil.py:1995:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1999:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:1999:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2000:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='cronus_subcommand issue Exception={}, Traceback={}'.format(e, tb)) from e' (raise-missing-from)
common/OpTestUtil.py:2001:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:1944:17: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestUtil.py:2003:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2007:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2009:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2009:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2019:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestUtil.py:2021:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2021:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2037:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2037:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2042:4: R0913: Too many arguments (8/5) (too-many-arguments)
common/OpTestUtil.py:2073:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2097:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2116:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2124:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2140:37: R1729: Use a generator instead 'any(string in line for string in warn_messages)' (use-a-generator)
common/OpTestUtil.py:2144:23: R1729: Use a generator instead 'any(string in line for string in skip_messages + warn_messages)' (use-a-generator)
common/OpTestUtil.py:2148:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2148:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2148:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2151:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2160:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2168:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2177:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2185:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2187:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2206:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2206:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2206:4: R0913: Too many arguments (7/5) (too-many-arguments)
common/OpTestUtil.py:2212:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2212:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2216:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2216:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2216:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2216:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2216:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
common/OpTestUtil.py:2216:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestUtil.py:2225:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2228:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestUtil.py:2292:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestUtil.py:2295:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2305:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:2313:22: E0602: Undefined variable 'details' (undefined-variable)
common/OpTestUtil.py:2323:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:2277:4: R0911: Too many return statements (8/6) (too-many-return-statements)
common/OpTestUtil.py:2277:4: R0912: Too many branches (14/12) (too-many-branches)
common/OpTestUtil.py:2277:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:2331:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestUtil.py:167:16: W0201: Attribute 'prepDisk' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:189:8: W0201: Attribute 'prepDisk' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:190:8: W0201: Attribute 'backup_prep_filename' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:191:8: W0201: Attribute 'distro_version' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:192:8: W0201: Attribute 'kernel_signature' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:193:8: W0201: Attribute 'grub_filename' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:194:8: W0201: Attribute 'grub_signature' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:1421:16: W0201: Attribute 'orig_system_setup_term' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:1422:16: W0201: Attribute 'orig_block_setup_term' defined outside __init__ (attribute-defined-outside-init)
common/OpTestUtil.py:67:0: R0904: Too many public methods (72/20) (too-many-public-methods)
common/OpTestUtil.py:2389:8: C0103: Attribute name "jsonHeader" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:2390:8: C0103: Attribute name "xAuthHeader" doesn't conform to snake_case naming style (invalid-name)
common/OpTestUtil.py:2352:0: R0205: Class 'Server' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
common/OpTestUtil.py:2352:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
common/OpTestUtil.py:2373:4: R0913: Too many arguments (9/5) (too-many-arguments)
common/OpTestUtil.py:2408:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2421:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2421:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2426:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2438:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2438:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2443:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2443:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2449:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2456:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2456:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2460:12: W0707: Consider explicitly re-raising using 'raise HTTPCheck(message='Requests post problem, check that your credentials are properly setup URL={} username={} password={}, Exception={}'.format(self._url(uri), username, password, e)) from e' (raise-missing-from)
common/OpTestUtil.py:2460:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2466:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2480:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:2474:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2474:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2481:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2481:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2466:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestUtil.py:2484:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2489:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2494:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2499:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2504:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:2509:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestUtil.py:2510:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestUtil.py:2524:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2540:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:2542:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2542:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2552:23: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestUtil.py:2554:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2554:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2560:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestUtil.py:2561:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2561:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2567:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestUtil.py:2567:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestUtil.py:2504:4: R0912: Too many branches (13/12) (too-many-branches)
common/OpTestUtil.py:2572:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestUtil.py:42:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestUtil.py:44:0: C0411: standard import "traceback" should be placed before third party imports "pexpect", "requests" (wrong-import-order)
common/OpTestUtil.py:47:0: C0411: standard import "http.client.HTTPConnection" should be placed before third party imports "pexpect", "requests", "requests.adapters.HTTPAdapter" (wrong-import-order)
common/OpTestUtil.py:50:0: C0411: standard import "json" should be placed before third party imports "pexpect", "requests", "requests.adapters.HTTPAdapter", "urllib3" (wrong-import-order)
common/OpTestUtil.py:51:0: C0411: standard import "tempfile" should be placed before third party imports "pexpect", "requests", "requests.adapters.HTTPAdapter", "urllib3" (wrong-import-order)
common/OpTestUtil.py:59:0: C0411: standard import "logging" should be placed before third party imports "pexpect", "requests", "requests.adapters.HTTPAdapter", "urllib3" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "Exceptions.CommandFailed", "Exceptions.HostLocker", "OpTestVIOS.OpTestVIOS" (wrong-import-order)
common/OpTestUtil.py:60:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "Exceptions.CommandFailed", "Exceptions.HostLocker", "OpTestVIOS.OpTestVIOS" (wrong-import-order)
common/OpTestUtil.py:39:0: C0412: Imports from package time are not grouped (ungrouped-imports)
common/OpTestUtil.py:42:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
common/OpTestUtil.py:27:0: W0611: Unused import sys (unused-import)
common/OpTestUtil.py:29:0: W0611: Unused import datetime (unused-import)
common/OpTestUtil.py:32:0: W0611: Unused import string (unused-import)
common/OpTestUtil.py:34:0: W0611: Unused import random (unused-import)
common/OpTestUtil.py:36:0: W0611: Unused import telnetlib (unused-import)
common/OpTestUtil.py:37:0: W0611: Unused import socket (unused-import)
common/OpTestUtil.py:38:0: W0611: Unused import select (unused-import)
common/OpTestUtil.py:47:0: W0611: Unused HTTPConnection imported from http.client (unused-import)
common/OpTestUtil.py:59:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestBMC
common/OpTestBMC.py:75:0: C0301: Line too long (114/100) (line-too-long)
common/OpTestBMC.py:1:0: C0103: Module name "OpTestBMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:39:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestBMC.py:65:8: C0103: Attribute name "cv_bmcIP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:66:8: C0103: Attribute name "cv_bmcUser" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:67:8: C0103: Attribute name "cv_bmcPasswd" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:68:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:70:8: C0103: Attribute name "cv_WEB" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:57:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
common/OpTestBMC.py:62:4: R0913: Too many arguments (10/5) (too-many-arguments)
common/OpTestBMC.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:140:16: E1205: Too many arguments for logging format string (logging-too-many-args)
common/OpTestBMC.py:123:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestBMC.py:160:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestBMC.py:170:29: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:186:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:200:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestBMC.py:208:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:210:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:213:18: E1123: Unexpected keyword argument 'timeout' in constructor call (unexpected-keyword-arg)
common/OpTestBMC.py:217:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:230:47: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:246:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:250:37: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:254:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:258:50: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:259:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:263:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:263:50: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:264:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:268:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:268:43: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:268:56: C0103: Argument name "i_partName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:270:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:274:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:274:40: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:275:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:279:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:279:40: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:280:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:284:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:284:33: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:284:46: C0103: Argument name "i_partName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:285:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:299:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:300:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestBMC.py:300:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:302:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:308:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:311:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:314:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:317:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:320:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:57:0: R0904: Too many public methods (24/20) (too-many-public-methods)
common/OpTestBMC.py:327:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestBMC.py:344:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:355:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:355:50: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:356:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:360:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:360:50: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:361:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:365:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:365:43: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:365:56: C0103: Argument name "i_partName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:367:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestBMC.py:372:47: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestBMC.py:373:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:380:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestBMC.py:382:12: W0612: Unused variable 'l_res' (unused-variable)
common/OpTestBMC.py:40:0: C0411: standard import "os.path" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestBMC.py:41:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestBMC.py:52:0: C0411: standard import "logging" should be placed before third party import "pexpect" and local imports ".OPexpect", "OpTestIPMI.OpTestIPMI", "OpTestSSH.OpTestSSH" (...) "OpTestError.OpTestError", "OpTestWeb.OpTestWeb", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestBMC.py:53:0: C0411: first party import "OpTestLogger" should be placed before local imports ".OPexpect", "OpTestIPMI.OpTestIPMI", "OpTestSSH.OpTestSSH" (...) "OpTestError.OpTestError", "OpTestWeb.OpTestWeb", "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestBMC.py:44:0: W0611: Unused OpTestIPMI imported from OpTestIPMI (unused-import)
common/OpTestBMC.py:49:0: W0611: Unused OpTestWeb imported from OpTestWeb (unused-import)
common/OpTestBMC.py:52:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestOpenBMC
common/OpTestOpenBMC.py:214:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestOpenBMC.py:227:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestOpenBMC.py:230:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestOpenBMC.py:259:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestOpenBMC.py:261:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestOpenBMC.py:295:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestOpenBMC.py:296:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestOpenBMC.py:495:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestOpenBMC.py:497:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestOpenBMC.py:672:0: C0301: Line too long (159/100) (line-too-long)
common/OpTestOpenBMC.py:673:0: C0301: Line too long (162/100) (line-too-long)
common/OpTestOpenBMC.py:674:0: C0301: Line too long (155/100) (line-too-long)
common/OpTestOpenBMC.py:1105:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestOpenBMC.py:1109:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestOpenBMC.py:1111:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestOpenBMC.py:1:0: C0302: Too many lines in module (1159/1000) (too-many-lines)
common/OpTestOpenBMC.py:235:9: W0511: TODO: When PR #361 merges collapse this and convert using OpTestUtil methods (fixme)
common/OpTestOpenBMC.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestOpenBMC.py:1:0: C0103: Module name "OpTestOpenBMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestOpenBMC.py:24:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestOpenBMC.py:27:0: E0401: Unable to import 'requests' (import-error)
common/OpTestOpenBMC.py:62:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:114:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:126:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:138:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:150:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:162:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:206:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:206:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:226:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestOpenBMC.py:245:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:246:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:247:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:248:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:249:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:250:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:252:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:254:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:256:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:263:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:271:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:271:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:272:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:272:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:203:8: W0612: Unused variable 'sels' (unused-variable)
common/OpTestOpenBMC.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:283:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:284:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:285:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:286:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:287:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:288:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:290:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:292:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:294:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:298:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:313:8: W0622: Redefining built-in 'list' (redefined-builtin)
common/OpTestOpenBMC.py:316:12: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:314:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:314:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:315:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:315:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:317:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:320:12: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:328:8: W0622: Redefining built-in 'list' (redefined-builtin)
common/OpTestOpenBMC.py:330:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:330:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:331:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:331:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:346:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:377:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:397:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:422:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:424:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:433:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:439:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:450:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:468:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:471:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:483:15: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
common/OpTestOpenBMC.py:483:50: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)
common/OpTestOpenBMC.py:485:24: R1704: Redefining argument with the local name 'key' (redefined-argument-from-local)
common/OpTestOpenBMC.py:495:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:495:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:497:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:485:29: W0612: Unused variable 'value' (unused-variable)
common/OpTestOpenBMC.py:519:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:519:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:522:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:522:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:539:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:539:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:544:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:544:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:547:25: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:553:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:555:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:555:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:558:34: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:576:33: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:581:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:581:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:583:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:583:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:584:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:584:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:585:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:585:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:586:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:586:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:589:33: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:597:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:599:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:602:41: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:610:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:610:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:621:29: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:628:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:632:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:635:27: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:648:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestOpenBMC.py:644:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:650:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:646:12: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:648:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestOpenBMC.py:655:45: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:700:12: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:705:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:705:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:707:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:707:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:711:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:711:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:730:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:730:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:732:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:732:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:736:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:736:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:724:27: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:745:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:748:8: W0612: Unused variable 'value' (unused-variable)
common/OpTestOpenBMC.py:758:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:770:12: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:772:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:772:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:765:31: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:788:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestOpenBMC.py:789:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:789:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:809:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
common/OpTestOpenBMC.py:806:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:806:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:802:12: W0612: Unused variable 'i' (unused-variable)
common/OpTestOpenBMC.py:833:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestOpenBMC.py:828:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestOpenBMC.py:835:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:835:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:849:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:849:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:851:43: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:866:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:866:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:871:38: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:890:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:890:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:894:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:894:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:897:28: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestOpenBMC.py:903:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:906:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:906:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:908:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestOpenBMC.py:908:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:920:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:923:31: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:929:32: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:942:8: C0103: Variable name "PowerCapEnable" doesn't conform to snake_case naming style (invalid-name)
common/OpTestOpenBMC.py:943:8: C0103: Variable name "PowerCap" doesn't conform to snake_case naming style (invalid-name)
common/OpTestOpenBMC.py:953:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:964:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:975:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:987:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:1013:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestOpenBMC.py:1016:25: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:1022:26: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:43:0: R0904: Too many public methods (65/20) (too-many-public-methods)
common/OpTestOpenBMC.py:1029:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestOpenBMC.py:1029:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
common/OpTestOpenBMC.py:1030:4: R0913: Too many arguments (9/5) (too-many-arguments)
common/OpTestOpenBMC.py:1050:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1054:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1068:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestOpenBMC.py:1054:26: W0613: Unused argument 'minutes' (unused-argument)
common/OpTestOpenBMC.py:1071:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1076:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1080:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1080:29: C0103: Argument name "i_imageName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestOpenBMC.py:1083:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1086:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1095:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:1100:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1111:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:1112:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestOpenBMC.py:1115:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1120:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestOpenBMC.py:1122:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1128:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1131:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1134:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1137:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1140:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1143:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1146:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1149:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1152:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1155:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1158:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestOpenBMC.py:1029:0: R0904: Too many public methods (21/20) (too-many-public-methods)
common/OpTestOpenBMC.py:25:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestOpenBMC.py:26:0: C0411: standard import "json" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestOpenBMC.py:28:0: C0411: standard import "cgi" should be placed before third party imports "pexpect", "requests" (wrong-import-order)
common/OpTestOpenBMC.py:29:0: C0411: standard import "os" should be placed before third party imports "pexpect", "requests" (wrong-import-order)
common/OpTestOpenBMC.py:38:0: C0411: standard import "logging" should be placed before third party imports "pexpect", "requests" and local imports "OpTestSSH.OpTestSSH", "OpTestBMC.OpTestBMC", "Exceptions.HTTPCheck", "Exceptions.CommandFailed", "OpTestConstants.OpTestConstants", ".OpTestSystem" (wrong-import-order)
common/OpTestOpenBMC.py:39:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestSSH.OpTestSSH", "OpTestBMC.OpTestBMC", "Exceptions.HTTPCheck", "Exceptions.CommandFailed", "OpTestConstants.OpTestConstants", ".OpTestSystem" (wrong-import-order)
common/OpTestOpenBMC.py:24:0: W0611: Unused import pexpect (unused-import)
common/OpTestOpenBMC.py:25:0: W0611: Unused import subprocess (unused-import)
common/OpTestOpenBMC.py:26:0: W0611: Unused import json (unused-import)
common/OpTestOpenBMC.py:36:0: W0611: Unused import OpTestSystem (unused-import)
common/OpTestOpenBMC.py:38:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestConstants
common/OpTestConstants.py:118:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestConstants.py:225:0: C0301: Line too long (123/100) (line-too-long)
common/OpTestConstants.py:283:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestConstants.py:284:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestConstants.py:324:0: C0301: Line too long (129/100) (line-too-long)
common/OpTestConstants.py:424:0: C0301: Line too long (133/100) (line-too-long)
common/OpTestConstants.py:425:0: C0301: Line too long (133/100) (line-too-long)
common/OpTestConstants.py:426:0: C0301: Line too long (138/100) (line-too-long)
common/OpTestConstants.py:427:0: C0301: Line too long (157/100) (line-too-long)
common/OpTestConstants.py:428:0: C0301: Line too long (159/100) (line-too-long)
common/OpTestConstants.py:1:0: C0103: Module name "OpTestConstants" doesn't conform to snake_case naming style (invalid-name)
common/OpTestConstants.py:37:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestConstants.py:40:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestConstants.py:40:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module common.OpTestInstallUtil
common/OpTestInstallUtil.py:150:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestInstallUtil.py:167:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
common/OpTestInstallUtil.py:187:0: C0301: Line too long (136/100) (line-too-long)
common/OpTestInstallUtil.py:210:0: C0301: Line too long (113/100) (line-too-long)
common/OpTestInstallUtil.py:555:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestInstallUtil.py:343:9: W0511: FIXME: wait till the device(disk) discovery in petitboot (fixme)
common/OpTestInstallUtil.py:492:9: W0511: FIXME: Local repo unable to handle http request while installation (fixme)
common/OpTestInstallUtil.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestInstallUtil.py:1:0: C0103: Module name "OpTestInstallUtil" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:30:0: W0404: Reimport 'http.server' (imported line 29) (reimported)
common/OpTestInstallUtil.py:56:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestInstallUtil.py:70:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:71:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:57:4: R0913: Too many arguments (7/5) (too-many-arguments)
common/OpTestInstallUtil.py:59:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:60:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:61:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:62:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:63:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:64:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:65:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:66:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:67:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:68:8: W0601: Global variable 'PROXY' undefined at the module level (global-variable-undefined)
common/OpTestInstallUtil.py:58:38: W0613: Unused argument 'repo' (unused-argument)
common/OpTestInstallUtil.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestInstallUtil.py:92:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:92:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:93:19: R0123: In 'cf.exitcode is 1', use '==' when comparing constant literals not 'is' ('cf.exitcode == 1') (literal-comparison)
common/OpTestInstallUtil.py:96:20: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestInstallUtil.py:98:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:98:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:85:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestInstallUtil.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestInstallUtil.py:106:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:106:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:109:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:109:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:110:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:114:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:114:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:117:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:117:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:119:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:119:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:121:19: R0123: In 'cf.exitcode is 1', use '==' when comparing constant literals not 'is' ('cf.exitcode == 1') (literal-comparison)
common/OpTestInstallUtil.py:125:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:125:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:126:20: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestInstallUtil.py:129:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:129:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:101:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestInstallUtil.py:151:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:151:18: E1305: Too many arguments for format string (too-many-format-args)
common/OpTestInstallUtil.py:151:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:153:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:153:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:162:18: E0602: Undefined variable 'noiface_exception' (undefined-variable)
common/OpTestInstallUtil.py:163:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:165:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:165:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:167:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:168:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:168:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:170:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:172:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:172:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:160:12: W0612: Unused variable 'noface_exception' (unused-variable)
common/OpTestInstallUtil.py:175:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestInstallUtil.py:181:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:181:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:186:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:186:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:190:16: W0707: Consider explicitly re-raising using 'raise noconfig_exception from e' (raise-missing-from)
common/OpTestInstallUtil.py:200:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:203:12: W0707: Consider explicitly re-raising using 'raise configure_exception from e' (raise-missing-from)
common/OpTestInstallUtil.py:208:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:208:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:215:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:216:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:216:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:219:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:219:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:220:19: R0123: In 'cf.exitcode is 1', use '==' when comparing constant literals not 'is' ('cf.exitcode == 1') (literal-comparison)
common/OpTestInstallUtil.py:223:20: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestInstallUtil.py:225:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestInstallUtil.py:225:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:230:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestInstallUtil.py:237:8: C0103: Variable name "HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:237:14: C0103: Variable name "PORT" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:238:8: W0603: Using the global statement (global-statement)
common/OpTestInstallUtil.py:242:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:243:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:250:4: R1711: Useless return at end of function or method (useless-return)
common/OpTestInstallUtil.py:272:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:288:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:293:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:286:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestInstallUtil.py:321:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestInstallUtil.py:327:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:334:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestInstallUtil.py:324:27: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestInstallUtil.py:325:26: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestInstallUtil.py:345:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:350:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:338:4: R1711: Useless return at end of function or method (useless-return)
common/OpTestInstallUtil.py:373:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:399:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:402:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:403:8: C0103: Variable name "Err" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:404:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:408:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestInstallUtil.py:408:4: R0914: Too many local variables (16/15) (too-many-locals)
common/OpTestInstallUtil.py:427:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:429:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:432:12: C0103: Variable name "Err" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:433:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:440:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:445:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:449:12: C0103: Variable name "Err" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:450:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:455:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:462:16: C0103: Variable name "Err" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:463:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:480:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:484:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:408:4: R0912: Too many branches (17/12) (too-many-branches)
common/OpTestInstallUtil.py:408:4: R0915: Too many statements (51/50) (too-many-statements)
common/OpTestInstallUtil.py:490:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestInstallUtil.py:519:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestInstallUtil.py:519:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:520:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:525:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:526:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:531:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:532:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestInstallUtil.py:505:4: R0912: Too many branches (13/12) (too-many-branches)
common/OpTestInstallUtil.py:532:20: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestInstallUtil.py:564:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestInstallUtil.py:564:4: C0103: Method name "do_POST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestInstallUtil.py:496:12: W0201: Attribute 'path' defined outside __init__ (attribute-defined-outside-init)
common/OpTestInstallUtil.py:507:12: W0201: Attribute 'path' defined outside __init__ (attribute-defined-outside-init)
common/OpTestInstallUtil.py:587:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestInstallUtil.py:35:0: C0411: first party import "OpTestConfiguration" should be placed before local import "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestInstallUtil.py:37:0: C0411: first party import "common.OpTestSystem.OpSystemState" should be placed before local import "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestInstallUtil.py:39:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState" and local import "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestInstallUtil.py:40:0: C0411: first party import "OpTestLogger" should be placed before local import "Exceptions.CommandFailed" (wrong-import-order)
common/OpTestInstallUtil.py:39:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestKeys
common/OpTestKeys.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestKeys.py:1:0: C0103: Module name "OpTestKeys" doesn't conform to snake_case naming style (invalid-name)
common/OpTestKeys.py:4:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestKeys.py:4:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module common.OpTestEBMC
common/OpTestEBMC.py:114:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestEBMC.py:116:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestEBMC.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestEBMC.py:1:0: C0103: Module name "OpTestEBMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestEBMC.py:23:0: E0401: Unable to import 'requests' (import-error)
common/OpTestEBMC.py:55:8: W0612: Unused variable 'r' (unused-variable)
common/OpTestEBMC.py:85:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestEBMC.py:88:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestEBMC.py:102:15: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
common/OpTestEBMC.py:102:50: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)
common/OpTestEBMC.py:104:24: R1704: Redefining argument with the local name 'key' (redefined-argument-from-local)
common/OpTestEBMC.py:114:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestEBMC.py:114:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestEBMC.py:116:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestEBMC.py:104:29: W0612: Unused variable 'value' (unused-variable)
common/OpTestEBMC.py:132:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestEBMC.py:132:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
common/OpTestEBMC.py:134:4: R0913: Too many arguments (10/5) (too-many-arguments)
common/OpTestEBMC.py:157:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:161:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:164:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:167:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:170:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:171:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestEBMC.py:176:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:179:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestEBMC.py:24:0: C0411: standard import "json" should be placed before third party import "requests" (wrong-import-order)
common/OpTestEBMC.py:25:0: C0411: standard import "sys" should be placed before third party import "requests" (wrong-import-order)
common/OpTestEBMC.py:32:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestSSH.OpTestSSH", "OpTestBMC.OpTestBMC", "Exceptions.HTTPCheck", "OpTestConstants.OpTestConstants" (wrong-import-order)
common/OpTestEBMC.py:24:0: W0611: Unused import json (unused-import)
************* Module common.OpTestSOL
common/OpTestSOL.py:1:0: C0103: Module name "OpTestSOL" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSOL.py:33:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestSOL.py:55:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSOL.py:67:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSOL.py:67:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSOL.py:72:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSOL.py:72:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSOL.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSOL.py:76:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSOL.py:76:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSOL.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSOL.py:90:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSOL.py:90:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSOL.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSOL.py:34:0: C0411: standard import "os" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestSOL.py:41:0: C0411: standard import "logging" should be placed before third party import "pexpect", first party import "OpTestConfiguration", and local imports "OpTestSystem.OpSystemState", "Exceptions.CommandFailed", "OpTestIPMI.IPMIConsoleState" (wrong-import-order)
common/OpTestSOL.py:42:0: C0411: standard import "logging.handlers.RotatingFileHandler" should be placed before third party import "pexpect", first party import "OpTestConfiguration", and local imports "OpTestSystem.OpSystemState", "Exceptions.CommandFailed", "OpTestIPMI.IPMIConsoleState" (wrong-import-order)
common/OpTestSOL.py:43:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestSystem.OpSystemState", "Exceptions.CommandFailed", "OpTestIPMI.IPMIConsoleState" (wrong-import-order)
common/OpTestSOL.py:29:0: W0611: Unused import random (unused-import)
common/OpTestSOL.py:30:0: W0611: Unused import unittest (unused-import)
common/OpTestSOL.py:38:0: W0611: Unused CommandFailed imported from Exceptions (unused-import)
common/OpTestSOL.py:39:0: W0611: Unused IPMIConsoleState imported from OpTestIPMI (unused-import)
************* Module common.OpTestThread
common/OpTestThread.py:51:0: C0301: Line too long (112/100) (line-too-long)
common/OpTestThread.py:68:0: C0301: Line too long (111/100) (line-too-long)
common/OpTestThread.py:71:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestThread.py:1:0: C0103: Module name "OpTestThread" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:33:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestThread.py:53:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:46:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
common/OpTestThread.py:51:4: R0913: Too many arguments (8/5) (too-many-arguments)
common/OpTestThread.py:66:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:66:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:69:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:69:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestThread.py:71:34: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:71:4: R0913: Too many arguments (7/5) (too-many-arguments)
common/OpTestThread.py:73:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:73:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:79:20: W0612: Unused variable 'cf' (unused-variable)
common/OpTestThread.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestThread.py:101:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:99:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestThread.py:111:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:111:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:114:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:114:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestThread.py:116:34: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:118:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:118:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:124:20: W0612: Unused variable 'cf' (unused-variable)
common/OpTestThread.py:141:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:134:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
common/OpTestThread.py:139:4: R0913: Too many arguments (7/5) (too-many-arguments)
common/OpTestThread.py:152:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:152:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:155:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:155:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:157:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestThread.py:157:34: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
common/OpTestThread.py:157:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestThread.py:159:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestThread.py:159:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestThread.py:165:16: W0612: Unused variable 'cf' (unused-variable)
common/OpTestThread.py:41:0: C0411: standard import "logging" should be placed before third party import "pexpect", first party import "OpTestConfiguration", and local imports "OpTestSystem.OpSystemState", "OpTestConstants.OpTestConstants", "Exceptions.CommandFailed", "OpTestIPMI.IPMIConsoleState" (wrong-import-order)
common/OpTestThread.py:42:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestSystem.OpSystemState", "OpTestConstants.OpTestConstants", "Exceptions.CommandFailed", "OpTestIPMI.IPMIConsoleState" (wrong-import-order)
common/OpTestThread.py:30:0: W0611: Unused import unittest (unused-import)
common/OpTestThread.py:33:0: W0611: Unused import pexpect (unused-import)
common/OpTestThread.py:36:0: W0611: Unused OpSystemState imported from OpTestSystem (unused-import)
common/OpTestThread.py:37:0: W0611: Unused OpTestConstants imported from OpTestConstants as BMC_CONST (unused-import)
common/OpTestThread.py:39:0: W0611: Unused IPMIConsoleState imported from OpTestIPMI (unused-import)
common/OpTestThread.py:41:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestTConnection
common/OpTestTConnection.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestTConnection.py:1:0: C0103: Module name "OpTestTConnection" doesn't conform to snake_case naming style (invalid-name)
common/OpTestTConnection.py:43:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestTConnection.py:48:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestTConnection.py:51:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestTConnection.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestTConnection.py:80:11: C0117: Consider changing "not self.prompt in ret" to "self.prompt not in ret" (unnecessary-negation)
common/OpTestTConnection.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestTConnection.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module common.OpTestWeb
common/OpTestWeb.py:124:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestWeb.py:126:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestWeb.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestWeb.py:1:0: C0103: Module name "OpTestWeb" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:30:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestWeb.py:44:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestWeb.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestWeb.py:69:4: R0914: Too many local variables (19/15) (too-many-locals)
common/OpTestWeb.py:73:12: C0415: Import outside toplevel (argparse) (import-outside-toplevel)
common/OpTestWeb.py:74:12: E0401: Unable to import 'selenium' (import-error)
common/OpTestWeb.py:74:12: C0415: Import outside toplevel (selenium.webdriver) (import-outside-toplevel)
common/OpTestWeb.py:75:12: E0401: Unable to import 'easyprocess' (import-error)
common/OpTestWeb.py:75:12: C0415: Import outside toplevel (easyprocess.EasyProcess) (import-outside-toplevel)
common/OpTestWeb.py:76:12: E0401: Unable to import 'pyvirtualdisplay' (import-error)
common/OpTestWeb.py:76:12: C0415: Import outside toplevel (pyvirtualdisplay.Display) (import-outside-toplevel)
common/OpTestWeb.py:77:12: E0401: Unable to import 'FWUpdatePage' (import-error)
common/OpTestWeb.py:77:12: C0415: Import outside toplevel (FWUpdatePage.FWUpdatePage) (import-outside-toplevel)
common/OpTestWeb.py:78:12: E0401: Unable to import 'LoginPage' (import-error)
common/OpTestWeb.py:78:12: C0415: Import outside toplevel (LoginPage.LoginPage) (import-outside-toplevel)
common/OpTestWeb.py:79:12: E0401: Unable to import 'MaintenancePage' (import-error)
common/OpTestWeb.py:79:12: C0415: Import outside toplevel (MaintenancePage.MaintenancePage) (import-outside-toplevel)
common/OpTestWeb.py:80:12: E0401: Unable to import 'Page' (import-error)
common/OpTestWeb.py:80:12: C0415: Import outside toplevel (Page.Page) (import-outside-toplevel)
common/OpTestWeb.py:85:12: C0103: Variable name "BMC_IP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:89:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(BMC_CONST.ERROR_SELENIUM_HEADLESS) from exc' (raise-missing-from)
common/OpTestWeb.py:93:12: C0103: Variable name "BMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:97:12: C0103: Variable name "BMCAuth" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:101:12: C0103: Variable name "BMCUpdate" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:104:12: C0103: Variable name "Maintenance" doesn't conform to snake_case naming style (invalid-name)
common/OpTestWeb.py:138:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestWeb.py:69:4: R0915: Too many statements (52/50) (too-many-statements)
common/OpTestWeb.py:73:12: W0611: Unused import argparse (unused-import)
common/OpTestWeb.py:75:12: W0611: Unused EasyProcess imported from easyprocess (unused-import)
common/OpTestWeb.py:44:0: R0903: Too few public methods (1/2) (too-few-public-methods)
common/OpTestWeb.py:31:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestWeb.py:27:0: W0611: Unused import time (unused-import)
common/OpTestWeb.py:28:0: W0611: Unused import subprocess (unused-import)
common/OpTestWeb.py:29:0: W0611: Unused import os (unused-import)
common/OpTestWeb.py:30:0: W0611: Unused import pexpect (unused-import)
common/OpTestWeb.py:31:0: W0611: Unused import unittest (unused-import)
************* Module common.OpTestIPMI
common/OpTestIPMI.py:283:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestIPMI.py:297:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestIPMI.py:327:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestIPMI.py:329:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:334:0: C0325: Unnecessary parens after 'raise' keyword (superfluous-parens)
common/OpTestIPMI.py:394:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestIPMI.py:402:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:682:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:684:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestIPMI.py:704:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:764:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:805:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestIPMI.py:811:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:836:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:837:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:840:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestIPMI.py:847:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestIPMI.py:848:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:851:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestIPMI.py:1179:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1196:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1208:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1261:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1340:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1351:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1362:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestIPMI.py:1:0: C0302: Too many lines in module (1432/1000) (too-many-lines)
common/OpTestIPMI.py:109:13: W0511: TODO - need python 2.7 (fixme)
common/OpTestIPMI.py:162:13: W0511: TODO - need python 2.7 (fixme)
common/OpTestIPMI.py:391:13: W0511: FIXME: This code should instead check for 'erasure completed' (fixme)
common/OpTestIPMI.py:1395:47: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestIPMI.py:1395:53: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestIPMI.py:1404:41: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestIPMI.py:1404:47: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestIPMI.py:1:0: C0103: Module name "OpTestIPMI" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:41:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestIPMI.py:68:4: R0913: Too many arguments (7/5) (too-many-arguments)
common/OpTestIPMI.py:68:23: W0613: Unused argument 'method' (unused-argument)
common/OpTestIPMI.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:81:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:83:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:85:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:100:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:105:16: W0707: Consider explicitly re-raising using 'raise CommandFailed('Unable to spawn process {}'.format(cmd), e, -1) from e' (raise-missing-from)
common/OpTestIPMI.py:106:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:116:16: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise CommandFailed(cmd, 'Failed to spawn subprocess', -1) from exc' (raise-missing-from)
common/OpTestIPMI.py:118:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:118:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:102:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestIPMI.py:112:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestIPMI.py:122:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestIPMI.py:122:0: C0103: Class name "pUpdate" doesn't conform to PascalCase naming style (invalid-name)
common/OpTestIPMI.py:123:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestIPMI.py:123:23: W0613: Unused argument 'method' (unused-argument)
common/OpTestIPMI.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:138:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:140:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:142:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:146:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:151:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:151:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:152:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:157:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:159:16: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestIPMI.py:169:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:171:16: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestIPMI.py:154:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestIPMI.py:165:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestIPMI.py:177:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestIPMI.py:177:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestIPMI.py:182:0: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:182:0: C0103: Function name "set_system_to_UNKNOWN_BAD" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:188:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestIPMI.py:211:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:212:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:213:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:188:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
common/OpTestIPMI.py:189:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestIPMI.py:215:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:221:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:224:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:230:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:234:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:259:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestIPMI.py:247:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:247:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:250:12: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:253:20: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:258:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError('IPMI: failed to close ipmi console') from exc' (raise-missing-from)
common/OpTestIPMI.py:261:12: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestIPMI.py:245:12: W0612: Unused variable 'close_rc' (unused-variable)
common/OpTestIPMI.py:248:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestIPMI.py:250:12: W0612: Unused variable 'exitCode' (unused-variable)
common/OpTestIPMI.py:250:23: W0612: Unused variable 'signalstatus' (unused-variable)
common/OpTestIPMI.py:259:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestIPMI.py:263:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:265:12: E1128: Assigning result of a function call, where the function returns None (assignment-from-none)
common/OpTestIPMI.py:282:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexpect.spawn', "OPexpect.spawn encountered a problem, command was '{}'".format(cmd), -1) from e' (raise-missing-from)
common/OpTestIPMI.py:283:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:298:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:298:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:304:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:304:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:311:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:318:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:263:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestIPMI.py:265:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestIPMI.py:280:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestIPMI.py:322:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:334:16: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestIPMI.py:341:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:344:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:348:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestIPMI.py:351:8: C0103: Attribute name "cv_bmcIP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:352:8: C0103: Attribute name "cv_bmcUser" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:353:8: C0103: Attribute name "cv_bmcPwd" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:360:8: C0103: Attribute name "pUpdate" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:348:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
common/OpTestIPMI.py:349:23: C0103: Argument name "i_bmcIP" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:349:32: C0103: Argument name "i_bmcUser" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:349:43: C0103: Argument name "i_bmcPwd" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:349:4: R0913: Too many arguments (8/5) (too-many-arguments)
common/OpTestIPMI.py:376:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:396:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:385:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestIPMI.py:415:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:418:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:427:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:440:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:453:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:466:11: C0117: Consider changing "not BMC_CONST.CHASSIS_POWER_RESET in r" to "BMC_CONST.CHASSIS_POWER_RESET not in r" (unnecessary-negation)
common/OpTestIPMI.py:467:12: W0719: Raising too general exception: Exception (broad-exception-raised)
common/OpTestIPMI.py:467:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:474:11: C0117: Consider changing "not 'Chassis Power Control: Diag' in r" to "'Chassis Power Control: Diag' not in r" (unnecessary-negation)
common/OpTestIPMI.py:475:12: W0719: Raising too general exception: Exception (broad-exception-raised)
common/OpTestIPMI.py:475:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:498:11: C0117: Consider changing "not 'Host Status' in output" to "'Host Status' not in output" (unnecessary-negation)
common/OpTestIPMI.py:518:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/OpTestIPMI.py:535:11: C0117: Consider changing "not 'Host Status' in output" to "'Host Status' not in output" (unnecessary-negation)
common/OpTestIPMI.py:595:11: C0117: Consider changing "not 'OS Boot' in output" to "'OS Boot' not in output" (unnecessary-negation)
common/OpTestIPMI.py:624:11: C0117: Consider changing "not 'OS Boot' in l_output" to "'OS Boot' not in l_output" (unnecessary-negation)
common/OpTestIPMI.py:651:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
common/OpTestIPMI.py:652:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:668:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:682:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestIPMI.py:697:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:705:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:706:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:711:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:711:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:731:12: W0702: No exception type(s) specified (bare-except)
common/OpTestIPMI.py:754:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:757:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:758:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:758:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:765:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:766:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:810:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:810:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:811:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestIPMI.py:811:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestIPMI.py:790:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestIPMI.py:835:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestIPMI.py:837:19: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestIPMI.py:848:19: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
common/OpTestIPMI.py:865:4: C0103: Method name "ipmi_get_PNOR_level" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:928:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:928:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:937:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1087:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:1087:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1088:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1090:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestIPMI.py:1094:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestIPMI.py:1094:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1095:32: E0602: Undefined variable 'l_les' (undefined-variable)
common/OpTestIPMI.py:1097:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1098:32: E0602: Undefined variable 'l_les' (undefined-variable)
common/OpTestIPMI.py:1059:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestIPMI.py:1196:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:1208:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:1225:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestIPMI.py:1242:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
common/OpTestIPMI.py:1263:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:1330:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestIPMI.py:1330:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1331:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestIPMI.py:1340:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:1351:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:1362:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestIPMI.py:1368:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1371:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1374:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1377:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1380:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1383:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1386:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1389:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1392:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1396:8: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestIPMI.py:1395:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:1401:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestIPMI.py:1405:8: W0622: Redefining built-in 'id' (redefined-builtin)
common/OpTestIPMI.py:1404:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
common/OpTestIPMI.py:348:0: R0904: Too many public methods (60/20) (too-many-public-methods)
common/OpTestIPMI.py:1411:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestIPMI.py:1427:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestIPMI.py:1425:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestIPMI.py:42:0: C0411: standard import "sys" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestIPMI.py:43:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestIPMI.py:55:0: C0411: standard import "logging" should be placed before third party import "pexpect" and local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestUtil.OpTestUtil" (...) "Exceptions.BMCDisconnected", ".OPexpect", "SerialConsole.SerialConsole" (wrong-import-order)
common/OpTestIPMI.py:56:0: C0411: first party import "OpTestLogger" should be placed before local imports "OpTestConstants.OpTestConstants", "OpTestError.OpTestError", "OpTestUtil.OpTestUtil" (...) "Exceptions.BMCDisconnected", ".OPexpect", "SerialConsole.SerialConsole" (wrong-import-order)
common/OpTestIPMI.py:50:0: W0611: Unused BMCDisconnected imported from Exceptions (unused-import)
common/OpTestIPMI.py:55:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestSystem
common/OpTestSystem.py:117:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestSystem.py:144:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestSystem.py:145:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestSystem.py:216:0: C0301: Line too long (132/100) (line-too-long)
common/OpTestSystem.py:217:0: C0301: Line too long (120/100) (line-too-long)
common/OpTestSystem.py:227:0: C0301: Line too long (136/100) (line-too-long)
common/OpTestSystem.py:228:0: C0301: Line too long (120/100) (line-too-long)
common/OpTestSystem.py:239:0: C0301: Line too long (128/100) (line-too-long)
common/OpTestSystem.py:312:0: C0301: Line too long (130/100) (line-too-long)
common/OpTestSystem.py:361:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestSystem.py:370:0: C0301: Line too long (108/100) (line-too-long)
common/OpTestSystem.py:372:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestSystem.py:373:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:375:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSystem.py:401:0: C0301: Line too long (105/100) (line-too-long)
common/OpTestSystem.py:402:0: C0301: Line too long (117/100) (line-too-long)
common/OpTestSystem.py:406:0: C0301: Line too long (109/100) (line-too-long)
common/OpTestSystem.py:438:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:440:0: C0325: Unnecessary parens after 'elif' keyword (superfluous-parens)
common/OpTestSystem.py:451:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:459:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:471:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:474:0: C0301: Line too long (115/100) (line-too-long)
common/OpTestSystem.py:482:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:485:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestSystem.py:518:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:531:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestSystem.py:547:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestSystem.py:554:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
common/OpTestSystem.py:566:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:584:0: C0301: Line too long (107/100) (line-too-long)
common/OpTestSystem.py:593:0: C0301: Line too long (131/100) (line-too-long)
common/OpTestSystem.py:594:0: C0301: Line too long (122/100) (line-too-long)
common/OpTestSystem.py:596:0: C0301: Line too long (140/100) (line-too-long)
common/OpTestSystem.py:597:0: C0301: Line too long (117/100) (line-too-long)
common/OpTestSystem.py:598:0: C0301: Line too long (204/100) (line-too-long)
common/OpTestSystem.py:599:0: C0301: Line too long (208/100) (line-too-long)
common/OpTestSystem.py:600:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:607:0: C0301: Line too long (112/100) (line-too-long)
common/OpTestSystem.py:630:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:640:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSystem.py:643:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSystem.py:655:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestSystem.py:657:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestSystem.py:669:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:671:0: C0301: Line too long (131/100) (line-too-long)
common/OpTestSystem.py:674:0: C0301: Line too long (158/100) (line-too-long)
common/OpTestSystem.py:675:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSystem.py:690:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestSystem.py:720:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestSystem.py:721:0: C0301: Line too long (132/100) (line-too-long)
common/OpTestSystem.py:722:0: C0301: Line too long (160/100) (line-too-long)
common/OpTestSystem.py:723:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestSystem.py:731:0: C0301: Line too long (139/100) (line-too-long)
common/OpTestSystem.py:736:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestSystem.py:771:0: C0301: Line too long (119/100) (line-too-long)
common/OpTestSystem.py:791:0: C0301: Line too long (132/100) (line-too-long)
common/OpTestSystem.py:792:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestSystem.py:793:0: C0301: Line too long (148/100) (line-too-long)
common/OpTestSystem.py:794:0: C0301: Line too long (121/100) (line-too-long)
common/OpTestSystem.py:798:0: C0301: Line too long (139/100) (line-too-long)
common/OpTestSystem.py:803:0: C0301: Line too long (110/100) (line-too-long)
common/OpTestSystem.py:861:0: C0301: Line too long (103/100) (line-too-long)
common/OpTestSystem.py:968:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:992:0: C0301: Line too long (159/100) (line-too-long)
common/OpTestSystem.py:1044:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
common/OpTestSystem.py:1178:0: C0301: Line too long (104/100) (line-too-long)
common/OpTestSystem.py:1180:0: C0301: Line too long (101/100) (line-too-long)
common/OpTestSystem.py:1193:0: C0301: Line too long (114/100) (line-too-long)
common/OpTestSystem.py:1219:0: C0301: Line too long (126/100) (line-too-long)
common/OpTestSystem.py:1445:0: C0301: Line too long (124/100) (line-too-long)
common/OpTestSystem.py:1:0: C0302: Too many lines in module (1660/1000) (too-many-lines)
common/OpTestSystem.py:435:61: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestSystem.py:501:62: W1401: Anomalous backslash in string: '\$'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
common/OpTestSystem.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestSystem.py:1:0: C0103: Module name "OpTestSystem" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:35:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestSystem.py:59:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestSystem.py:75:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestSystem.py:98:19: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:99:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:100:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:105:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:106:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:107:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:184:8: C0103: Attribute name "stateHandlers" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:199:8: C0103: Attribute name "ipmiDriversLoaded" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:75:0: R0205: Class 'OpTestSystem' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
common/OpTestSystem.py:75:0: R0902: Too many instance attributes (39/7) (too-many-instance-attributes)
common/OpTestSystem.py:90:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestSystem.py:90:4: R0915: Too many statements (58/50) (too-many-statements)
common/OpTestSystem.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:203:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:204:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:210:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:212:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:213:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:216:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:216:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:221:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:223:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:224:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:227:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:227:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:234:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:235:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:239:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:244:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:246:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:247:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:276:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:249:8: W0612: Unused variable 'xmon_check_r' (unused-variable)
common/OpTestSystem.py:256:8: W0612: Unused variable 'rc' (unused-variable)
common/OpTestSystem.py:288:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:290:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:291:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:296:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:300:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:305:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:307:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:308:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:312:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:317:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:320:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:326:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:332:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:335:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:338:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:341:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:344:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:344:4: E0202: An attribute defined in common.OpTestSystem line 98 hides this method (method-hidden)
common/OpTestSystem.py:347:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:347:4: E0202: An attribute defined in common.OpTestSystem line 101 hides this method (method-hidden)
common/OpTestSystem.py:350:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:353:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:356:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:359:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:364:12: R1701: Consider merging these isinstance calls to isinstance(self.console, (OpTestMambo.MamboConsole, OpTestQemu.QemuConsole)) (consider-merging-isinstance)
common/OpTestSystem.py:374:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:375:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:377:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:377:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:379:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:379:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:395:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:395:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:410:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:410:4: C0103: Method name "run_DETECT" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:424:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:438:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:451:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:455:16: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:459:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:471:16: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:482:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:485:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:492:13: R1714: Consider merging these comparisons with 'in' by using 'r in (5, 6)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestSystem.py:424:4: R0911: Too many return statements (19/6) (too-many-return-statements)
common/OpTestSystem.py:424:4: R0912: Too many branches (27/12) (too-many-branches)
common/OpTestSystem.py:424:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestSystem.py:495:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:507:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:515:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:518:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
common/OpTestSystem.py:515:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:529:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:532:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:533:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:571:31: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:586:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:590:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:609:24: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:529:4: R0912: Too many branches (22/12) (too-many-branches)
common/OpTestSystem.py:529:4: R0915: Too many statements (62/50) (too-many-statements)
common/OpTestSystem.py:529:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestSystem.py:619:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:622:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/OpTestSystem.py:623:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/OpTestSystem.py:630:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:653:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:653:4: C0103: Method name "run_REBOOT" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:657:11: R1714: Consider merging these comparisons with 'in' by using 'target_state in (OpSystemState.PETITBOOT_SHELL, OpSystemState.PETITBOOT)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestSystem.py:676:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:670:16: W0612: Unused variable 'my_r' (unused-variable)
common/OpTestSystem.py:670:22: W0612: Unused variable 'my_reconnect' (unused-variable)
common/OpTestSystem.py:676:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:679:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:679:4: C0103: Method name "run_UNKNOWN" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:679:26: W0613: Unused argument 'state' (unused-argument)
common/OpTestSystem.py:684:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:684:4: C0103: Method name "run_OFF" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:700:11: R1714: Consider merging these comparisons with 'in' by using 'state in (OpSystemState.PETITBOOT, OpSystemState.PETITBOOT_SHELL)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestSystem.py:708:16: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestSystem.py:711:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:711:4: C0103: Method name "run_IPLing" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:729:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:731:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:731:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:740:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:745:12: W0707: Consider explicitly re-raising using 'raise my_exception from e' (raise-missing-from)
common/OpTestSystem.py:711:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestSystem.py:721:21: W0612: Unused variable 'petit_reconnect' (unused-variable)
common/OpTestSystem.py:752:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:752:4: C0103: Method name "run_PETITBOOT" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:773:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:773:4: C0103: Method name "run_PETITBOOT_SHELL" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:787:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:787:4: C0103: Method name "run_BOOTING" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:796:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:798:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:798:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:806:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:812:12: W0707: Consider explicitly re-raising using 'raise my_exception from e' (raise-missing-from)
common/OpTestSystem.py:787:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
common/OpTestSystem.py:787:26: W0613: Unused argument 'state' (unused-argument)
common/OpTestSystem.py:792:21: W0612: Unused variable 'login_reconnect' (unused-variable)
common/OpTestSystem.py:818:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:818:4: C0103: Method name "run_OS" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:826:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:826:4: C0103: Method name "run_POWERING_OFF" doesn't conform to snake_case naming style (invalid-name)
common/OpTestSystem.py:826:31: W0613: Unused argument 'state' (unused-argument)
common/OpTestSystem.py:843:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:857:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:857:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:888:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:898:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:908:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:917:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:924:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:927:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:930:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:933:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:941:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:944:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:953:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:956:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:965:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:971:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:981:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:984:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:997:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1011:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1024:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1042:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1044:11: C0121: Comparison 'self.cv_HOST.ip == None' should be 'self.cv_HOST.ip is None' (singleton-comparison)
common/OpTestSystem.py:1054:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:1054:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1062:12: W0621: Redefining name 'e' from outer scope (line 1053) (redefined-outer-name)
common/OpTestSystem.py:1062:12: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1075:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1100:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1127:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1131:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1141:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1162:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1165:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestSystem.py:1168:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1170:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1170:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1171:12: W0612: Unused variable 'i' (unused-variable)
common/OpTestSystem.py:1182:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1185:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1185:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1199:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1201:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1201:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1203:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:1220:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:1211:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1211:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1215:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:1222:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1222:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1224:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1226:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1226:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1231:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1231:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1232:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1232:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1233:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1233:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1234:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestSystem.py:1239:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1243:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1243:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1248:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1248:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1304:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestSystem.py:1253:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1255:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1258:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1258:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1260:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
common/OpTestSystem.py:1260:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1265:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1265:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1266:19: R1714: Consider merging these comparisons with 'in' by using 'e.errno in (errno.ECONNRESET, errno.EPIPE)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestSystem.py:1267:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1267:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1268:20: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestSystem.py:1270:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1270:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1278:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1278:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1279:19: R1714: Consider merging these comparisons with 'in' by using 'e.errno in (errno.ECONNRESET, errno.EPIPE)'. Use a set instead if elements are hashable. (consider-using-in)
common/OpTestSystem.py:1281:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1281:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1282:20: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestSystem.py:1285:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1285:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1289:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1289:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1291:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1291:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1293:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1293:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1298:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1298:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1302:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1302:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1305:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestSystem.py:1305:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestSystem.py:1325:12: W0621: Redefining name 'e' from outer scope (line 1304) (redefined-outer-name)
common/OpTestSystem.py:1239:4: R0912: Too many branches (18/12) (too-many-branches)
common/OpTestSystem.py:1239:4: R0915: Too many statements (73/50) (too-many-statements)
common/OpTestSystem.py:1331:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1334:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1337:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:75:0: R0904: Too many public methods (66/20) (too-many-public-methods)
common/OpTestSystem.py:1355:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1367:15: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1365:8: W0612: Unused variable 'sys_pty' (unused-variable)
common/OpTestSystem.py:1393:4: R0913: Too many arguments (6/5) (too-many-arguments)
common/OpTestSystem.py:1402:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1427:15: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1426:8: W0612: Unused variable 'sys_pty' (unused-variable)
common/OpTestSystem.py:1447:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
common/OpTestSystem.py:1450:12: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
common/OpTestSystem.py:1452:16: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestSystem.py:1486:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1492:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1495:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1498:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestSystem.py:1529:4: W0221: Number of parameters was 2 in 'OpTestSystem.sys_sel_check' and is now 1 in overriding 'OpTestOpenBMCSystem.sys_sel_check' method (arguments-differ)
common/OpTestSystem.py:1542:15: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1540:8: W0612: Unused variable 'sys_pty' (unused-variable)
common/OpTestSystem.py:1471:0: R0904: Too many public methods (22/20) (too-many-public-methods)
common/OpTestSystem.py:1590:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:1632:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
common/OpTestSystem.py:36:0: C0411: standard import "socket" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestSystem.py:37:0: C0411: standard import "errno" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestSystem.py:38:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestSystem.py:54:0: C0411: standard import "logging" should be placed before third party import "pexpect" and local imports ".OpTestIPMI", ".OpTestQemu", ".OpTestMambo" (...) "Exceptions.HostbootShutdown", "Exceptions.ConsoleSettings", "OpTestSSH.OpTestSSH" (wrong-import-order)
common/OpTestSystem.py:55:0: C0411: first party import "OpTestLogger" should be placed before local imports ".OpTestIPMI", ".OpTestQemu", ".OpTestMambo" (...) "Exceptions.HostbootShutdown", "Exceptions.ConsoleSettings", "OpTestSSH.OpTestSSH" (wrong-import-order)
common/OpTestSystem.py:44:0: W0611: Unused OpTestFSP imported from OpTestFSP (unused-import)
common/OpTestSystem.py:47:0: W0611: Unused import OpTestHost (unused-import)
common/OpTestSystem.py:48:0: W0611: Unused OpTestUtil imported from OpTestUtil (unused-import)
common/OpTestSystem.py:52:0: W0611: Unused OpTestSSH imported from OpTestSSH (unused-import)
common/OpTestSystem.py:54:0: W0611: Unused import logging (unused-import)
************* Module common.Exceptions
common/Exceptions.py:1:0: C0103: Module name "Exceptions" doesn't conform to snake_case naming style (invalid-name)
common/Exceptions.py:45:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:58:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:71:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:86:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:99:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:113:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:130:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:144:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:161:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:176:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:190:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:204:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:208:0: C0115: Missing class docstring (missing-class-docstring)
common/Exceptions.py:214:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:228:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:242:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:256:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:271:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:292:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:293:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:301:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:315:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:316:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:322:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:336:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:337:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:343:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:359:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:360:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:368:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:383:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:384:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:392:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:405:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:406:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:414:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:429:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:430:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:448:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:449:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:457:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:471:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:472:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:480:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/Exceptions.py:506:8: C0206: Consider iterating with .items() (consider-using-dict-items)
common/Exceptions.py:507:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
common/Exceptions.py:513:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module common.OpTestCronus
common/OpTestCronus.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/OpTestCronus.py:1:0: C0103: Module name "OpTestCronus" doesn't conform to snake_case naming style (invalid-name)
common/OpTestCronus.py:73:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
common/OpTestCronus.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestCronus.py:80:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:80:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestCronus.py:82:4: R0914: Too many local variables (19/15) (too-many-locals)
common/OpTestCronus.py:87:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:87:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:94:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:94:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:96:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:96:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:98:34: W1308: Duplicate string formatting argument 'just_ip', consider passing as named argument (duplicate-string-formatting-argument)
common/OpTestCronus.py:98:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:114:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestCronus.py:115:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:115:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:118:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:128:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:128:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:136:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
common/OpTestCronus.py:143:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:143:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:147:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:147:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:152:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:152:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:156:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='Cronus environment issue rc={} output={} traceback={}'.format(e.returncode, e.output, tb)) from e' (raise-missing-from)
common/OpTestCronus.py:156:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:161:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='Cronus environment issue Exception={} traceback={}'.format(e, tb)) from e' (raise-missing-from)
common/OpTestCronus.py:161:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:169:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:169:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:171:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:175:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:175:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:178:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:178:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:185:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:185:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:189:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:193:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:193:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:195:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestCronus.py:195:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:204:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='Cronus setup issue rc={} output={} traceback={}'.format(e.returncode, e.output, tb)) from e' (raise-missing-from)
common/OpTestCronus.py:204:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:209:12: W0707: Consider explicitly re-raising using 'raise UnexpectedCase(message='Cronus setup issue Exception={} traceback={}'.format(e, tb)) from e' (raise-missing-from)
common/OpTestCronus.py:209:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestCronus.py:82:4: R0912: Too many branches (15/12) (too-many-branches)
common/OpTestCronus.py:82:4: R0915: Too many statements (76/50) (too-many-statements)
common/OpTestCronus.py:146:19: W0612: Unused variable 'v' (unused-variable)
common/OpTestCronus.py:37:0: C0411: standard import "logging" should be placed before local imports "Exceptions.ParameterCheck", "OpTestSystem.OpSystemState" (wrong-import-order)
common/OpTestCronus.py:38:0: C0411: first party import "OpTestLogger" should be placed before local imports "Exceptions.ParameterCheck", "OpTestSystem.OpSystemState" (wrong-import-order)
common/OpTestCronus.py:28:0: W0611: Unused import datetime (unused-import)
common/OpTestCronus.py:29:0: W0611: Unused import time (unused-import)
common/OpTestCronus.py:34:0: W0611: Unused ParameterCheck imported from Exceptions (unused-import)
common/OpTestCronus.py:37:0: W0611: Unused import logging (unused-import)
************* Module common.OpTestQemu
common/OpTestQemu.py:222:0: C0301: Line too long (102/100) (line-too-long)
common/OpTestQemu.py:244:0: C0301: Line too long (106/100) (line-too-long)
common/OpTestQemu.py:1:0: C0103: Module name "OpTestQemu" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:28:0: E0401: Unable to import 'pexpect' (import-error)
common/OpTestQemu.py:43:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestQemu.py:43:0: R0903: Too few public methods (0/2) (too-few-public-methods)
common/OpTestQemu.py:84:8: C0103: Attribute name "PS1_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:85:8: C0103: Attribute name "LOGIN_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:86:8: C0103: Attribute name "SUDO_set" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:48:0: R0902: Too many instance attributes (22/7) (too-many-instance-attributes)
common/OpTestQemu.py:54:4: R0913: Too many arguments (12/5) (too-many-arguments)
common/OpTestQemu.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:103:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:129:15: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestQemu.py:119:12: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:122:20: C0103: Variable name "exitCode" doesn't conform to snake_case naming style (invalid-name)
common/OpTestQemu.py:128:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
common/OpTestQemu.py:131:12: W0107: Unnecessary pass statement (unnecessary-pass)
common/OpTestQemu.py:118:12: W0612: Unused variable 'rc_child' (unused-variable)
common/OpTestQemu.py:119:12: W0612: Unused variable 'exitCode' (unused-variable)
common/OpTestQemu.py:119:23: W0612: Unused variable 'signalstatus' (unused-variable)
common/OpTestQemu.py:126:8: W0612: Unused variable 'e' (unused-variable)
common/OpTestQemu.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:134:4: R0914: Too many local variables (16/15) (too-many-locals)
common/OpTestQemu.py:135:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
common/OpTestQemu.py:142:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:147:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:152:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:154:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:156:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:158:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:174:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:182:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:209:50: C0121: Comparison 'x['bridged'] == False' should be 'x['bridged'] is False' if checking for the singleton value False, or 'not x['bridged']' if testing for falsiness (singleton-comparison)
common/OpTestQemu.py:211:34: E0602: Undefined variable 'OpTestError' (undefined-variable)
common/OpTestQemu.py:217:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:222:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:200:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
common/OpTestQemu.py:234:34: E0602: Undefined variable 'OpTestError' (undefined-variable)
common/OpTestQemu.py:239:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:242:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:244:28: W1308: Duplicate string formatting argument 'diskid', consider passing as named argument (duplicate-string-formatting-argument)
common/OpTestQemu.py:244:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:262:12: W0707: Consider explicitly re-raising using 'raise CommandFailed('OPexpect.spawn', 'OPexpect.spawn encountered a problem: ' + str(e), -1) from e' (raise-missing-from)
common/OpTestQemu.py:134:4: R0912: Too many branches (22/12) (too-many-branches)
common/OpTestQemu.py:134:4: R0915: Too many statements (82/50) (too-many-statements)
common/OpTestQemu.py:282:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:293:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:296:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:315:42: W0613: Unused argument 'i_timeout' (unused-argument)
common/OpTestQemu.py:319:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:322:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:325:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:328:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:331:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:335:0: C0115: Missing class docstring (missing-class-docstring)
common/OpTestQemu.py:336:4: R0913: Too many arguments (9/5) (too-many-arguments)
common/OpTestQemu.py:351:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestQemu.py:346:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestQemu.py:346:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:352:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestQemu.py:352:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:358:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestQemu.py:361:16: W0612: Unused variable 'create_hda' (unused-variable)
common/OpTestQemu.py:383:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:385:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestQemu.py:385:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:389:19: W0718: Catching too general exception Exception (broad-exception-caught)
common/OpTestQemu.py:390:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
common/OpTestQemu.py:390:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
common/OpTestQemu.py:394:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:397:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:400:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:400:26: W0613: Unused argument 'command' (unused-argument)
common/OpTestQemu.py:400:35: W0613: Unused argument 'timeout' (unused-argument)
common/OpTestQemu.py:400:47: W0613: Unused argument 'retry' (unused-argument)
common/OpTestQemu.py:404:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:407:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:410:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:413:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:416:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:419:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:422:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:425:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:428:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:431:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:434:4: C0116: Missing function or method docstring (missing-function-docstring)
common/OpTestQemu.py:437:13: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
common/OpTestQemu.py:439:8: W0612: Unused variable 'create_hda' (unused-variable)
common/OpTestQemu.py:29:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestQemu.py:30:0: C0411: standard import "tempfile" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestQemu.py:31:0: C0411: standard import "os" should be placed before third party import "pexpect" (wrong-import-order)
common/OpTestQemu.py:36:0: C0411: first party import "OpTestConfiguration" should be placed before local imports ".OPexpect", "OpTestUtil.OpTestUtil" (wrong-import-order)
common/OpTestQemu.py:38:0: C0411: standard import "logging" should be placed before third party import "pexpect", first party imports "common.Exceptions.CommandFailed", "OpTestConfiguration", and local imports ".OPexpect", "OpTestUtil.OpTestUtil" (wrong-import-order)
common/OpTestQemu.py:39:0: C0411: first party import "OpTestLogger" should be placed before local imports ".OPexpect", "OpTestUtil.OpTestUtil" (wrong-import-order)
common/OpTestQemu.py:38:0: W0611: Unused import logging (unused-import)
************* Module common.util.web.FWUpdatePage
common/util/web/FWUpdatePage.py:211:0: C0301: Line too long (101/100) (line-too-long)
common/util/web/FWUpdatePage.py:321:0: C0301: Line too long (102/100) (line-too-long)
common/util/web/FWUpdatePage.py:325:0: C0301: Line too long (102/100) (line-too-long)
common/util/web/FWUpdatePage.py:341:0: C0301: Line too long (102/100) (line-too-long)
common/util/web/FWUpdatePage.py:357:0: C0301: Line too long (102/100) (line-too-long)
common/util/web/FWUpdatePage.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/FWUpdatePage.py:1:0: C0103: Module name "FWUpdatePage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:28:0: W0401: Wildcard import seleniumimports (wildcard-import)
common/util/web/FWUpdatePage.py:30:0: E0401: Unable to import 'selenium.webdriver.support.ui' (import-error)
common/util/web/FWUpdatePage.py:31:0: E0401: Unable to import 'OpTestConstants' (import-error)
common/util/web/FWUpdatePage.py:32:0: E0401: Unable to import 'OpTestError' (import-error)
common/util/web/FWUpdatePage.py:48:0: C0115: Missing class docstring (missing-class-docstring)
common/util/web/FWUpdatePage.py:56:8: C0103: Attribute name "Page" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:67:4: C0103: Method name "getUpdateOptionsPage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:79:8: C0103: Variable name "FWUpdate" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:83:8: C0103: Variable name "FWUpdate_menu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:86:8: C0103: Variable name "FWUpdate_submenu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:71:12: W0612: Unused variable 'alert' (unused-variable)
common/util/web/FWUpdatePage.py:83:8: W0612: Unused variable 'FWUpdate_menu' (unused-variable)
common/util/web/FWUpdatePage.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:101:4: C0103: Method name "getProtocolConfigPage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:106:8: C0103: Variable name "FWUpdate" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:110:8: C0103: Variable name "FWUpdate_menu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:113:8: C0103: Variable name "FWUpdate_submenu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:110:8: W0612: Unused variable 'FWUpdate_menu' (unused-variable)
common/util/web/FWUpdatePage.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:128:4: C0103: Method name "selectAMI" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:132:8: C0103: Variable name "FWUpdate_AMI" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:136:8: C0103: Variable name "FWUpdate_AMI" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:152:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:152:4: C0103: Method name "doContinue" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:153:8: C0103: Variable name "FWUpdate_EnterUpdateMode" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:160:8: W0612: Unused variable 'alert' (unused-variable)
common/util/web/FWUpdatePage.py:172:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:172:4: C0103: Method name "selectHPM" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:176:8: C0103: Variable name "FWUpdate_HPM" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:180:8: C0103: Variable name "FWUpdate_HPM" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:201:4: C0103: Method name "selectProtocolType" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:211:12: C0103: Variable name "FWUpdate_protocoltype" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:208:12: W0612: Unused variable 'i' (unused-variable)
common/util/web/FWUpdatePage.py:230:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:230:4: C0103: Method name "inputServerAddress" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:231:8: C0103: Variable name "FWUpdate_protocoltype" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:249:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:249:4: C0103: Method name "inputImageName" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:250:8: C0103: Variable name "FWUpdate_imagename" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:268:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:268:4: C0103: Method name "doSave" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:269:8: C0103: Variable name "FWUpdate_Save" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:275:8: W0612: Unused variable 'alert' (unused-variable)
common/util/web/FWUpdatePage.py:288:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:288:4: C0103: Method name "selectFile" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:289:8: C0103: Variable name "FWUpdate_FileSelect" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:304:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:304:4: C0103: Method name "doOK" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:305:8: C0103: Variable name "FWUpdate_OK_BUTTON" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:320:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:320:4: C0103: Method name "selectUpdateAll" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:321:8: C0103: Variable name "FWUpdate_SELECT_BIOS_RADIO" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:325:8: C0103: Variable name "FWUpdate_SELECT_BOOT_RADIO" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:340:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:340:4: C0103: Method name "selectUpdateBios" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:341:8: C0103: Variable name "FWUpdate_SELECT_BIOS_RADIO" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:356:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:356:4: C0103: Method name "selectUpdateBoot_APP" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:357:8: C0103: Variable name "FWUpdate_SELECT_BOOT_RADIO" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:372:4: C0103: Method name "doProceed" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:373:8: C0103: Variable name "FWUpdate_PROCEED_BUTTON" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:379:8: W0612: Unused variable 'alert' (unused-variable)
common/util/web/FWUpdatePage.py:392:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/FWUpdatePage.py:392:4: C0103: Method name "WaitForFWUpdateComplete" doesn't conform to snake_case naming style (invalid-name)
common/util/web/FWUpdatePage.py:396:12: W0612: Unused variable 'alert' (unused-variable)
common/util/web/FWUpdatePage.py:30:0: C0411: third party import "selenium.webdriver.support.ui.Select" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/FWUpdatePage.py:31:0: C0411: third party import "OpTestConstants.OpTestConstants" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/FWUpdatePage.py:32:0: C0411: third party import "OpTestError.OpTestError" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/FWUpdatePage.py:33:0: C0411: standard import "time" should be placed before third party imports "selenium.webdriver.support.ui.Select", "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" and local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/FWUpdatePage.py:27:0: W0611: Unused Page imported from Page (unused-import)
common/util/web/FWUpdatePage.py:30:0: W0611: Unused Select imported from selenium.webdriver.support.ui (unused-import)
common/util/web/FWUpdatePage.py:32:0: W0611: Unused OpTestError imported from OpTestError (unused-import)
common/util/web/FWUpdatePage.py:28:0: W0614: Unused import(s) webdriver, Keys and NoSuchElementException from wildcard import of seleniumimports (unused-wildcard-import)
************* Module common.util.web.MaintenancePage
common/util/web/MaintenancePage.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/MaintenancePage.py:1:0: C0103: Module name "MaintenancePage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:28:0: W0401: Wildcard import seleniumimports (wildcard-import)
common/util/web/MaintenancePage.py:30:0: E0401: Unable to import 'selenium.webdriver.support.ui' (import-error)
common/util/web/MaintenancePage.py:31:0: E0401: Unable to import 'OpTestConstants' (import-error)
common/util/web/MaintenancePage.py:32:0: E0401: Unable to import 'OpTestError' (import-error)
common/util/web/MaintenancePage.py:46:0: C0115: Missing class docstring (missing-class-docstring)
common/util/web/MaintenancePage.py:58:8: C0103: Attribute name "Page" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/MaintenancePage.py:68:4: C0103: Method name "getMaintenancePage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:70:12: C0103: Variable name "Maintenance" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:74:12: C0103: Variable name "Maintenance_menu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:77:12: C0103: Variable name "Maintenance_submenu" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:84:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/util/web/MaintenancePage.py:74:12: W0612: Unused variable 'Maintenance_menu' (unused-variable)
common/util/web/MaintenancePage.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/MaintenancePage.py:98:4: C0103: Method name "selectOption" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:109:12: C0103: Variable name "Maintenance" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:121:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/util/web/MaintenancePage.py:129:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/MaintenancePage.py:129:4: C0103: Method name "preserveIPMI" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/MaintenancePage.py:137:4: C0103: Method name "preserveNetwork" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:146:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/MaintenancePage.py:146:4: C0103: Method name "savePage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:157:12: C0103: Variable name "Maintenance" doesn't conform to snake_case naming style (invalid-name)
common/util/web/MaintenancePage.py:164:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/util/web/MaintenancePage.py:30:0: C0411: third party import "selenium.webdriver.support.ui.Select" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/MaintenancePage.py:31:0: C0411: third party import "OpTestConstants.OpTestConstants" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/MaintenancePage.py:32:0: C0411: third party import "OpTestError.OpTestError" should be placed before local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/MaintenancePage.py:33:0: C0411: standard import "time" should be placed before third party imports "selenium.webdriver.support.ui.Select", "OpTestConstants.OpTestConstants", "OpTestError.OpTestError" and local imports "Page.Page", "seleniumimports.*", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/MaintenancePage.py:27:0: W0611: Unused Page imported from Page (unused-import)
common/util/web/MaintenancePage.py:30:0: W0611: Unused Select imported from selenium.webdriver.support.ui (unused-import)
common/util/web/MaintenancePage.py:33:0: W0611: Unused import time (unused-import)
common/util/web/MaintenancePage.py:28:0: W0614: Unused import(s) webdriver, Keys, NoSuchElementException and TimeoutException from wildcard import of seleniumimports (unused-wildcard-import)
************* Module common.util.web.Page
common/util/web/Page.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/Page.py:1:0: C0103: Module name "Page" doesn't conform to snake_case naming style (invalid-name)
common/util/web/Page.py:27:0: E0401: Unable to import 'selenium' (import-error)
common/util/web/Page.py:42:0: C0115: Missing class docstring (missing-class-docstring)
common/util/web/Page.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/Page.py:59:4: C0103: Method name "getPage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/Page.py:42:0: R0903: Too few public methods (1/2) (too-few-public-methods)
common/util/web/Page.py:27:0: W0611: Unused webdriver imported from selenium (unused-import)
************* Module common.util.web.LoginPage
common/util/web/LoginPage.py:93:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
common/util/web/LoginPage.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/LoginPage.py:1:0: C0103: Module name "LoginPage" doesn't conform to snake_case naming style (invalid-name)
common/util/web/LoginPage.py:28:0: E0401: Unable to import 'engine.FWObject' (import-error)
common/util/web/LoginPage.py:30:0: E0401: Unable to import 'connection.common.FWConnection' (import-error)
common/util/web/LoginPage.py:31:0: E0401: Unable to import 'OpTestConstants' (import-error)
common/util/web/LoginPage.py:32:0: E0401: Unable to import 'OpTestError' (import-error)
common/util/web/LoginPage.py:33:0: W0401: Wildcard import seleniumimports (wildcard-import)
common/util/web/LoginPage.py:46:0: C0115: Missing class docstring (missing-class-docstring)
common/util/web/LoginPage.py:55:8: C0103: Attribute name "Page" doesn't conform to snake_case naming style (invalid-name)
common/util/web/LoginPage.py:56:8: C0103: Attribute name "Username" doesn't conform to snake_case naming style (invalid-name)
common/util/web/LoginPage.py:57:8: C0103: Attribute name "Password" doesn't conform to snake_case naming style (invalid-name)
common/util/web/LoginPage.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
common/util/web/LoginPage.py:77:12: W0707: Consider explicitly re-raising using 'except NoSuchElementException as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/util/web/LoginPage.py:95:12: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise OpTestError(l_msg) from exc' (raise-missing-from)
common/util/web/LoginPage.py:46:0: R0903: Too few public methods (1/2) (too-few-public-methods)
common/util/web/LoginPage.py:28:0: C0411: third party import "engine.FWObject.FWObject" should be placed before local import "Page.Page" (wrong-import-order)
common/util/web/LoginPage.py:30:0: C0411: third party import "connection.common.FWConnection.FWConnection" should be placed before local imports "Page.Page", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/LoginPage.py:31:0: C0411: third party import "OpTestConstants.OpTestConstants" should be placed before local imports "Page.Page", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/LoginPage.py:32:0: C0411: third party import "OpTestError.OpTestError" should be placed before local imports "Page.Page", "BmcPageConstants.BmcPageConstants" (wrong-import-order)
common/util/web/LoginPage.py:27:0: W0611: Unused Page imported from Page (unused-import)
common/util/web/LoginPage.py:28:0: W0611: Unused FWObject imported from engine.FWObject (unused-import)
common/util/web/LoginPage.py:30:0: W0611: Unused FWConnection imported from connection.common.FWConnection (unused-import)
common/util/web/LoginPage.py:33:0: W0614: Unused import(s) webdriver, Keys and TimeoutException from wildcard import of seleniumimports (unused-wildcard-import)
************* Module common.util.web.seleniumimports
common/util/web/seleniumimports.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/seleniumimports.py:27:0: E0401: Unable to import 'selenium' (import-error)
common/util/web/seleniumimports.py:28:0: E0401: Unable to import 'selenium.webdriver.common.keys' (import-error)
common/util/web/seleniumimports.py:29:0: E0401: Unable to import 'selenium.webdriver.common.by' (import-error)
common/util/web/seleniumimports.py:30:0: E0401: Unable to import 'selenium.webdriver.support.ui' (import-error)
common/util/web/seleniumimports.py:31:0: E0401: Unable to import 'selenium.webdriver.support' (import-error)
common/util/web/seleniumimports.py:32:0: E0401: Unable to import 'selenium.common.exceptions' (import-error)
common/util/web/seleniumimports.py:33:0: E0401: Unable to import 'selenium.common.exceptions' (import-error)
common/util/web/seleniumimports.py:27:0: W0611: Unused webdriver imported from selenium (unused-import)
common/util/web/seleniumimports.py:28:0: W0611: Unused Keys imported from selenium.webdriver.common.keys (unused-import)
common/util/web/seleniumimports.py:29:0: W0611: Unused By imported from selenium.webdriver.common.by (unused-import)
common/util/web/seleniumimports.py:30:0: W0611: Unused WebDriverWait imported from selenium.webdriver.support.ui (unused-import)
common/util/web/seleniumimports.py:31:0: W0611: Unused expected_conditions imported from selenium.webdriver.support as EC (unused-import)
common/util/web/seleniumimports.py:32:0: W0611: Unused NoSuchElementException imported from selenium.common.exceptions (unused-import)
common/util/web/seleniumimports.py:33:0: W0611: Unused TimeoutException imported from selenium.common.exceptions (unused-import)
************* Module common.util.web.BmcPageConstants
common/util/web/BmcPageConstants.py:1:0: C0114: Missing module docstring (missing-module-docstring)
common/util/web/BmcPageConstants.py:1:0: C0103: Module name "BmcPageConstants" doesn't conform to snake_case naming style (invalid-name)
common/util/web/BmcPageConstants.py:34:0: C0115: Missing class docstring (missing-class-docstring)
common/util/web/BmcPageConstants.py:34:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module conf
doc/conf.py:1:0: C0114: Missing module docstring (missing-module-docstring)
doc/conf.py:57:0: W0622: Redefining built-in 'copyright' (redefined-builtin)
doc/conf.py:50:0: C0103: Constant name "source_suffix" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:53:0: C0103: Constant name "master_doc" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:56:0: C0103: Constant name "project" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:57:0: C0103: Constant name "copyright" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:58:0: C0103: Constant name "author" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:65:0: C0103: Constant name "version" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:67:0: C0103: Constant name "release" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:74:0: C0103: Constant name "language" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:82:0: C0103: Constant name "pygments_style" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:85:0: C0103: Constant name "todo_include_todos" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:93:0: C0103: Constant name "html_theme" doesn't conform to UPPER_CASE naming style (invalid-name)
doc/conf.py:130:0: C0103: Constant name "htmlhelp_basename" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module op-test
op-test:163:0: W0301: Unnecessary semicolon (unnecessary-semicolon)
op-test:183:0: W0301: Unnecessary semicolon (unnecessary-semicolon)
op-test:332:0: C0301: Line too long (101/100) (line-too-long)
op-test:714:0: C0303: Trailing whitespace (trailing-whitespace)
op-test:1:0: C0302: Too many lines in module (1108/1000) (too-many-lines)
op-test:1:0: C0103: Module name "op-test" doesn't conform to snake_case naming style (invalid-name)
op-test:128:0: C0116: Missing function or method docstring (missing-function-docstring)
op-test:136:7: C0121: Comparison 'OpTestConfiguration.conf.signal_ready == True' should be 'OpTestConfiguration.conf.signal_ready is True' if checking for the singleton value True, or 'OpTestConfiguration.conf.signal_ready' if testing for truthiness (singleton-comparison)
op-test:139:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:139:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:128:27: W0613: Unused argument 'frame' (unused-argument)
op-test:162:7: W0718: Catching too general exception Exception (broad-exception-caught)
op-test:163:10: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:166:0: C0116: Missing function or method docstring (missing-function-docstring)
op-test:172:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:176:4: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:181:7: W0718: Catching too general exception Exception (broad-exception-caught)
op-test:183:10: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:199:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:192:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:210:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:203:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:256:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:214:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:295:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:260:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:341:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:299:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:355:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:345:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:362:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:359:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:369:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:366:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:376:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:373:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:390:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:380:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:430:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:394:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:455:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:434:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:465:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:459:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:484:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:478:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:496:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:490:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:505:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:502:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:512:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:509:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:516:0: C0115: Missing class docstring (missing-class-docstring)
op-test:517:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:516:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:521:0: C0115: Missing class docstring (missing-class-docstring)
op-test:522:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:521:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:526:0: C0115: Missing class docstring (missing-class-docstring)
op-test:532:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:526:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:536:0: C0115: Missing class docstring (missing-class-docstring)
op-test:537:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:536:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:541:0: C0115: Missing class docstring (missing-class-docstring)
op-test:542:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:541:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:546:0: C0115: Missing class docstring (missing-class-docstring)
op-test:557:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:546:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:570:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:561:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:582:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:574:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:594:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:586:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:608:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:598:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:615:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:612:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:622:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:619:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:629:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:626:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:636:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:633:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:668:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:639:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:678:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:671:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:684:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:681:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:690:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:687:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:704:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:693:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:715:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:707:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:719:0: C0115: Missing class docstring (missing-class-docstring)
op-test:731:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:719:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:745:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:735:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:749:0: C0115: Missing class docstring (missing-class-docstring)
op-test:755:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:749:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:759:0: C0115: Missing class docstring (missing-class-docstring)
op-test:767:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:759:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:771:0: C0115: Missing class docstring (missing-class-docstring)
op-test:780:17: R1727: Boolean condition ''rhel' or 'fedora' in target.lower()' will always evaluate to ''rhel'' (condition-evals-to-constant)
op-test:788:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:788:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:790:16: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:792:27: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:792:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:797:12: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:799:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:771:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:813:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:803:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:826:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:817:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:838:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:830:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:882:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:842:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:895:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:886:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:908:4: C0116: Missing function or method docstring (missing-function-docstring)
op-test:899:0: R0903: Too few public methods (1/2) (too-few-public-methods)
op-test:1002:7: W0718: Catching too general exception Exception (broad-exception-caught)
op-test:963:4: C0206: Consider iterating with .items() (consider-using-dict-items)
op-test:967:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:968:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:970:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:972:8: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:981:32: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:981:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:995:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:996:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:999:8: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:1001:4: C0103: Constant name "xml_msg" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:1004:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1004:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1006:4: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)
op-test:1009:0: C0116: Missing function or method docstring (missing-function-docstring)
op-test:1009:14: W0621: Redefining name 't' from outer scope (line 974) (redefined-outer-name)
op-test:1016:8: C0415: Import outside toplevel (xmlrunner) (import-outside-toplevel)
op-test:1037:0: C0103: Constant name "exit_code" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:1087:7: W0718: Catching too general exception Exception (broad-exception-caught)
op-test:1039:4: C0103: Constant name "res" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:1040:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1040:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1051:27: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1051:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1065:8: C0103: Constant name "exit_code" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:1070:19: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1070:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1079:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1079:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1081:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1081:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1085:8: C0103: Constant name "exit_code" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:1089:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
op-test:1089:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
op-test:1091:4: C0103: Constant name "exit_code" doesn't conform to UPPER_CASE naming style (invalid-name)
op-test:113:0: C0411: standard import "sys" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:114:0: C0411: standard import "time" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:115:0: C0411: standard import "traceback" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:116:0: C0411: standard import "os" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:117:0: C0411: standard import "unittest" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:118:0: C0411: standard import "re" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:119:0: C0411: standard import "signal" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:120:0: C0411: standard import "logging" should be placed before first party imports "testcases.HelloWorld", "testcases", "testcases.PetitbootMMU" (...) "testcases.Lcov", "testcases.BisectKernel", "OpTestConfiguration"  (wrong-import-order)
op-test:29:0: W0611: Unused HelloWorld imported from testcases (unused-import)
op-test:33:0: W0611: Unused OpTestRebootTimeout imported from testcases (unused-import)
op-test:34:0: W0611: Unused OpTestMtdPnorDriver imported from testcases (unused-import)
op-test:35:0: W0611: Unused OpTestMamboSim imported from testcases (unused-import)
op-test:36:0: W0611: Unused IpmiTorture imported from testcases (unused-import)
op-test:37:0: W0611: Unused InstallUpstreamKernel imported from testcases (unused-import)
op-test:38:0: W0611: Unused EMStress imported from testcases (unused-import)
op-test:39:0: W0611: Unused ConsoleBug150765 imported from testcases (unused-import)
op-test:40:0: W0611: Unused BootTorture imported from testcases (unused-import)
op-test:41:0: W0611: Unused BMCResetTorture imported from testcases (unused-import)
op-test:42:0: W0611: Unused OpTestKernelArg imported from testcases (unused-import)
op-test:73:0: W0611: Unused OpTestFlash imported from testcases (unused-import)
op-test:111:0: W0611: Unused BisectKernel imported from testcases (unused-import)
op-test:118:0: W0611: Unused import re (unused-import)
************* Module requirements
requirements.txt:1:0: C0114: Missing module docstring (missing-module-docstring)
requirements.txt:1:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:1:0: E0602: Undefined variable 'pexpect' (undefined-variable)
requirements.txt:2:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:2:0: E0602: Undefined variable 'unittest' (undefined-variable)
requirements.txt:2:9: E0602: Undefined variable 'xml' (undefined-variable)
requirements.txt:2:13: E0602: Undefined variable 'reporting' (undefined-variable)
requirements.txt:3:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:3:0: E0602: Undefined variable 'ptyprocess' (undefined-variable)
requirements.txt:4:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:4:0: E0602: Undefined variable 'requests' (undefined-variable)
requirements.txt:5:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:5:0: E0602: Undefined variable 'pysocks' (undefined-variable)
requirements.txt:6:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:6:0: E0602: Undefined variable 'unittest2' (undefined-variable)
requirements.txt:7:0: W0104: Statement seems to have no effect (pointless-statement)
requirements.txt:7:0: E0602: Undefined variable 'ninja' (undefined-variable)
************* Module testcases.OpTestIPMIReprovision
testcases/OpTestIPMIReprovision.py:89:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestIPMIReprovision.py:115:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestIPMIReprovision.py:31:5: W1401: Anomalous backslash in string: '\R'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMIReprovision.py:33:57: W1401: Anomalous backslash in string: '\R'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMIReprovision.py:1:0: C0103: Module name "OpTestIPMIReprovision" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:51:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestIPMIReprovision.py:54:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:55:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:56:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestIPMIReprovision.py:76:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:79:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMIReprovision.py:114:11: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestIPMIReprovision.py:116:18: E0602: Undefined variable 'OpTestError' (undefined-variable)
testcases/OpTestIPMIReprovision.py:76:4: R1711: Useless return at end of function or method (useless-return)
testcases/OpTestIPMIReprovision.py:139:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestIPMIReprovision.py:139:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMIReprovision.py:142:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMIReprovision.py:148:8: E1101: Instance of 'GARD' has no 'opTestHMIHandling' member (no-member)
testcases/OpTestIPMIReprovision.py:166:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMIReprovision.py:170:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestIPMIReprovision.py:176:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestIPMIReprovision.py:45:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestIPMIReprovision.py:48:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestIPMIReprovision.py:40:0: W0611: Unused import time (unused-import)
testcases/OpTestIPMIReprovision.py:41:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestIPMIReprovision.py:42:0: W0611: Unused import re (unused-import)
************* Module testcases.InstallUpstreamKernel
testcases/InstallUpstreamKernel.py:59:0: C0301: Line too long (102/100) (line-too-long)
testcases/InstallUpstreamKernel.py:130:17: W0511: FIXME: Handle distributions which do not support grub (fixme)
testcases/InstallUpstreamKernel.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/InstallUpstreamKernel.py:1:0: C0103: Module name "InstallUpstreamKernel" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUpstreamKernel.py:40:0: C0115: Missing class docstring (missing-class-docstring)
testcases/InstallUpstreamKernel.py:43:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUpstreamKernel.py:44:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUpstreamKernel.py:40:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
testcases/InstallUpstreamKernel.py:63:12: C0103: Variable name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUpstreamKernel.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallUpstreamKernel.py:69:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUpstreamKernel.py:87:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/InstallUpstreamKernel.py:92:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:94:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:96:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:98:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:102:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:107:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:112:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:116:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:126:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:142:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:144:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:148:23: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/InstallUpstreamKernel.py:147:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:150:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:151:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUpstreamKernel.py:183:15: E1101: Instance of 'OpSOLMonitorThread' has no 'isAlive' member (no-member)
testcases/InstallUpstreamKernel.py:69:4: R0912: Too many branches (18/12) (too-many-branches)
testcases/InstallUpstreamKernel.py:69:4: R0915: Too many statements (85/50) (too-many-statements)
************* Module testcases.IMC_bug
testcases/IMC_bug.py:27:69: C0303: Trailing whitespace (trailing-whitespace)
testcases/IMC_bug.py:39:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:40:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:41:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:42:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:43:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:44:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:45:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:46:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:47:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:48:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:51:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:52:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:54:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:55:0: W0311: Bad indentation. Found 7 spaces, expected 8 (bad-indentation)
testcases/IMC_bug.py:58:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:59:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:60:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/IMC_bug.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/IMC_bug.py:1:0: C0103: Module name "IMC_bug" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:30:0: E0401: Unable to import 'pexpect' (import-error)
testcases/IMC_bug.py:38:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IMC_bug.py:41:7: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:42:7: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:43:7: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:44:7: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:38:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/IMC_bug.py:50:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IMC_bug.py:51:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IMC_bug.py:54:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IMC_bug.py:54:3: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/IMC_bug.py:57:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IMC_bug.py:31:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/IMC_bug.py:29:0: W0611: Unused import os (unused-import)
testcases/IMC_bug.py:30:0: W0611: Unused import pexpect (unused-import)
testcases/IMC_bug.py:33:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
testcases/IMC_bug.py:34:0: W0611: Unused KernelOOPS imported from common.Exceptions (unused-import)
testcases/IMC_bug.py:35:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/IMC_bug.py:36:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.fspTODCorruption
testcases/fspTODCorruption.py:1:0: C0103: Module name "fspTODCorruption" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:35:0: W0404: Reimport 'subprocess' (imported line 33) (reimported)
testcases/fspTODCorruption.py:51:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspTODCorruption.py:51:0: C0103: Class name "fspTODCorruption" doesn't conform to PascalCase naming style (invalid-name)
testcases/fspTODCorruption.py:54:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:55:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:56:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:57:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:52:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:61:4: C0103: Method name "tearDown" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:71:8: W0621: Redefining name 'time' from outer scope (line 32) (redefined-outer-name)
testcases/fspTODCorruption.py:73:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspTODCorruption.py:74:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/fspTODCorruption.py:74:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspTODCorruption.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:83:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/fspTODCorruption.py:93:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/fspTODCorruption.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:104:0: C0103: Class name "TOD_CORRUPTION" doesn't conform to PascalCase naming style (invalid-name)
testcases/fspTODCorruption.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:109:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/fspTODCorruption.py:131:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspTODCorruption.py:41:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/fspTODCorruption.py:46:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestSSH.ConsoleState"  (wrong-import-order)
testcases/fspTODCorruption.py:35:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/fspTODCorruption.py:43:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/fspTODCorruption.py:32:0: W0611: Unused import time (unused-import)
testcases/fspTODCorruption.py:34:0: W0611: Unused import re (unused-import)
testcases/fspTODCorruption.py:37:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/fspTODCorruption.py:38:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/fspTODCorruption.py:44:0: W0611: Unused ConsoleState imported from common.OpTestSSH as SSHConnectionState (unused-import)
testcases/fspTODCorruption.py:46:0: W0611: Unused import logging (unused-import)
************* Module testcases.Console
testcases/Console.py:151:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/Console.py:203:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
testcases/Console.py:264:9: W0511: TODO: It seems busybox jobs does not properly clear the killed job (fixme)
testcases/Console.py:1:0: C0103: Module name "Console" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:32:0: E0401: Unable to import 'pexpect' (import-error)
testcases/Console.py:38:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/Console.py:39:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/Console.py:57:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:58:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Console.py:55:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Console.py:61:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:67:8: E1101: Instance of 'Console' has no 'assertTrue' member (no-member)
testcases/Console.py:68:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:74:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:84:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:84:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:85:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:85:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:86:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/Console.py:87:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:87:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:88:8: E1101: Instance of 'Console' has no 'assertTrue' member (no-member)
testcases/Console.py:89:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:140:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:141:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:145:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Console.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Console.py:148:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/Console.py:159:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:159:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:173:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:173:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:178:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:178:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:181:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:181:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:182:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:182:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:183:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:183:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:185:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:185:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:196:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:196:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:199:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:199:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:207:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:252:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/Console.py:254:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:254:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:260:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/Console.py:260:12: W0621: Redefining name 'e' from outer scope (line 252) (redefined-outer-name)
testcases/Console.py:261:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:261:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:268:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:268:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:270:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/Console.py:271:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:273:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/Console.py:273:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Console.py:275:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Console.py:33:0: C0411: standard import "time" should be placed before third party import "pexpect" (wrong-import-order)
testcases/Console.py:41:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestMambo", "common.OpTestQemu"  (wrong-import-order)
testcases/Console.py:41:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpalErrorLog
testcases/OpalErrorLog.py:118:70: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpalErrorLog.py:1:0: C0103: Module name "OpalErrorLog" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalErrorLog.py:54:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalErrorLog.py:57:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalErrorLog.py:58:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalErrorLog.py:59:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalErrorLog.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalErrorLog.py:89:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalErrorLog.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalErrorLog.py:91:4: E0202: An attribute defined in testcases.OpalErrorLog line 92 hides this method (method-hidden)
testcases/OpalErrorLog.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalErrorLog.py:95:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalErrorLog.py:100:16: E1102: self.count is not callable (not-callable)
testcases/OpalErrorLog.py:104:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpalErrorLog.py:104:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalErrorLog.py:118:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpalErrorLog.py:118:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalErrorLog.py:128:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalErrorLog.py:135:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalErrorLog.py:44:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/OpalErrorLog.py:49:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpalErrorLog.py:46:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpalErrorLog.py:37:0: W0611: Unused import subprocess (unused-import)
testcases/OpalErrorLog.py:38:0: W0611: Unused import re (unused-import)
testcases/OpalErrorLog.py:40:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/OpalErrorLog.py:41:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpalErrorLog.py:49:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestMtdPnorDriver
testcases/OpTestMtdPnorDriver.py:108:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestMtdPnorDriver.py:118:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestMtdPnorDriver.py:1:0: C0103: Module name "OpTestMtdPnorDriver" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:43:0: W0404: Reimport 'subprocess' (imported line 41) (reimported)
testcases/OpTestMtdPnorDriver.py:75:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:76:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:78:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:82:8: C0103: Attribute name "host_Passwd" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:57:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/OpTestMtdPnorDriver.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestMtdPnorDriver.py:89:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMtdPnorDriver.py:106:15: E0602: Undefined variable 'CommandFailed' (undefined-variable)
testcases/OpTestMtdPnorDriver.py:108:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:113:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:116:15: E0602: Undefined variable 'CommandFailed' (undefined-variable)
testcases/OpTestMtdPnorDriver.py:118:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:124:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:129:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:132:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:138:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:143:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:148:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMtdPnorDriver.py:91:8: W0612: Unused variable 'l_oslevel' (unused-variable)
testcases/OpTestMtdPnorDriver.py:46:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestMtdPnorDriver.py:52:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/OpTestMtdPnorDriver.py:43:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/OpTestMtdPnorDriver.py:49:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestMtdPnorDriver.py:40:0: W0611: Unused import time (unused-import)
testcases/OpTestMtdPnorDriver.py:42:0: W0611: Unused import re (unused-import)
testcases/OpTestMtdPnorDriver.py:45:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpTestMtdPnorDriver.py:49:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestMtdPnorDriver.py:52:0: W0611: Unused import logging (unused-import)
************* Module testcases.BMCResetTorture
testcases/BMCResetTorture.py:88:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/BMCResetTorture.py:142:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/BMCResetTorture.py:1:0: C0103: Module name "BMCResetTorture" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:36:0: W0404: Reimport 'subprocess' (imported line 35) (reimported)
testcases/BMCResetTorture.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BMCResetTorture.py:68:4: C0103: Method name "RunBMCReset" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:72:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BMCResetTorture.py:72:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BMCResetTorture.py:82:28: E1135: Value 'self.test' doesn't support membership test (unsupported-membership-test)
testcases/BMCResetTorture.py:84:27: E1135: Value 'self.test' doesn't support membership test (unsupported-membership-test)
testcases/BMCResetTorture.py:91:0: C0115: Missing class docstring (missing-class-docstring)
testcases/BMCResetTorture.py:94:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/BMCResetTorture.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BMCResetTorture.py:96:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:100:0: C0115: Missing class docstring (missing-class-docstring)
testcases/BMCResetTorture.py:103:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/BMCResetTorture.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BMCResetTorture.py:105:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:117:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BMCResetTorture.py:117:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:120:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BMCResetTorture.py:120:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BMCResetTorture.py:132:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BMCResetTorture.py:132:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BMCResetTorture.py:135:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BMCResetTorture.py:135:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BMCResetTorture.py:138:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BMCResetTorture.py:138:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BMCResetTorture.py:137:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/BMCResetTorture.py:43:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/BMCResetTorture.py:47:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/BMCResetTorture.py:45:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/BMCResetTorture.py:34:0: W0611: Unused import time (unused-import)
testcases/BMCResetTorture.py:35:0: W0611: Unused import subprocess (unused-import)
testcases/BMCResetTorture.py:37:0: W0611: Unused import re (unused-import)
testcases/BMCResetTorture.py:38:0: W0611: Unused import sys (unused-import)
testcases/BMCResetTorture.py:40:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/BMCResetTorture.py:41:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/BMCResetTorture.py:47:0: W0611: Unused import logging (unused-import)
************* Module testcases.EMStress
testcases/EMStress.py:90:0: C0301: Line too long (111/100) (line-too-long)
testcases/EMStress.py:107:0: C0301: Line too long (107/100) (line-too-long)
testcases/EMStress.py:109:0: C0301: Line too long (107/100) (line-too-long)
testcases/EMStress.py:1:0: C0103: Module name "EMStress" doesn't conform to snake_case naming style (invalid-name)
testcases/EMStress.py:42:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
testcases/EMStress.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EMStress.py:64:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/EMStress.py:90:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:94:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:107:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:109:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:115:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:125:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:133:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EMStress.py:133:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:136:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:138:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:141:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:150:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:157:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EMStress.py:64:4: R0915: Too many statements (65/50) (too-many-statements)
testcases/EMStress.py:37:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.OpTestThread.OpSSHThreadLinearVar1", "common.OpTestSOL.OpSOLMonitorThread", "testcases.OpTestEM.OpTestEM"  (wrong-import-order)
testcases/EMStress.py:28:0: W0611: Unused import threading (unused-import)
testcases/EMStress.py:32:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/EMStress.py:37:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestFastReboot
testcases/OpTestFastReboot.py:90:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestFastReboot.py:1:0: C0103: Module name "OpTestFastReboot" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:38:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestFastReboot.py:40:0: W0404: Reimport 'subprocess' (imported line 39) (reimported)
testcases/OpTestFastReboot.py:56:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:59:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:60:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:61:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFastReboot.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFastReboot.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFastReboot.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFastReboot.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFastReboot.py:90:16: R1731: Consider using 'count = max(count, int(m.group(1)))' instead of unnecessary if block (consider-using-max-builtin)
testcases/OpTestFastReboot.py:94:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:117:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFastReboot.py:121:15: R0123: In 'cf.exitcode is not 1', use '!=' when comparing constant literals not 'is not' ('cf.exitcode != 1') (literal-comparison)
testcases/OpTestFastReboot.py:128:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFastReboot.py:147:8: C0103: Variable name "initialResetCount" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:148:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFastReboot.py:148:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFastReboot.py:150:12: C0103: Variable name "loopResetCount" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:172:12: C0103: Variable name "newResetCount" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFastReboot.py:177:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFastReboot.py:177:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFastReboot.py:187:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestFastReboot.py:94:4: R0912: Too many branches (15/12) (too-many-branches)
testcases/OpTestFastReboot.py:94:4: R0915: Too many statements (57/50) (too-many-statements)
testcases/OpTestFastReboot.py:153:12: W0201: Attribute 'pty' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestFastReboot.py:191:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:196:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:204:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:219:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:224:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFastReboot.py:39:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestFastReboot.py:40:0: C0411: standard import "subprocess" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestFastReboot.py:41:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestFastReboot.py:42:0: C0411: standard import "sys" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestFastReboot.py:44:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestFastReboot.py:51:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestFastReboot.py:39:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestFastReboot.py:42:0: W0611: Unused import sys (unused-import)
testcases/OpTestFastReboot.py:51:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestLPM
testcases/OpTestLPM.py:79:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestLPM.py:81:0: C0301: Line too long (113/100) (line-too-long)
testcases/OpTestLPM.py:82:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestLPM.py:88:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestLPM.py:89:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestLPM.py:129:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestLPM.py:135:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestLPM.py:141:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestLPM.py:227:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestLPM.py:228:0: C0301: Line too long (115/100) (line-too-long)
testcases/OpTestLPM.py:233:0: C0301: Line too long (135/100) (line-too-long)
testcases/OpTestLPM.py:282:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestLPM.py:290:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestLPM.py:291:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestLPM.py:292:0: C0301: Line too long (119/100) (line-too-long)
testcases/OpTestLPM.py:294:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestLPM.py:296:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:317:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestLPM.py:320:0: C0301: Line too long (127/100) (line-too-long)
testcases/OpTestLPM.py:322:0: C0301: Line too long (109/100) (line-too-long)
testcases/OpTestLPM.py:330:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:331:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestLPM.py:338:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestLPM.py:347:0: C0301: Line too long (128/100) (line-too-long)
testcases/OpTestLPM.py:349:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestLPM.py:353:0: C0301: Line too long (126/100) (line-too-long)
testcases/OpTestLPM.py:357:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestLPM.py:365:0: C0301: Line too long (126/100) (line-too-long)
testcases/OpTestLPM.py:371:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:374:0: C0301: Line too long (129/100) (line-too-long)
testcases/OpTestLPM.py:376:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestLPM.py:378:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:426:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestLPM.py:429:0: C0301: Line too long (126/100) (line-too-long)
testcases/OpTestLPM.py:432:0: C0301: Line too long (109/100) (line-too-long)
testcases/OpTestLPM.py:440:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:441:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestLPM.py:462:0: C0301: Line too long (127/100) (line-too-long)
testcases/OpTestLPM.py:465:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestLPM.py:470:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestLPM.py:474:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestLPM.py:492:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLPM.py:495:0: C0301: Line too long (128/100) (line-too-long)
testcases/OpTestLPM.py:498:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestLPM.py:500:0: C0301: Line too long (117/100) (line-too-long)
testcases/OpTestLPM.py:164:66: W1401: Anomalous backslash in string: '\|'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestLPM.py:263:57: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestLPM.py:1:0: C0103: Module name "OpTestLPM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:60:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestLPM.py:70:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:72:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:73:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:60:0: R0902: Too many instance attributes (42/7) (too-many-instance-attributes)
testcases/OpTestLPM.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:64:4: C0103: Method name "errMsg" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:65:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:68:4: R0912: Too many branches (15/12) (too-many-branches)
testcases/OpTestLPM.py:68:4: R0915: Too many statements (58/50) (too-many-statements)
testcases/OpTestLPM.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:149:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:155:12: W0105: String statement has no effect (pointless-string-statement)
testcases/OpTestLPM.py:202:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:204:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:209:33: W0613: Unused argument 'remote_hmc' (unused-argument)
testcases/OpTestLPM.py:236:4: C0103: Method name "is_RMCActive" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:241:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:245:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:254:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:262:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:272:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:274:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:278:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:282:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:282:4: R0913: Too many arguments (6/5) (too-many-arguments)
testcases/OpTestLPM.py:154:12: W0201: Attribute 'firewall_status' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestLPM.py:161:16: W0201: Attribute 'firewall_status' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestLPM.py:268:8: W0201: Attribute 'thread_stressng' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestLPM.py:299:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestLPM.py:299:0: C0103: Class name "OpTestLPM_LocalHMC" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestLPM.py:302:4: W0221: Number of parameters was 2 in 'OpTestLPM.setUp' and is now 1 in overriding 'OpTestLPM_LocalHMC.setUp' method (arguments-differ)
testcases/OpTestLPM.py:303:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestLPM.py:305:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:379:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:379:55: E0602: Undefined variable 'err' (undefined-variable)
testcases/OpTestLPM.py:305:4: R0912: Too many branches (17/12) (too-many-branches)
testcases/OpTestLPM.py:305:4: R0915: Too many statements (52/50) (too-many-statements)
testcases/OpTestLPM.py:381:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:381:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:385:37: E1101: Instance of 'OpSSHThreadLinearVar1' has no 'isAlive' member (no-member)
testcases/OpTestLPM.py:390:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestLPM.py:390:0: C0103: Class name "OpTestLPM_CrossHMC" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestLPM.py:393:4: W0221: Number of parameters was 2 in 'OpTestLPM.setUp' and is now 1 in overriding 'OpTestLPM_CrossHMC.setUp' method (arguments-differ)
testcases/OpTestLPM.py:412:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestLPM.py:414:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:452:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLPM.py:452:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:485:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLPM.py:485:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:501:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLPM.py:501:55: E0602: Undefined variable 'err' (undefined-variable)
testcases/OpTestLPM.py:414:4: R0912: Too many branches (15/12) (too-many-branches)
testcases/OpTestLPM.py:414:4: R0915: Too many statements (53/50) (too-many-statements)
testcases/OpTestLPM.py:503:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLPM.py:503:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLPM.py:507:37: E1101: Instance of 'OpSSHThreadLinearVar1' has no 'isAlive' member (no-member)
testcases/OpTestLPM.py:50:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
************* Module testcases.OpTestPNOR
testcases/OpTestPNOR.py:87:0: C0301: Line too long (152/100) (line-too-long)
testcases/OpTestPNOR.py:1:0: C0103: Module name "OpTestPNOR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:37:0: W0404: Reimport 'subprocess' (imported line 36) (reimported)
testcases/OpTestPNOR.py:54:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPNOR.py:57:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:58:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:59:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:55:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:61:4: C0103: Method name "pflashErase" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:62:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:62:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:64:4: C0103: Method name "pflashErasePartition" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:65:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:65:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:67:4: C0103: Method name "pflashRead" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:68:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:68:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:71:4: C0103: Method name "pflashReadPartition" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:72:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:72:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:74:4: C0103: Method name "pflashWrite" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:75:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:75:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:78:4: C0103: Method name "pflashWritePartition" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:79:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:79:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:81:4: C0103: Method name "pflashGetPartition" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:82:12: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:81:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestPNOR.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:100:4: C0103: Method name "comparePartitionFile" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:101:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:101:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:103:12: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:103:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:105:12: E1101: Instance of 'OpTestPNOR' has no 'assertEqual' member (no-member)
testcases/OpTestPNOR.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:107:4: C0103: Method name "runTestReadEraseWriteNVRAM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:110:8: C0103: Variable name "nvramInfo" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:121:12: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:122:8: E1101: Instance of 'OpTestPNOR' has no 'assertEqual' member (no-member)
testcases/OpTestPNOR.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:124:4: C0103: Method name "runTestReadWritePAYLOAD" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:125:8: C0103: Variable name "payloadInfo" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:134:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPNOR.py:134:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:150:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPNOR.py:150:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:163:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:163:4: C0103: Method name "runTestWriteTOC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:164:8: C0103: Variable name "tocInfo" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:168:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:169:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:174:12: E1101: Instance of 'OpTestPNOR' has no 'assertEqual' member (no-member)
testcases/OpTestPNOR.py:175:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:181:12: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:189:12: E1101: Instance of 'OpTestPNOR' has no 'assertEqual' member (no-member)
testcases/OpTestPNOR.py:190:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPNOR.py:182:8: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestPNOR.py:194:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:194:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPNOR.py:195:8: E1101: Instance of 'OpTestPNOR' has no 'setup_test' member (no-member)
testcases/OpTestPNOR.py:197:12: E1101: Instance of 'OpTestPNOR' has no 'skipTest' member (no-member)
testcases/OpTestPNOR.py:200:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:201:8: E1101: Instance of 'OpTestPNOR' has no 'c' member (no-member)
testcases/OpTestPNOR.py:211:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPNOR.py:212:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:214:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPNOR.py:217:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPNOR.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPNOR.py:220:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPNOR.py:49:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestPNOR.py:35:0: W0611: Unused import time (unused-import)
testcases/OpTestPNOR.py:36:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestPNOR.py:39:0: W0611: Unused import sys (unused-import)
testcases/OpTestPNOR.py:40:0: W0611: Unused import os (unused-import)
testcases/OpTestPNOR.py:41:0: W0611: Unused import os.path (unused-import)
testcases/OpTestPNOR.py:47:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpTestPNOR.py:49:0: W0611: Unused import logging (unused-import)
************* Module testcases.NX842
testcases/NX842.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/NX842.py:1:0: C0103: Module name "NX842" doesn't conform to snake_case naming style (invalid-name)
testcases/NX842.py:30:0: W0404: Reimport 'subprocess' (imported line 28) (reimported)
testcases/NX842.py:43:0: C0115: Missing class docstring (missing-class-docstring)
testcases/NX842.py:51:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/NX842.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/NX842.py:65:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/NX842.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/NX842.py:68:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/NX842.py:87:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/NX842.py:88:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/NX842.py:90:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/NX842.py:100:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/NX842.py:56:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/NX842.py:63:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/NX842.py:34:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/NX842.py:30:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/NX842.py:37:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/NX842.py:27:0: W0611: Unused import time (unused-import)
testcases/NX842.py:28:0: W0611: Unused import subprocess (unused-import)
testcases/NX842.py:29:0: W0611: Unused import re (unused-import)
testcases/NX842.py:31:0: W0611: Unused import sys (unused-import)
testcases/NX842.py:33:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/NX842.py:39:0: W0611: Unused IPMIConsoleState imported from common.OpTestIPMI (unused-import)
testcases/NX842.py:40:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
************* Module testcases.DeviceTreeWarnings
testcases/DeviceTreeWarnings.py:56:26: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:56:38: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:59:26: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:59:47: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:62:26: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:63:28: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeWarnings.py:1:0: C0103: Module name "DeviceTreeWarnings" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:48:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:49:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:50:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeWarnings.py:46:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeWarnings.py:52:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeWarnings.py:53:8: E1101: Instance of 'DeviceTreeWarnings' has no 'setup_test' member (no-member)
testcases/DeviceTreeWarnings.py:65:22: E1101: Instance of 'DeviceTreeWarnings' has no 'c' member (no-member)
testcases/DeviceTreeWarnings.py:72:8: E1101: Instance of 'DeviceTreeWarnings' has no 'assertTrue' member (no-member)
testcases/DeviceTreeWarnings.py:73:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeWarnings.py:76:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DeviceTreeWarnings.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeWarnings.py:79:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/DeviceTreeWarnings.py:82:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DeviceTreeWarnings.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeWarnings.py:85:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/DeviceTreeWarnings.py:37:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/DeviceTreeWarnings.py:38:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
************* Module testcases.OpTestCAPI
testcases/OpTestCAPI.py:71:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestCAPI.py:300:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestCAPI.py:1:0: C0103: Module name "OpTestCAPI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:61:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestCAPI.py:64:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:65:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:66:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:71:12: C0121: Comparison 'self.cv_HOST.host_has_capi_fpga_card() != True' should be 'self.cv_HOST.host_has_capi_fpga_card() is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_has_capi_fpga_card()' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:78:8: W0612: Unused variable 'l_oslevel' (unused-variable)
testcases/OpTestCAPI.py:96:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:97:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:99:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:106:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:115:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:116:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:118:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:118:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:124:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl_tests') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl_tests') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl_tests')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:125:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:132:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:139:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:148:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:149:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:151:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:157:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:158:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:164:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:171:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:180:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:181:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:183:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:189:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:190:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:196:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:203:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:212:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:213:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:215:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:215:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:221:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:222:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:228:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:235:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:245:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:246:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:248:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:248:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:257:12: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise unittest.SkipTest(l_msg) from exc' (raise-missing-from)
testcases/OpTestCAPI.py:262:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:263:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:269:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:275:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:285:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:286:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:288:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:288:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:294:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:295:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:300:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:305:12: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise unittest.SkipTest(l_msg) from exc' (raise-missing-from)
testcases/OpTestCAPI.py:309:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:315:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:324:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestCAPI.py:325:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestCAPI.py:327:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:327:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestCAPI.py:333:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'memcpy_afu_ctx')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:334:16: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'libcxl/libcxl.so')' if testing for falsiness (singleton-comparison)
testcases/OpTestCAPI.py:340:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestCAPI.py:347:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestCAPI.py:350:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestCAPI.py:56:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestError.OpTestError", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestCAPI.py:45:0: W0611: Unused import time (unused-import)
testcases/OpTestCAPI.py:46:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestCAPI.py:47:0: W0611: Unused import re (unused-import)
testcases/OpTestCAPI.py:53:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestCAPI.py:56:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestEnergyd
testcases/OpTestEnergyd.py:48:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestEnergyd.py:74:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestEnergyd.py:77:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestEnergyd.py:100:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestEnergyd.py:103:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestEnergyd.py:110:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestEnergyd.py:133:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEnergyd.py:146:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEnergyd.py:150:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestEnergyd.py:1:0: C0103: Module name "OpTestEnergyd" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyd.py:43:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEnergyd.py:64:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyd.py:71:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyd.py:43:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
testcases/OpTestEnergyd.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:52:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEnergyd.py:52:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEnergyd.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:56:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEnergyd.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:72:13: C0321: More than one statement on a single line (multiple-statements)
testcases/OpTestEnergyd.py:75:13: C0321: More than one statement on a single line (multiple-statements)
testcases/OpTestEnergyd.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:97:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEnergyd.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:148:4: C0103: Method name "energyd_workLoad" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyd.py:161:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEnergyd.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyd.py:181:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyd.py:188:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEnergyd.py:94:8: W0201: Attribute 'total_cores' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestEnergyd.py:37:0: W0611: Unused OpTestHMC imported from common (unused-import)
************* Module testcases.MachineConfig
testcases/MachineConfig.py:71:0: C0301: Line too long (111/100) (line-too-long)
testcases/MachineConfig.py:74:0: C0301: Line too long (121/100) (line-too-long)
testcases/MachineConfig.py:82:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/MachineConfig.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/MachineConfig.py:94:0: C0301: Line too long (154/100) (line-too-long)
testcases/MachineConfig.py:117:0: C0301: Line too long (138/100) (line-too-long)
testcases/MachineConfig.py:139:0: C0301: Line too long (170/100) (line-too-long)
testcases/MachineConfig.py:201:0: C0301: Line too long (109/100) (line-too-long)
testcases/MachineConfig.py:314:0: C0301: Line too long (111/100) (line-too-long)
testcases/MachineConfig.py:315:0: C0301: Line too long (105/100) (line-too-long)
testcases/MachineConfig.py:321:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/MachineConfig.py:334:0: C0301: Line too long (122/100) (line-too-long)
testcases/MachineConfig.py:513:0: C0301: Line too long (118/100) (line-too-long)
testcases/MachineConfig.py:521:0: C0301: Line too long (102/100) (line-too-long)
testcases/MachineConfig.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/MachineConfig.py:1:0: C0103: Module name "MachineConfig" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:42:0: C0115: Missing class docstring (missing-class-docstring)
testcases/MachineConfig.py:47:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:56:12: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:42:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
testcases/MachineConfig.py:50:11: R1714: Consider merging these comparisons with 'in' by using 'self.bmc_type in ('FSP_PHYP', 'EBMC_PHYP')'. Use a set instead if elements are hashable. (consider-using-in)
testcases/MachineConfig.py:73:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:75:8: R1703: The if statement can be replaced with 'return bool(test)' (simplifiable-if-statement)
testcases/MachineConfig.py:75:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/MachineConfig.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:81:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:86:4: C0103: Method name "callConfig" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:110:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:117:12: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
testcases/MachineConfig.py:134:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:86:4: R0912: Too many branches (16/12) (too-many-branches)
testcases/MachineConfig.py:90:12: W0201: Attribute 'sb_enable' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:93:16: W0201: Attribute 'sb_enable' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:157:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:164:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:146:0: R0902: Too many instance attributes (23/7) (too-many-instance-attributes)
testcases/MachineConfig.py:155:23: C0103: Argument name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:155:4: R0913: Too many arguments (7/5) (too-many-arguments)
testcases/MachineConfig.py:169:4: C0103: Method name "LparSetup" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:183:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:186:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:189:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:192:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:195:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:202:8: W0105: String statement has no effect (pointless-string-statement)
testcases/MachineConfig.py:214:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:217:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:220:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:223:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:226:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:229:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:232:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:250:25: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:280:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:283:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:290:16: E1101: Instance of 'LparConfig' has no 'fail' member (no-member)
testcases/MachineConfig.py:290:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:294:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/MachineConfig.py:294:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:300:17: C0321: More than one statement on a single line (multiple-statements)
testcases/MachineConfig.py:309:8: W0105: String statement has no effect (pointless-string-statement)
testcases/MachineConfig.py:326:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/MachineConfig.py:326:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:328:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:169:4: R0912: Too many branches (44/12) (too-many-branches)
testcases/MachineConfig.py:169:4: R0915: Too many statements (139/50) (too-many-statements)
testcases/MachineConfig.py:169:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/MachineConfig.py:183:17: W0201: Attribute 'sharing_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:185:16: W0201: Attribute 'sharing_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:214:17: W0201: Attribute 'sharing_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:216:16: W0201: Attribute 'sharing_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:186:17: W0201: Attribute 'min_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:188:16: W0201: Attribute 'min_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:217:17: W0201: Attribute 'min_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:219:16: W0201: Attribute 'min_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:189:17: W0201: Attribute 'desired_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:191:16: W0201: Attribute 'desired_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:220:17: W0201: Attribute 'desired_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:222:16: W0201: Attribute 'desired_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:192:17: W0201: Attribute 'max_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:194:16: W0201: Attribute 'max_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:223:17: W0201: Attribute 'max_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:225:16: W0201: Attribute 'max_proc_units' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:195:17: W0201: Attribute 'overcommit_ratio' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:197:16: W0201: Attribute 'overcommit_ratio' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:226:17: W0201: Attribute 'min_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:228:16: W0201: Attribute 'min_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:229:17: W0201: Attribute 'desired_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:231:16: W0201: Attribute 'desired_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:232:17: W0201: Attribute 'max_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:234:16: W0201: Attribute 'max_memory' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:249:20: W0201: Attribute 'vtpm_version' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:254:20: W0201: Attribute 'vtpm_version' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:250:25: W0201: Attribute 'vtpm_encryption' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:252:24: W0201: Attribute 'vtpm_encryption' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:255:20: W0201: Attribute 'vtpm_encryption' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:270:16: W0201: Attribute 'vtpm_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:280:17: W0201: Attribute 'pmem_name' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:282:16: W0201: Attribute 'pmem_name' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:283:17: W0201: Attribute 'pmem_size' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:285:16: W0201: Attribute 'pmem_size' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:300:17: W0201: Attribute 'qos_credits' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:302:16: W0201: Attribute 'qos_credits' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:146:0: R0903: Too few public methods (1/2) (too-few-public-methods)
testcases/MachineConfig.py:338:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/MachineConfig.py:339:8: W0612: Unused variable 'conf' (unused-variable)
testcases/MachineConfig.py:360:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:346:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
testcases/MachineConfig.py:357:23: C0103: Argument name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:357:4: R0913: Too many arguments (7/5) (too-many-arguments)
testcases/MachineConfig.py:369:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:369:4: C0103: Method name "CecSetup" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:382:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:386:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:386:4: C0103: Method name "ValidateCEC_Setup" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:391:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/MachineConfig.py:391:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:397:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/MachineConfig.py:397:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:403:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:408:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:413:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:415:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:395:12: W0201: Attribute 'current_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:414:8: W0201: Attribute 'current_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:429:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:435:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:436:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:419:0: R0902: Too many instance attributes (21/7) (too-many-instance-attributes)
testcases/MachineConfig.py:427:23: C0103: Argument name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:427:4: R0913: Too many arguments (8/5) (too-many-arguments)
testcases/MachineConfig.py:448:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:448:4: C0103: Method name "Ossetup" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:448:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/MachineConfig.py:455:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:455:4: C0103: Method name "OsHugepageSetup" doesn't conform to snake_case naming style (invalid-name)
testcases/MachineConfig.py:465:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:479:20: E1101: Instance of 'OsConfig' has no 'fail' member (no-member)
testcases/MachineConfig.py:488:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:495:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:498:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:501:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:503:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/MachineConfig.py:504:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:507:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/MachineConfig.py:507:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:455:4: R0912: Too many branches (15/12) (too-many-branches)
testcases/MachineConfig.py:455:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/MachineConfig.py:510:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/MachineConfig.py:513:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:521:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/MachineConfig.py:460:12: W0201: Attribute 'num_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:461:12: W0201: Attribute 'no_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:481:20: W0201: Attribute 'no_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:483:20: W0201: Attribute 'no_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:486:16: W0201: Attribute 'no_hgpg' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:471:12: W0201: Attribute 'des_mem' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:472:12: W0201: Attribute 'percentile' defined outside __init__ (attribute-defined-outside-init)
testcases/MachineConfig.py:28:0: W0611: Unused import os (unused-import)
testcases/MachineConfig.py:38:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
************* Module testcases.OpTestDumps
testcases/OpTestDumps.py:236:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
testcases/OpTestDumps.py:84:69: W1401: Anomalous backslash in string: '\ '. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestDumps.py:110:34: W1401: Anomalous backslash in string: '\ '. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestDumps.py:1:0: C0103: Module name "OpTestDumps" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:59:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDumps.py:62:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:63:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:64:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:65:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:60:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:71:4: C0103: Method name "tearDown" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:76:11: E1101: Instance of 'OpTestDumps' has no 'test' member (no-member)
testcases/OpTestDumps.py:78:28: E1101: Instance of 'OpTestDumps' has no 'test' member (no-member)
testcases/OpTestDumps.py:81:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestDumps.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:104:8: E1101: Instance of 'OpTestDumps' has no 'assertTrue' member (no-member)
testcases/OpTestDumps.py:108:8: E1101: Instance of 'OpTestDumps' has no 'assertNotEqual' member (no-member)
testcases/OpTestDumps.py:111:8: E1101: Instance of 'OpTestDumps' has no 'assertNotEqual' member (no-member)
testcases/OpTestDumps.py:119:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestDumps.py:122:8: E1101: Instance of 'OpTestDumps' has no 'assertIn' member (no-member)
testcases/OpTestDumps.py:116:12: W0612: Unused variable 'j' (unused-variable)
testcases/OpTestDumps.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:133:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestDumps.py:136:8: E1101: Instance of 'OpTestDumps' has no 'assertIn' member (no-member)
testcases/OpTestDumps.py:140:11: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestDumps.py:130:12: W0612: Unused variable 'j' (unused-variable)
testcases/OpTestDumps.py:147:0: C0103: Class name "SYSTEM_DUMP" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDumps.py:157:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:157:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:170:8: E1101: Instance of 'SYSTEM_DUMP' has no 'set_up' member (no-member)
testcases/OpTestDumps.py:175:35: E1101: Instance of 'SYSTEM_DUMP' has no 'test' member (no-member)
testcases/OpTestDumps.py:211:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDumps.py:211:0: C0103: Class name "FIPS_DUMP" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDumps.py:220:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:220:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDumps.py:237:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDumps.py:238:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDumps.py:251:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDumps.py:251:0: C0103: Class name "HOST_DUMP_BOOTTIME" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDumps.py:253:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:254:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestDumps.py:257:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDumps.py:257:0: C0103: Class name "HOST_DUMP_RUNTIME" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDumps.py:259:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:260:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestDumps.py:263:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDumps.py:263:0: C0103: Class name "NMI_DIAG_DUMP" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDumps.py:265:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:266:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestDumps.py:269:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDumps.py:50:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/OpTestDumps.py:54:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/OpTestDumps.py:52:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestDumps.py:43:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestDumps.py:44:0: W0611: Unused import re (unused-import)
testcases/OpTestDumps.py:46:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/OpTestDumps.py:54:0: W0611: Unused import logging (unused-import)
************* Module testcases.PetitbootCancelBoot
testcases/PetitbootCancelBoot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/PetitbootCancelBoot.py:1:0: C0103: Module name "PetitbootCancelBoot" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootCancelBoot.py:13:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootCancelBoot.py:25:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootCancelBoot.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootCancelBoot.py:26:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootCancelBoot.py:38:8: W0199: Assert called on a populated tuple. Did you mean 'assert x,y'? (assert-on-tuple)
testcases/PetitbootCancelBoot.py:3:0: W0611: Unused import time (unused-import)
testcases/PetitbootCancelBoot.py:7:0: W0611: Unused OpTestUtil imported from common.OpTestUtil (unused-import)
testcases/PetitbootCancelBoot.py:9:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.BootTorture
testcases/BootTorture.py:115:0: C0301: Line too long (110/100) (line-too-long)
testcases/BootTorture.py:163:0: C0301: Line too long (110/100) (line-too-long)
testcases/BootTorture.py:119:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/BootTorture.py:166:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/BootTorture.py:1:0: C0103: Module name "BootTorture" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:40:0: E0401: Unable to import 'pexpect' (import-error)
testcases/BootTorture.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BootTorture.py:71:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
testcases/BootTorture.py:73:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BootTorture.py:73:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:69:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/BootTorture.py:77:25: C0103: Argument name "listA" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:78:25: C0103: Argument name "listA_name" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:79:25: C0103: Argument name "listB" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:80:25: C0103: Argument name "listB_name" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:91:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BootTorture.py:91:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BootTorture.py:94:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BootTorture.py:97:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BootTorture.py:97:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:111:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BootTorture.py:111:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:112:19: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/BootTorture.py:95:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/BootTorture.py:129:4: W0221: Number of parameters was 2 in 'BootTorture.setUpClass' and is now 1 in overriding 'BootTorture10.setUpClass' method (arguments-differ)
testcases/BootTorture.py:140:4: W0221: Number of parameters was 2 in 'BootTorture.setUpClass' and is now 1 in overriding 'ReBootTorture.setUpClass' method (arguments-differ)
testcases/BootTorture.py:150:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/BootTorture.py:150:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:159:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BootTorture.py:159:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BootTorture.py:160:19: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/BootTorture.py:144:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/BootTorture.py:184:4: W0221: Number of parameters was 2 in 'BootTorture.setUpClass' and is now 1 in overriding 'ReBootTorture10.setUpClass' method (arguments-differ)
testcases/BootTorture.py:41:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/BootTorture.py:42:0: C0411: standard import "difflib" should be placed before third party import "pexpect" (wrong-import-order)
testcases/BootTorture.py:48:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestUtil.OpTestUtil", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/BootTorture.py:45:0: W0611: Unused OpTestUtil imported from common.OpTestUtil (unused-import)
testcases/BootTorture.py:48:0: W0611: Unused import logging (unused-import)
************* Module testcases.RunHostTest
testcases/RunHostTest.py:49:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/RunHostTest.py:1:0: C0103: Module name "RunHostTest" doesn't conform to snake_case naming style (invalid-name)
testcases/RunHostTest.py:38:0: C0115: Missing class docstring (missing-class-docstring)
testcases/RunHostTest.py:41:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/RunHostTest.py:38:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/RunHostTest.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/RunHostTest.py:55:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/RunHostTest.py:63:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
testcases/RunHostTest.py:63:21: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module testcases.OpTestPrdDriver
testcases/OpTestPrdDriver.py:193:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestPrdDriver.py:213:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestPrdDriver.py:239:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestPrdDriver.py:243:0: C0301: Line too long (113/100) (line-too-long)
testcases/OpTestPrdDriver.py:247:0: C0301: Line too long (126/100) (line-too-long)
testcases/OpTestPrdDriver.py:112:35: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPrdDriver.py:1:0: C0103: Module name "OpTestPrdDriver" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:68:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPrdDriver.py:71:8: C0103: Attribute name "FIR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:72:8: C0103: Attribute name "FIMR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:73:8: C0103: Attribute name "ERROR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:69:29: C0103: Argument name "FIR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:69:34: C0103: Argument name "FIMR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:69:40: C0103: Argument name "ERROR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:68:0: R0903: Too few public methods (1/2) (too-few-public-methods)
testcases/OpTestPrdDriver.py:79:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPrdDriver.py:82:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:83:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:84:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:226:12: C0103: Attribute name "IPOLL_MASK_REGISTER" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:227:12: C0103: Attribute name "IPOLL_MASK_REGISTER_CONTENT" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:79:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/OpTestPrdDriver.py:112:12: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:115:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestPrdDriver.py:115:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:122:32: C0103: Argument name "FIR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:122:37: C0103: Argument name "FIMR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:122:43: C0103: Argument name "ERROR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:137:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestPrdDriver.py:137:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:139:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:143:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:148:8: C0103: Variable name "LEN" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:154:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:159:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:168:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:171:12: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
testcases/OpTestPrdDriver.py:175:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDriver.py:175:26: W1310: Using formatting for a string that does not have any interpolated variables (format-string-without-interpolation)
testcases/OpTestPrdDriver.py:175:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:183:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:188:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:201:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:213:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:223:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:228:12: C0103: Variable name "PBA_FAULT_ISOLATION_REGISTER" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:229:12: C0103: Variable name "PBA_FAULT_ISOLATION_MASK_REGISTER" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:230:12: C0103: Variable name "PBAFIR_OCI_APAR_ERR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:231:12: C0103: Variable name "PBAFIR_PB_CE_FW" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:232:12: C0103: Variable name "PBAFIR_PB_RDDATATO_FW" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:233:12: C0103: Variable name "PBAFIR_PB_RDADRERR_FW" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDriver.py:260:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestPrdDriver.py:260:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:263:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:276:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestPrdDriver.py:276:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDriver.py:279:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestPrdDriver.py:120:8: W0201: Attribute 'random_chip' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPrdDriver.py:226:12: W0201: Attribute 'IPOLL_MASK_REGISTER' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPrdDriver.py:254:12: W0201: Attribute 'IPOLL_MASK_REGISTER' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPrdDriver.py:227:12: W0201: Attribute 'IPOLL_MASK_REGISTER_CONTENT' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPrdDriver.py:255:12: W0201: Attribute 'IPOLL_MASK_REGISTER_CONTENT' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestPrdDriver.py:56:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestPrdDriver.py:63:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestPrdDriver.py:59:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestPrdDriver.py:48:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestPrdDriver.py:50:0: W0611: Unused import sys (unused-import)
testcases/OpTestPrdDriver.py:51:0: W0611: Unused import os (unused-import)
testcases/OpTestPrdDriver.py:59:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestPrdDriver.py:63:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestRTCdriver
testcases/OpTestRTCdriver.py:228:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestRTCdriver.py:239:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestRTCdriver.py:1:0: C0103: Module name "OpTestRTCdriver" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRTCdriver.py:53:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRTCdriver.py:67:12: W0612: Unused variable 'l_hwclock' (unused-variable)
testcases/OpTestRTCdriver.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:103:4: C0103: Method name "RunFullRTC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRTCdriver.py:126:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestRTCdriver.py:172:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestRTCdriver.py:172:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:174:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:177:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:186:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestRTCdriver.py:186:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:189:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:192:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:200:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestRTCdriver.py:200:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:203:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:206:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:217:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:228:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:239:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:250:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:261:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:272:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:280:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestRTCdriver.py:280:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:283:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:286:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:300:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:311:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestRTCdriver.py:311:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:314:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:317:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:328:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRTCdriver.py:53:0: R0904: Too many public methods (21/20) (too-many-public-methods)
testcases/OpTestRTCdriver.py:333:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRTCdriver.py:336:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestRTCdriver.py:338:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:338:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRTCdriver.py:343:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRTCdriver.py:346:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestRTCdriver.py:348:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:348:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRTCdriver.py:352:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRTCdriver.py:355:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestRTCdriver.py:357:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRTCdriver.py:357:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRTCdriver.py:48:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestRTCdriver.py:38:0: W0611: Unused import time (unused-import)
testcases/OpTestRTCdriver.py:39:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestRTCdriver.py:40:0: W0611: Unused import re (unused-import)
testcases/OpTestRTCdriver.py:48:0: W0611: Unused import logging (unused-import)
************* Module testcases.KernelLog
testcases/KernelLog.py:98:0: C0301: Line too long (127/100) (line-too-long)
testcases/KernelLog.py:101:0: C0301: Line too long (106/100) (line-too-long)
testcases/KernelLog.py:109:0: C0301: Line too long (103/100) (line-too-long)
testcases/KernelLog.py:110:0: C0301: Line too long (105/100) (line-too-long)
testcases/KernelLog.py:105:47: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:105:53: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:105:63: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:105:70: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:111:29: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:111:35: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:113:24: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:118:38: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:118:49: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:119:38: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:134:45: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:145:45: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/KernelLog.py:1:0: C0103: Module name "KernelLog" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:44:0: C0115: Missing class docstring (missing-class-docstring)
testcases/KernelLog.py:47:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:48:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:49:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/KernelLog.py:45:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/KernelLog.py:52:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/KernelLog.py:53:8: E1101: Instance of 'KernelLog' has no 'setup_test' member (no-member)
testcases/KernelLog.py:59:26: E1101: Instance of 'KernelLog' has no 'c' member (no-member)
testcases/KernelLog.py:63:30: E1101: Instance of 'KernelLog' has no 'c' member (no-member)
testcases/KernelLog.py:67:34: E1101: Instance of 'KernelLog' has no 'c' member (no-member)
testcases/KernelLog.py:152:8: E1101: Instance of 'KernelLog' has no 'assertTrue' member (no-member)
testcases/KernelLog.py:153:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/KernelLog.py:156:0: C0115: Missing class docstring (missing-class-docstring)
testcases/KernelLog.py:157:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/KernelLog.py:158:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/KernelLog.py:160:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/KernelLog.py:163:0: C0115: Missing class docstring (missing-class-docstring)
testcases/KernelLog.py:164:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/KernelLog.py:165:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/KernelLog.py:167:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/KernelLog.py:39:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/KernelLog.py:36:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/KernelLog.py:39:0: W0611: Unused import logging (unused-import)
************* Module testcases.I2C
testcases/I2C.py:161:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
testcases/I2C.py:134:41: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/I2C.py:158:40: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/I2C.py:158:47: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/I2C.py:1:0: C0103: Module name "I2C" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:55:4: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/I2C.py:65:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:66:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:67:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/I2C.py:63:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/I2C.py:70:11: E1101: Instance of 'I2C' has no 'test' member (no-member)
testcases/I2C.py:73:13: E1101: Instance of 'I2C' has no 'test' member (no-member)
testcases/I2C.py:77:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/I2C.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/I2C.py:95:12: E1101: Instance of 'I2C' has no 'assertTrue' member (no-member)
testcases/I2C.py:101:16: E1101: Instance of 'I2C' has no 'assertTrue' member (no-member)
testcases/I2C.py:106:12: E1101: Instance of 'I2C' has no 'assertNotEqual' member (no-member)
testcases/I2C.py:108:12: E1101: Instance of 'I2C' has no 'assertEqual' member (no-member)
testcases/I2C.py:134:12: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:157:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/I2C.py:158:16: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:189:12: W0621: Redefining name 'cf' from outer scope (line 182) (redefined-outer-name)
testcases/I2C.py:182:8: W0612: Unused variable 'cf' (unused-variable)
testcases/I2C.py:191:12: W0612: Unused variable 'km' (unused-variable)
testcases/I2C.py:206:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:206:8: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:218:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/I2C.py:218:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:220:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:227:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:230:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/I2C.py:230:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:231:16: W0707: Consider explicitly re-raising using 'raise I2CDetectUnsupported from cf' (raise-missing-from)
testcases/I2C.py:234:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:236:16: E1101: Instance of 'I2C' has no 'assertEqual' member (no-member)
testcases/I2C.py:237:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:220:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:229:12: W0612: Unused variable 'cf' (unused-variable)
testcases/I2C.py:258:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:260:12: E1101: Instance of 'I2C' has no 'assertEqual' member (no-member)
testcases/I2C.py:261:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:258:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:283:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:285:12: E1101: Instance of 'I2C' has no 'assertEqual' member (no-member)
testcases/I2C.py:286:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:283:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:310:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:312:12: E1101: Instance of 'I2C' has no 'assertEqual' member (no-member)
testcases/I2C.py:313:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:309:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:72:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/I2C.py:75:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/I2C.py:339:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/I2C.py:341:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/I2C.py:341:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/I2C.py:360:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/I2C.py:360:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:390:16: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
testcases/I2C.py:407:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/I2C.py:341:4: R0912: Too many branches (13/12) (too-many-branches)
testcases/I2C.py:341:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/I2C.py:390:16: W0612: Unused variable 'l_val' (unused-variable)
testcases/I2C.py:398:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/I2C.py:414:0: C0115: Missing class docstring (missing-class-docstring)
testcases/I2C.py:419:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/I2C.py:422:0: C0115: Missing class docstring (missing-class-docstring)
testcases/I2C.py:40:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/I2C.py:47:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.Exceptions.KernelConfigNotSet"  (wrong-import-order)
testcases/I2C.py:43:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/I2C.py:33:0: W0611: Unused import time (unused-import)
testcases/I2C.py:34:0: W0611: Unused import subprocess (unused-import)
testcases/I2C.py:36:0: W0611: Unused import sys (unused-import)
testcases/I2C.py:47:0: W0611: Unused import logging (unused-import)
************* Module testcases.SecureBoot
testcases/SecureBoot.py:1:0: C0103: Module name "SecureBoot" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:27:0: E0401: Unable to import 'pexpect' (import-error)
testcases/SecureBoot.py:41:0: C0115: Missing class docstring (missing-class-docstring)
testcases/SecureBoot.py:44:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:45:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:46:8: C0103: Attribute name "cv_REST" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:47:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:48:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:41:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
testcases/SecureBoot.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:100:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SecureBoot.py:105:15: C0117: Consider changing "not 'secure mode on' in data" to "'secure mode on' not in data" (unnecessary-negation)
testcases/SecureBoot.py:106:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/SecureBoot.py:108:20: E0601: Using variable 'part_list' before assignment (used-before-assignment)
testcases/SecureBoot.py:109:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SecureBoot.py:111:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/SecureBoot.py:112:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SecureBoot.py:114:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:122:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/SecureBoot.py:92:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/SecureBoot.py:151:0: C0115: Missing class docstring (missing-class-docstring)
testcases/SecureBoot.py:154:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:153:8: W0612: Unused variable 'conf' (unused-variable)
testcases/SecureBoot.py:156:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:156:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SecureBoot.py:177:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:183:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:209:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:215:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:238:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:244:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:264:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:271:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:269:8: W0612: Unused variable 'console' (unused-variable)
testcases/SecureBoot.py:295:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:310:12: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/SecureBoot.py:319:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SecureBoot.py:36:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed", "testcases.OpTestFlash.PNORFLASH", "testcases.OpTestFlash.OpalLidsFLASH"  (wrong-import-order)
testcases/SecureBoot.py:31:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/SecureBoot.py:36:0: W0611: Unused import logging (unused-import)
************* Module testcases.FWTS
testcases/FWTS.py:105:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
testcases/FWTS.py:163:0: C0301: Line too long (104/100) (line-too-long)
testcases/FWTS.py:167:0: C0301: Line too long (112/100) (line-too-long)
testcases/FWTS.py:177:0: C0301: Line too long (121/100) (line-too-long)
testcases/FWTS.py:184:0: C0301: Line too long (121/100) (line-too-long)
testcases/FWTS.py:131:36: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:179:49: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:179:64: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:284:43: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:284:47: W1401: Anomalous backslash in string: '\.'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:284:50: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/FWTS.py:1:0: C0103: Module name "FWTS" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:45:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/FWTS.py:46:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/FWTS.py:55:0: C0115: Missing class docstring (missing-class-docstring)
testcases/FWTS.py:209:16: C0103: Attribute name "FAIL" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:58:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:62:0: C0115: Missing class docstring (missing-class-docstring)
testcases/FWTS.py:254:16: C0103: Attribute name "SKIP" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:65:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:69:0: C0115: Missing class docstring (missing-class-docstring)
testcases/FWTS.py:288:12: C0103: Attribute name "MAJOR" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:289:12: C0103: Attribute name "MINOR" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:78:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:83:0: C0115: Missing class docstring (missing-class-docstring)
testcases/FWTS.py:233:36: C0103: Attribute name "SUBTEST_RESULT" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:234:36: C0103: Attribute name "CENTAURS_PRESENT" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:235:36: C0103: Attribute name "FWTS_MAJOR_VERSION" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:236:36: C0103: Attribute name "FWTS_MINOR_VERSION" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:238:40: C0103: Attribute name "IS_FSP_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:90:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:94:8: C0103: Variable name "DTC_FLASH_INVALID_LENGTH" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:90:4: R0912: Too many branches (17/12) (too-many-branches)
testcases/FWTS.py:244:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:245:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/FWTS.py:198:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/FWTS.py:198:4: R0914: Too many local variables (21/15) (too-many-locals)
testcases/FWTS.py:198:4: R0912: Too many branches (14/12) (too-many-branches)
testcases/FWTS.py:219:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
testcases/FWTS.py:221:16: W0612: Unused variable 'js_suite' (unused-variable)
testcases/FWTS.py:242:4: W0221: Number of parameters was 3 in 'TestSuite.run' and is now 2 in overriding 'FWTS.run' method (arguments-differ)
testcases/FWTS.py:250:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/FWTS.py:251:15: R1701: Consider merging these isinstance calls to isinstance(self.cv_SYSTEM.console, (OpTestMambo.MamboConsole, OpTestQemu.QemuConsole)) (consider-merging-isinstance)
testcases/FWTS.py:274:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/FWTS.py:274:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/FWTS.py:244:8: W0201: Attribute 'cv_HOST' defined outside __init__ (attribute-defined-outside-init)
testcases/FWTS.py:245:8: W0201: Attribute 'cv_SYSTEM' defined outside __init__ (attribute-defined-outside-init)
testcases/FWTS.py:246:8: W0201: Attribute 'bmc_type' defined outside __init__ (attribute-defined-outside-init)
testcases/FWTS.py:247:8: W0201: Attribute 'real_fwts_suite' defined outside __init__ (attribute-defined-outside-init)
testcases/FWTS.py:267:8: W0201: Attribute 'centaurs_present' defined outside __init__ (attribute-defined-outside-init)
testcases/FWTS.py:42:0: C0411: standard import "unittest" should be placed before first party import "OpTestConfiguration"  (wrong-import-order)
testcases/FWTS.py:48:0: C0411: standard import "json" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestMambo", "common.OpTestQemu"  (wrong-import-order)
testcases/FWTS.py:50:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestMambo", "common.OpTestQemu"  (wrong-import-order)
testcases/FWTS.py:35:0: W0611: Unused import time (unused-import)
testcases/FWTS.py:36:0: W0611: Unused import subprocess (unused-import)
testcases/FWTS.py:38:0: W0611: Unused import sys (unused-import)
testcases/FWTS.py:39:0: W0611: Unused import os (unused-import)
testcases/FWTS.py:50:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestIPMILockMode
testcases/OpTestIPMILockMode.py:104:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestIPMILockMode.py:83:9: W0511: FIXME: detect and don't hardcode (fixme)
testcases/OpTestIPMILockMode.py:264:39: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:264:44: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:264:51: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:275:39: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:275:44: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:275:51: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestIPMILockMode.py:1:0: C0103: Module name "OpTestIPMILockMode" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:77:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:78:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:79:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestIPMILockMode.py:82:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:86:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMILockMode.py:100:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestIPMILockMode.py:100:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMILockMode.py:117:8: W0702: No exception type(s) specified (bare-except)
testcases/OpTestIPMILockMode.py:113:8: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestIPMILockMode.py:118:12: W0612: Unused variable 'l_msg' (unused-variable)
testcases/OpTestIPMILockMode.py:229:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMILockMode.py:242:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMILockMode.py:264:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:266:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestIPMILockMode.py:266:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMILockMode.py:268:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMILockMode.py:275:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestIPMILockMode.py:277:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestIPMILockMode.py:277:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMILockMode.py:279:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMILockMode.py:302:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestIPMILockMode.py:302:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestIPMILockMode.py:310:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestIPMILockMode.py:126:4: R0915: Too many statements (108/50) (too-many-statements)
testcases/OpTestIPMILockMode.py:47:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestIPMILockMode.py:52:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/OpTestIPMILockMode.py:50:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestIPMILockMode.py:42:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestIPMILockMode.py:52:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestDlparIO
testcases/OpTestDlparIO.py:66:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestDlparIO.py:86:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestDlparIO.py:99:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestDlparIO.py:164:0: C0301: Line too long (109/100) (line-too-long)
testcases/OpTestDlparIO.py:166:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestDlparIO.py:261:13: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlparIO.py:1:0: C0103: Module name "OpTestDlparIO" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:41:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDlparIO.py:45:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:47:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:48:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:41:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)
testcases/OpTestDlparIO.py:62:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:66:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:70:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:107:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:126:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:131:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlparIO.py:131:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:144:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:148:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlparIO.py:148:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:164:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:168:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:169:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:176:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:81:8: W0201: Attribute 'pci_device_type' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestDlparIO.py:179:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDlparIO.py:241:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:246:12: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise OpTestError('lshwres fails to list the drc in destination lpar %s after                        dlpar move' % self.dest_lpar) from exc' (raise-missing-from)
testcases/OpTestDlparIO.py:246:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:255:12: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise OpTestError('lshwres fails to list the drc in lpar %s after                        dlpar move' % self.cv_HMC.lpar_name) from exc' (raise-missing-from)
testcases/OpTestDlparIO.py:255:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:263:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:270:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:279:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:284:4: R0913: Too many arguments (7/5) (too-many-arguments)
testcases/OpTestDlparIO.py:290:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:294:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:284:71: W0613: Unused argument 'msg' (unused-argument)
testcases/OpTestDlparIO.py:299:4: R0913: Too many arguments (8/5) (too-many-arguments)
testcases/OpTestDlparIO.py:306:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:310:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:300:57: W0613: Unused argument 'msg' (unused-argument)
testcases/OpTestDlparIO.py:316:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:328:11: E1101: Instance of 'OpSOLMonitorThread' has no 'isAlive' member (no-member)
testcases/OpTestDlparIO.py:331:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDlparIO.py:331:0: C0103: Class name "OpTestdrmgr_pci" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDlparIO.py:333:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlparIO.py:334:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:338:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlparIO.py:338:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:348:11: E1101: Instance of 'OpSOLMonitorThread' has no 'isAlive' member (no-member)
testcases/OpTestDlparIO.py:351:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDlparIO.py:351:0: C0103: Class name "OpTestdrmgr_phb" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestDlparIO.py:353:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlparIO.py:354:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlparIO.py:357:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlparIO.py:357:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:365:11: E1101: Instance of 'OpSOLMonitorThread' has no 'isAlive' member (no-member)
testcases/OpTestDlparIO.py:368:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlparIO.py:368:0: C0103: Function name "DlparIO_suite" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlparIO.py:33:0: W0611: Unused OpTestHMC imported from common (unused-import)
testcases/OpTestDlparIO.py:35:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
************* Module testcases.OpalGard
testcases/OpalGard.py:85:25: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpalGard.py:1:0: C0103: Module name "OpalGard" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalGard.py:48:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalGard.py:51:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalGard.py:52:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalGard.py:53:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalGard.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalGard.py:63:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalGard.py:60:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalGard.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalGard.py:71:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalGard.py:68:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalGard.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalGard.py:73:31: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/OpalGard.py:74:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalGard.py:79:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalGard.py:76:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalGard.py:83:8: W0612: Unused variable 'res' (unused-variable)
testcases/OpalGard.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalGard.py:87:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalGard.py:99:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpalGard.py:100:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpalGard.py:105:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalGard.py:99:8: W0612: Unused variable 'e' (unused-variable)
testcases/OpalGard.py:102:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpalGard.py:92:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalGard.py:38:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpalGard.py:44:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpalGard.py:41:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpalGard.py:34:0: W0611: Unused import re (unused-import)
testcases/OpalGard.py:35:0: W0611: Unused import random (unused-import)
testcases/OpalGard.py:37:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpalGard.py:44:0: W0611: Unused import logging (unused-import)
************* Module testcases.EnergyScale_BaseLine
testcases/EnergyScale_BaseLine.py:1:0: C0103: Module name "EnergyScale_BaseLine" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:50:0: C0115: Missing class docstring (missing-class-docstring)
testcases/EnergyScale_BaseLine.py:50:0: C0103: Class name "EnergyScale_BaseLine" doesn't conform to PascalCase naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:53:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:54:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:55:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:56:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EnergyScale_BaseLine.py:68:12: C0103: Variable name "matchList" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:69:12: C0103: Variable name "matchList" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EnergyScale_BaseLine.py:78:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/EnergyScale_BaseLine.py:38:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/EnergyScale_BaseLine.py:45:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/EnergyScale_BaseLine.py:41:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/EnergyScale_BaseLine.py:30:0: W0611: Unused import time (unused-import)
testcases/EnergyScale_BaseLine.py:31:0: W0611: Unused import subprocess (unused-import)
testcases/EnergyScale_BaseLine.py:33:0: W0611: Unused import sys (unused-import)
testcases/EnergyScale_BaseLine.py:34:0: W0611: Unused import os (unused-import)
testcases/EnergyScale_BaseLine.py:35:0: W0611: Unused import random (unused-import)
testcases/EnergyScale_BaseLine.py:37:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/EnergyScale_BaseLine.py:41:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/EnergyScale_BaseLine.py:43:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
testcases/EnergyScale_BaseLine.py:45:0: W0611: Unused import logging (unused-import)
************* Module testcases.Lcov
testcases/Lcov.py:117:132: C0303: Trailing whitespace (trailing-whitespace)
testcases/Lcov.py:117:0: C0301: Line too long (132/100) (line-too-long)
testcases/Lcov.py:128:0: C0305: Trailing newlines (trailing-newlines)
testcases/Lcov.py:1:0: C0103: Module name "Lcov" doesn't conform to snake_case naming style (invalid-name)
testcases/Lcov.py:51:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/Lcov.py:52:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/Lcov.py:57:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/Lcov.py:61:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/Lcov.py:61:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Lcov.py:104:19: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
testcases/Lcov.py:112:38: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
testcases/Lcov.py:122:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
testcases/Lcov.py:124:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/Lcov.py:125:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
testcases/Lcov.py:126:59: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module testcases.OpTestPrdDaemon
testcases/OpTestPrdDaemon.py:101:0: C0301: Line too long (118/100) (line-too-long)
testcases/OpTestPrdDaemon.py:107:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestPrdDaemon.py:109:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestPrdDaemon.py:120:0: C0301: Line too long (117/100) (line-too-long)
testcases/OpTestPrdDaemon.py:132:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestPrdDaemon.py:1:0: C0103: Module name "OpTestPrdDaemon" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDaemon.py:47:0: W0404: Reimport 'subprocess' (imported line 42) (reimported)
testcases/OpTestPrdDaemon.py:76:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDaemon.py:77:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDaemon.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPrdDaemon.py:81:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPrdDaemon.py:86:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:86:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:95:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:95:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:101:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:101:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:104:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:104:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:105:12: W0621: Redefining name 'c' from outer scope (line 96) (redefined-outer-name)
testcases/OpTestPrdDaemon.py:109:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:113:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:115:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:115:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:118:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:118:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:120:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:127:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPrdDaemon.py:127:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:132:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPrdDaemon.py:51:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestPrdDaemon.py:58:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestPrdDaemon.py:47:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/OpTestPrdDaemon.py:54:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestPrdDaemon.py:42:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestPrdDaemon.py:43:0: W0611: Unused import re (unused-import)
testcases/OpTestPrdDaemon.py:44:0: W0611: Unused import sys (unused-import)
testcases/OpTestPrdDaemon.py:45:0: W0611: Unused import os (unused-import)
testcases/OpTestPrdDaemon.py:46:0: W0611: Unused import random (unused-import)
testcases/OpTestPrdDaemon.py:54:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestPrdDaemon.py:58:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestSensors
testcases/OpTestSensors.py:1:0: C0103: Module name "OpTestSensors" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSensors.py:69:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSensors.py:70:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSensors.py:71:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSensors.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSensors.py:78:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSensors.py:105:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestSensors.py:105:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSensors.py:78:4: R1711: Useless return at end of function or method (useless-return)
testcases/OpTestSensors.py:111:8: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestSensors.py:116:16: W0612: Unused variable 'response' (unused-variable)
testcases/OpTestSensors.py:80:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestSensors.py:49:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestError.OpTestError", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestSensors.py:38:0: W0611: Unused import time (unused-import)
testcases/OpTestSensors.py:39:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestSensors.py:40:0: W0611: Unused import re (unused-import)
testcases/OpTestSensors.py:46:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestSensors.py:49:0: W0611: Unused import logging (unused-import)
************* Module testcases.PetitbootMMU
testcases/PetitbootMMU.py:1:0: C0103: Module name "PetitbootMMU" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootMMU.py:39:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootMMU.py:43:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootMMU.py:44:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootMMU.py:45:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootMMU.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootMMU.py:47:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootMMU.py:56:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PetitbootMMU.py:56:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PetitbootMMU.py:60:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PetitbootMMU.py:63:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PetitbootMMU.py:49:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/PetitbootMMU.py:31:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestFlash
testcases/OpTestFlash.py:86:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestFlash.py:149:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
testcases/OpTestFlash.py:158:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestFlash.py:244:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestFlash.py:247:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestFlash.py:262:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestFlash.py:277:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestFlash.py:412:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestFlash.py:420:0: C0301: Line too long (126/100) (line-too-long)
testcases/OpTestFlash.py:522:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestFlash.py:526:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestFlash.py:498:9: W0511: FIXME: verify the system is actually off (fixme)
testcases/OpTestFlash.py:1:0: C0103: Module name "OpTestFlash" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:64:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFlash.py:67:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:68:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:69:8: C0103: Attribute name "cv_REST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:70:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:71:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:74:8: C0103: Attribute name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:64:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
testcases/OpTestFlash.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:130:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestFlash.py:131:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:131:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:132:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestFlash.py:133:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:115:18: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
testcases/OpTestFlash.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:138:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:141:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:147:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:156:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/OpTestFlash.py:147:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestFlash.py:154:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestFlash.py:163:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:166:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:166:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:169:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:169:4: R1711: Useless return at end of function or method (useless-return)
testcases/OpTestFlash.py:192:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:194:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:194:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:238:12: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/OpTestFlash.py:199:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:199:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:200:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:215:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:242:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:242:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:244:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:244:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:247:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:247:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:261:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:261:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:263:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:264:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:267:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:267:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:272:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:272:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:285:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:286:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:194:4: R0912: Too many branches (18/12) (too-many-branches)
testcases/OpTestFlash.py:194:4: R0915: Too many statements (76/50) (too-many-statements)
testcases/OpTestFlash.py:194:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestFlash.py:228:16: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestFlash.py:230:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestFlash.py:301:8: W0612: Unused variable 'raw_pty' (unused-variable)
testcases/OpTestFlash.py:325:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:327:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:327:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:332:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:332:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:333:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:375:50: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:377:20: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestFlash.py:414:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:414:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:421:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:422:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:327:4: R0912: Too many branches (28/12) (too-many-branches)
testcases/OpTestFlash.py:327:4: R0915: Too many statements (76/50) (too-many-statements)
testcases/OpTestFlash.py:387:20: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestFlash.py:389:16: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestFlash.py:392:16: W0612: Unused variable 'version' (unused-variable)
testcases/OpTestFlash.py:428:8: W0612: Unused variable 'raw_pty' (unused-variable)
testcases/OpTestFlash.py:465:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:466:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:468:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:468:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:505:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:510:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:511:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:511:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:520:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:521:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:522:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:524:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:525:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:526:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:586:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestFlash.py:586:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:587:16: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestFlash.py:468:4: R0912: Too many branches (33/12) (too-many-branches)
testcases/OpTestFlash.py:468:4: R0915: Too many statements (93/50) (too-many-statements)
testcases/OpTestFlash.py:602:8: W0612: Unused variable 'raw_pty' (unused-variable)
testcases/OpTestFlash.py:608:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFlash.py:613:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:614:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:616:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:616:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:634:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFlash.py:639:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:640:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:642:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:642:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:655:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestFlash.py:659:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestFlash.py:661:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestFlash.py:661:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestFlash.py:673:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:673:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:683:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:706:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestFlash.py:706:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestFlash.py:59:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "common.Exceptions.CommandFailed", "common.OpTestInstallUtil"  (wrong-import-order)
testcases/OpTestFlash.py:59:0: W0611: Unused import logging (unused-import)
************* Module testcases.ConsoleBug150765
testcases/ConsoleBug150765.py:1:0: C0103: Module name "ConsoleBug150765" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:40:0: E0401: Unable to import 'pexpect' (import-error)
testcases/ConsoleBug150765.py:52:0: C0115: Missing class docstring (missing-class-docstring)
testcases/ConsoleBug150765.py:55:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:56:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:57:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:58:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/ConsoleBug150765.py:63:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/ConsoleBug150765.py:41:0: C0411: standard import "threading" should be placed before third party import "pexpect" (wrong-import-order)
testcases/ConsoleBug150765.py:47:0: C0411: standard import "unittest" should be placed before third party import "pexpect" and first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/ConsoleBug150765.py:49:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/ConsoleBug150765.py:37:0: W0611: Unused import time (unused-import)
testcases/ConsoleBug150765.py:38:0: W0611: Unused import subprocess (unused-import)
testcases/ConsoleBug150765.py:39:0: W0611: Unused import re (unused-import)
testcases/ConsoleBug150765.py:40:0: W0611: Unused import pexpect (unused-import)
testcases/ConsoleBug150765.py:41:0: W0611: Unused import threading (unused-import)
testcases/ConsoleBug150765.py:43:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/ConsoleBug150765.py:45:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.OpTestOpenCAPI
testcases/OpTestOpenCAPI.py:67:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:120:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:151:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:182:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:213:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:244:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestOpenCAPI.py:1:0: C0103: Module name "OpTestOpenCAPI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:57:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOpenCAPI.py:60:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:61:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:62:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:67:12: C0121: Comparison 'self.cv_HOST.host_has_opencapi_fpga_card() != True' should be 'self.cv_HOST.host_has_opencapi_fpga_card() is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_has_opencapi_fpga_card()' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:74:8: W0612: Unused variable 'l_oslevel' (unused-variable)
testcases/OpTestOpenCAPI.py:92:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:93:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:95:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:102:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:111:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:112:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:114:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:114:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:120:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy')' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:126:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOpenCAPI.py:133:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:142:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:143:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:145:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:145:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:151:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy')' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:157:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOpenCAPI.py:164:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:173:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:174:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:176:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:176:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:182:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy')' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:188:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOpenCAPI.py:195:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:204:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:205:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:207:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:207:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:213:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy')' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:219:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOpenCAPI.py:226:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:235:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestOpenCAPI.py:236:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOpenCAPI.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:238:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOpenCAPI.py:244:12: C0121: Comparison 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') != True' should be 'self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy') is not True' if checking for the singleton value True, or 'not self.cv_HOST.host_check_binary(l_dir, 'afuobj/ocxl_memcpy')' if testing for falsiness (singleton-comparison)
testcases/OpTestOpenCAPI.py:250:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOpenCAPI.py:257:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOpenCAPI.py:260:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOpenCAPI.py:52:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestError.OpTestError", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestOpenCAPI.py:41:0: W0611: Unused import time (unused-import)
testcases/OpTestOpenCAPI.py:42:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestOpenCAPI.py:43:0: W0611: Unused import re (unused-import)
testcases/OpTestOpenCAPI.py:49:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestOpenCAPI.py:52:0: W0611: Unused import logging (unused-import)
************* Module testcases.SystemLogin
testcases/SystemLogin.py:1:0: C0103: Module name "SystemLogin" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:30:0: W0404: Reimport 'subprocess' (imported line 29) (reimported)
testcases/SystemLogin.py:40:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/SystemLogin.py:41:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/SystemLogin.py:55:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SystemLogin.py:57:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:66:12: W0612: Unused variable 'i' (unused-variable)
testcases/SystemLogin.py:83:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:84:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SystemLogin.py:86:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:87:11: R1701: Consider merging these isinstance calls to isinstance(self.cv_BMC, (OpTestMambo.OpTestMambo, OpTestQemu.OpTestQemu)) (consider-merging-isinstance)
testcases/SystemLogin.py:96:12: W0612: Unused variable 'i' (unused-variable)
testcases/SystemLogin.py:107:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:108:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:110:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SystemLogin.py:110:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:118:12: W0612: Unused variable 'i' (unused-variable)
testcases/SystemLogin.py:132:0: C0115: Missing class docstring (missing-class-docstring)
testcases/SystemLogin.py:135:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SystemLogin.py:138:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SystemLogin.py:146:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SystemLogin.py:43:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestQemu", "common.OpTestMambo"  (wrong-import-order)
testcases/SystemLogin.py:28:0: W0611: Unused import time (unused-import)
testcases/SystemLogin.py:29:0: W0611: Unused import subprocess (unused-import)
testcases/SystemLogin.py:31:0: W0611: Unused import re (unused-import)
testcases/SystemLogin.py:32:0: W0611: Unused import sys (unused-import)
testcases/SystemLogin.py:33:0: W0611: Unused import os (unused-import)
testcases/SystemLogin.py:43:0: W0611: Unused import logging (unused-import)
************* Module testcases.fspresetReload
testcases/fspresetReload.py:204:25: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/fspresetReload.py:1:0: C0103: Module name "fspresetReload" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:52:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:52:0: C0103: Class name "fspresetReload" doesn't conform to PascalCase naming style (invalid-name)
testcases/fspresetReload.py:55:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:56:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:57:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:58:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:73:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/fspresetReload.py:73:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspresetReload.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:79:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/fspresetReload.py:79:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspresetReload.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:85:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/fspresetReload.py:85:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspresetReload.py:88:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/fspresetReload.py:88:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspresetReload.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:92:11: E1101: Instance of 'fspresetReload' has no 'test' member (no-member)
testcases/fspresetReload.py:94:13: E1101: Instance of 'fspresetReload' has no 'test' member (no-member)
testcases/fspresetReload.py:96:13: E1101: Instance of 'fspresetReload' has no 'test' member (no-member)
testcases/fspresetReload.py:99:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/fspresetReload.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:106:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:108:12: W0612: Unused variable 'i' (unused-variable)
testcases/fspresetReload.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:133:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:160:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:170:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:183:8: W0702: No exception type(s) specified (bare-except)
testcases/fspresetReload.py:186:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:198:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:202:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:206:12: W0612: Unused variable 'output' (unused-variable)
testcases/fspresetReload.py:212:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:212:0: C0103: Class name "resetReload" doesn't conform to PascalCase naming style (invalid-name)
testcases/fspresetReload.py:213:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:213:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/fspresetReload.py:219:8: E1101: Instance of 'resetReload' has no 'set_up' member (no-member)
testcases/fspresetReload.py:225:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/fspresetReload.py:225:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/fspresetReload.py:239:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:240:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:241:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/fspresetReload.py:244:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:245:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:246:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/fspresetReload.py:249:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:250:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:251:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/fspresetReload.py:254:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:259:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:264:0: C0115: Missing class docstring (missing-class-docstring)
testcases/fspresetReload.py:269:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:276:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/fspresetReload.py:42:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/fspresetReload.py:47:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/fspresetReload.py:44:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/fspresetReload.py:35:0: W0611: Unused import subprocess (unused-import)
testcases/fspresetReload.py:36:0: W0611: Unused import re (unused-import)
testcases/fspresetReload.py:38:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/fspresetReload.py:47:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestRebootTimeout
testcases/OpTestRebootTimeout.py:64:0: C0301: Line too long (109/100) (line-too-long)
testcases/OpTestRebootTimeout.py:1:0: C0103: Module name "OpTestRebootTimeout" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:31:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestRebootTimeout.py:50:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:51:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:52:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRebootTimeout.py:48:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRebootTimeout.py:54:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestRebootTimeout.py:55:8: E1101: Instance of 'RebootTime' has no 'setup_test' member (no-member)
testcases/OpTestRebootTimeout.py:57:13: E1101: Instance of 'RebootTime' has no 'c' member (no-member)
testcases/OpTestRebootTimeout.py:60:8: E1101: Instance of 'RebootTime' has no 'c' member (no-member)
testcases/OpTestRebootTimeout.py:63:13: E1101: Instance of 'RebootTime' has no 'c' member (no-member)
testcases/OpTestRebootTimeout.py:66:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestRebootTimeout.py:66:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRebootTimeout.py:69:12: E1101: Instance of 'RebootTime' has no 'assertTrue' member (no-member)
testcases/OpTestRebootTimeout.py:69:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestRebootTimeout.py:72:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRebootTimeout.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRebootTimeout.py:75:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestRebootTimeout.py:78:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestRebootTimeout.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestRebootTimeout.py:81:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestRebootTimeout.py:37:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestRebootTimeout.py:29:0: W0611: Unused import re (unused-import)
testcases/OpTestRebootTimeout.py:35:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpTestRebootTimeout.py:37:0: W0611: Unused import logging (unused-import)
************* Module testcases.PowerNVDump
testcases/PowerNVDump.py:58:0: C0301: Line too long (102/100) (line-too-long)
testcases/PowerNVDump.py:72:0: C0301: Line too long (145/100) (line-too-long)
testcases/PowerNVDump.py:124:0: C0301: Line too long (108/100) (line-too-long)
testcases/PowerNVDump.py:150:0: C0301: Line too long (135/100) (line-too-long)
testcases/PowerNVDump.py:172:0: C0301: Line too long (106/100) (line-too-long)
testcases/PowerNVDump.py:178:0: C0301: Line too long (141/100) (line-too-long)
testcases/PowerNVDump.py:227:11: C0303: Trailing whitespace (trailing-whitespace)
testcases/PowerNVDump.py:256:0: C0301: Line too long (135/100) (line-too-long)
testcases/PowerNVDump.py:259:0: C0301: Line too long (118/100) (line-too-long)
testcases/PowerNVDump.py:263:0: C0301: Line too long (124/100) (line-too-long)
testcases/PowerNVDump.py:276:0: C0301: Line too long (118/100) (line-too-long)
testcases/PowerNVDump.py:295:23: C0303: Trailing whitespace (trailing-whitespace)
testcases/PowerNVDump.py:330:23: C0303: Trailing whitespace (trailing-whitespace)
testcases/PowerNVDump.py:351:0: C0301: Line too long (101/100) (line-too-long)
testcases/PowerNVDump.py:393:0: C0301: Line too long (106/100) (line-too-long)
testcases/PowerNVDump.py:427:0: C0301: Line too long (101/100) (line-too-long)
testcases/PowerNVDump.py:548:0: C0301: Line too long (104/100) (line-too-long)
testcases/PowerNVDump.py:589:0: C0301: Line too long (110/100) (line-too-long)
testcases/PowerNVDump.py:591:0: C0301: Line too long (109/100) (line-too-long)
testcases/PowerNVDump.py:634:0: C0301: Line too long (113/100) (line-too-long)
testcases/PowerNVDump.py:638:0: C0301: Line too long (114/100) (line-too-long)
testcases/PowerNVDump.py:639:0: C0301: Line too long (107/100) (line-too-long)
testcases/PowerNVDump.py:640:0: C0301: Line too long (112/100) (line-too-long)
testcases/PowerNVDump.py:700:0: C0301: Line too long (118/100) (line-too-long)
testcases/PowerNVDump.py:701:0: C0301: Line too long (111/100) (line-too-long)
testcases/PowerNVDump.py:702:0: C0301: Line too long (116/100) (line-too-long)
testcases/PowerNVDump.py:716:0: C0301: Line too long (121/100) (line-too-long)
testcases/PowerNVDump.py:813:0: C0301: Line too long (121/100) (line-too-long)
testcases/PowerNVDump.py:824:0: C0301: Line too long (124/100) (line-too-long)
testcases/PowerNVDump.py:825:0: C0301: Line too long (127/100) (line-too-long)
testcases/PowerNVDump.py:826:0: C0301: Line too long (108/100) (line-too-long)
testcases/PowerNVDump.py:836:0: C0301: Line too long (133/100) (line-too-long)
testcases/PowerNVDump.py:837:0: C0301: Line too long (116/100) (line-too-long)
testcases/PowerNVDump.py:842:0: C0301: Line too long (124/100) (line-too-long)
testcases/PowerNVDump.py:844:0: C0301: Line too long (132/100) (line-too-long)
testcases/PowerNVDump.py:845:0: C0301: Line too long (112/100) (line-too-long)
testcases/PowerNVDump.py:872:0: C0301: Line too long (121/100) (line-too-long)
testcases/PowerNVDump.py:882:0: C0301: Line too long (125/100) (line-too-long)
testcases/PowerNVDump.py:883:0: C0301: Line too long (128/100) (line-too-long)
testcases/PowerNVDump.py:887:0: C0301: Line too long (114/100) (line-too-long)
testcases/PowerNVDump.py:888:0: C0301: Line too long (108/100) (line-too-long)
testcases/PowerNVDump.py:889:0: C0301: Line too long (115/100) (line-too-long)
testcases/PowerNVDump.py:890:0: C0301: Line too long (102/100) (line-too-long)
testcases/PowerNVDump.py:901:0: C0301: Line too long (103/100) (line-too-long)
testcases/PowerNVDump.py:903:0: C0301: Line too long (144/100) (line-too-long)
testcases/PowerNVDump.py:906:0: C0301: Line too long (157/100) (line-too-long)
testcases/PowerNVDump.py:907:0: C0301: Line too long (132/100) (line-too-long)
testcases/PowerNVDump.py:909:0: C0301: Line too long (102/100) (line-too-long)
testcases/PowerNVDump.py:910:0: C0301: Line too long (112/100) (line-too-long)
testcases/PowerNVDump.py:948:0: C0301: Line too long (119/100) (line-too-long)
testcases/PowerNVDump.py:949:0: C0301: Line too long (120/100) (line-too-long)
testcases/PowerNVDump.py:955:0: C0301: Line too long (122/100) (line-too-long)
testcases/PowerNVDump.py:957:0: C0301: Line too long (112/100) (line-too-long)
testcases/PowerNVDump.py:1005:0: C0301: Line too long (121/100) (line-too-long)
testcases/PowerNVDump.py:1028:0: C0301: Line too long (117/100) (line-too-long)
testcases/PowerNVDump.py:1080:0: C0301: Line too long (103/100) (line-too-long)
testcases/PowerNVDump.py:1084:0: C0301: Line too long (103/100) (line-too-long)
testcases/PowerNVDump.py:1098:0: C0301: Line too long (116/100) (line-too-long)
testcases/PowerNVDump.py:1105:0: C0301: Line too long (107/100) (line-too-long)
testcases/PowerNVDump.py:1112:0: C0301: Line too long (119/100) (line-too-long)
testcases/PowerNVDump.py:1182:0: C0301: Line too long (102/100) (line-too-long)
testcases/PowerNVDump.py:1194:0: C0301: Line too long (103/100) (line-too-long)
testcases/PowerNVDump.py:1313:33: C0303: Trailing whitespace (trailing-whitespace)
testcases/PowerNVDump.py:1317:0: C0301: Line too long (109/100) (line-too-long)
testcases/PowerNVDump.py:1318:29: C0303: Trailing whitespace (trailing-whitespace)
testcases/PowerNVDump.py:1320:0: C0301: Line too long (108/100) (line-too-long)
testcases/PowerNVDump.py:1323:0: C0301: Line too long (115/100) (line-too-long)
testcases/PowerNVDump.py:1326:0: C0301: Line too long (111/100) (line-too-long)
testcases/PowerNVDump.py:1327:0: C0301: Line too long (114/100) (line-too-long)
testcases/PowerNVDump.py:1330:0: C0301: Line too long (126/100) (line-too-long)
testcases/PowerNVDump.py:1339:0: C0301: Line too long (114/100) (line-too-long)
testcases/PowerNVDump.py:1341:0: C0301: Line too long (114/100) (line-too-long)
testcases/PowerNVDump.py:1351:0: C0301: Line too long (105/100) (line-too-long)
testcases/PowerNVDump.py:1360:0: C0301: Line too long (112/100) (line-too-long)
testcases/PowerNVDump.py:1427:0: C0301: Line too long (116/100) (line-too-long)
testcases/PowerNVDump.py:1477:0: C0301: Line too long (101/100) (line-too-long)
testcases/PowerNVDump.py:1558:0: C0301: Line too long (125/100) (line-too-long)
testcases/PowerNVDump.py:1594:0: C0301: Line too long (125/100) (line-too-long)
testcases/PowerNVDump.py:1623:0: C0301: Line too long (125/100) (line-too-long)
testcases/PowerNVDump.py:1:0: C0302: Too many lines in module (1681/1000) (too-many-lines)
testcases/PowerNVDump.py:259:62: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:259:68: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:259:74: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:259:80: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:259:86: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:638:59: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:639:62: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:700:63: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:701:67: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:824:65: W1401: Anomalous backslash in string: '\s'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:825:48: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:825:54: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:825:60: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:825:76: W1401: Anomalous backslash in string: '\s'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:836:67: W1401: Anomalous backslash in string: '\S'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:837:61: W1401: Anomalous backslash in string: '\S'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:842:59: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:842:80: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:842:82: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:842:91: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:844:64: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:882:54: W1401: Anomalous backslash in string: '\#'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:883:52: W1401: Anomalous backslash in string: '\#'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:883:61: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:883:67: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:883:73: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:906:59: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:906:80: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:906:82: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:906:86: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:907:64: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:951:45: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:951:50: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:970:41: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:970:46: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1327:47: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1327:52: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1327:65: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1330:59: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1337:40: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1337:45: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1339:47: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1339:61: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1339:66: W1401: Anomalous backslash in string: '\/'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1341:59: W1401: Anomalous backslash in string: '\K'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PowerNVDump.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/PowerNVDump.py:1:0: C0103: Module name "PowerNVDump" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:62:0: E0401: Unable to import 'pexpect' (import-error)
testcases/PowerNVDump.py:79:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PowerNVDump.py:79:0: R0903: Too few public methods (0/2) (too-few-public-methods)
testcases/PowerNVDump.py:96:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:97:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:98:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:111:12: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:86:0: R0902: Too many instance attributes (24/7) (too-many-instance-attributes)
testcases/PowerNVDump.py:104:11: R1714: Consider merging these comparisons with 'in' by using 'self.bmc_type in ('FSP_PHYP', 'EBMC_PHYP')'. Use a set instead if elements are hashable. (consider-using-in)
testcases/PowerNVDump.py:112:17: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:115:17: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:122:13: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:151:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:151:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:153:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:157:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:170:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:171:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:172:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:178:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:177:8: W0612: Unused variable 'pwd_less' (unused-variable)
testcases/PowerNVDump.py:196:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
testcases/PowerNVDump.py:201:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/PowerNVDump.py:219:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:229:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:238:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:239:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:241:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:262:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:265:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:268:41: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:273:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/PowerNVDump.py:278:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:278:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:282:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:287:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:243:4: R0912: Too many branches (14/12) (too-many-branches)
testcases/PowerNVDump.py:294:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/PowerNVDump.py:302:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:307:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:289:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/PowerNVDump.py:329:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/PowerNVDump.py:335:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:340:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:324:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/PowerNVDump.py:380:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:426:15: R1714: Consider merging these comparisons with 'in' by using 'rc in (1, 2, 3)'. Use a set instead if elements are hashable. (consider-using-in)
testcases/PowerNVDump.py:356:4: R0912: Too many branches (16/12) (too-many-branches)
testcases/PowerNVDump.py:356:4: R0915: Too many statements (59/50) (too-many-statements)
testcases/PowerNVDump.py:356:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/PowerNVDump.py:146:12: W0201: Attribute 'crash_content' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:149:12: W0201: Attribute 'crash_content' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:257:8: W0201: Attribute 'crash_content' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:259:8: W0201: Attribute 'crash_content' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:442:0: C0103: Class name "OPALCrash_MPIPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:450:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:450:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:452:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:468:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:450:4: R0912: Too many branches (13/12) (too-many-branches)
testcases/PowerNVDump.py:450:4: R0915: Too many statements (52/50) (too-many-statements)
testcases/PowerNVDump.py:519:0: C0103: Class name "SBECrash_MPIPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:526:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:544:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:548:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:552:20: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/PowerNVDump.py:565:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:568:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:571:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:575:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:579:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:589:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:591:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:616:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:526:4: R0912: Too many branches (13/12) (too-many-branches)
testcases/PowerNVDump.py:526:4: R0915: Too many statements (61/50) (too-many-statements)
testcases/PowerNVDump.py:594:8: W0612: Unused variable 'boot_type' (unused-variable)
testcases/PowerNVDump.py:620:0: C0103: Class name "KernelCrash_FadumpEnable" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:649:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:649:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:684:0: C0103: Class name "KernelCrash_OnlyKdumpEnable" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:689:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:689:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:736:0: C0103: Class name "KernelCrash_DisableAll" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:741:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:741:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:757:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:772:4: W0221: Number of parameters was 2 in 'PowerNVDump.setup_test' and is now 1 in overriding 'SkirootKernelCrash.setup_test' method (arguments-differ)
testcases/PowerNVDump.py:783:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:787:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:788:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:791:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:795:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:795:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:801:0: C0103: Class name "KernelCrash_KdumpSSH" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:809:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/PowerNVDump.py:820:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:824:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:825:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:827:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:836:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:837:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:842:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:844:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:848:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:848:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:860:0: C0103: Class name "KernelCrash_KdumpNFS" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:868:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/PowerNVDump.py:879:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:882:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:883:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:886:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:890:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:901:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:903:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:906:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:907:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:909:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:913:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:913:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:926:0: C0103: Class name "KernelCrash_KdumpSAN" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:932:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/PowerNVDump.py:938:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:941:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:942:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:944:12: W0702: No exception type(s) specified (bare-except)
testcases/PowerNVDump.py:943:17: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:943:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:944:20: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:945:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:947:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:949:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:951:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:955:46: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:958:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:963:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:963:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:970:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:973:0: C0103: Class name "KernelCrash_KdumpSMT" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:979:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:979:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:983:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:985:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:985:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1003:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1005:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:1005:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1009:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PowerNVDump.py:1009:0: C0103: Class name "KernelCrash_KdumpDLPAR" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1018:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1018:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1028:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:1028:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1033:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PowerNVDump.py:1033:0: C0103: Class name "KernelCrash_KdumpWorkLoad" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1040:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1040:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1052:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1071:0: C0103: Class name "KernelCrash_hugepage_checks" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1076:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1076:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1081:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1081:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1085:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1085:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1086:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/PowerNVDump.py:1089:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1089:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1092:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1092:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1106:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1106:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1107:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/PowerNVDump.py:1110:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1110:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1118:0: C0103: Class name "KernelCrash_XIVE_off" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1124:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1136:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/PowerNVDump.py:1139:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1139:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1146:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1148:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:1148:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1163:0: C0103: Class name "KernelCrash_disable_radix" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1168:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1168:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1173:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1173:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1183:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/PowerNVDump.py:1186:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PowerNVDump.py:1186:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1192:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1194:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:1194:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1216:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1220:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/PowerNVDump.py:1220:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1222:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1229:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1229:8: W0612: Unused variable 'crash_dir' (unused-variable)
testcases/PowerNVDump.py:1276:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1276:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1281:0: C0103: Class name "KernelCrash_KdumpPMEM" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1287:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/PowerNVDump.py:1290:13: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:1296:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1296:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1310:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1312:17: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:1314:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1316:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1317:13: C0321: More than one statement on a single line (multiple-statements)
testcases/PowerNVDump.py:1317:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1319:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1320:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1321:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1322:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1323:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1327:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1330:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1334:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1335:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1339:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1345:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PowerNVDump.py:1345:0: C0103: Class name "KernelCrash_FadumpNocma" doesn't conform to PascalCase naming style (invalid-name)
testcases/PowerNVDump.py:1349:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1349:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1552:8: C0103: Attribute name "kdumpNFS" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1588:8: C0103: Attribute name "kdumpSAN" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1366:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
testcases/PowerNVDump.py:1379:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/PowerNVDump.py:1383:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1416:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1418:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg) from c' (raise-missing-from)
testcases/PowerNVDump.py:1427:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/PowerNVDump.py:1420:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/PowerNVDump.py:1471:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1473:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PowerNVDump.py:1475:12: W0707: Consider explicitly re-raising using 'raise OpTestError(l_msg) from c' (raise-missing-from)
testcases/PowerNVDump.py:1494:12: W0707: Consider explicitly re-raising using 'raise OpTestError(msg) from c' (raise-missing-from)
testcases/PowerNVDump.py:1492:8: W0612: Unused variable 'c' (unused-variable)
testcases/PowerNVDump.py:1503:11: W0125: Using a conditional statement with a constant value (using-constant-test)
testcases/PowerNVDump.py:1513:20: W0707: Consider explicitly re-raising using 'raise OpTestError(msg) from c' (raise-missing-from)
testcases/PowerNVDump.py:1511:16: W0612: Unused variable 'c' (unused-variable)
testcases/PowerNVDump.py:1545:4: C0103: Method name "check_wd_overNFS" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1583:4: C0103: Method name "check_wd_overSAN" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1640:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:1640:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PowerNVDump.py:1411:12: W0201: Attribute 'script_timeout' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1412:12: W0201: Attribute 'script_action' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1443:8: W0201: Attribute 'system_timeout_value' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1456:8: W0201: Attribute 'watchdog_action_mode' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1502:8: W0201: Attribute 'count' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1552:8: W0201: Attribute 'kdumpNFS' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1588:8: W0201: Attribute 'kdumpSAN' defined outside __init__ (attribute-defined-outside-init)
testcases/PowerNVDump.py:1649:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PowerNVDump.py:63:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/PowerNVDump.py:64:0: C0411: standard import "time" should be placed before third party import "pexpect" (wrong-import-order)
testcases/PowerNVDump.py:65:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
testcases/PowerNVDump.py:66:0: C0411: standard import "tempfile" should be placed before third party import "pexpect" (wrong-import-order)
testcases/PowerNVDump.py:66:0: W0611: Unused import tempfile (unused-import)
************* Module testcases.TrustedBoot
testcases/TrustedBoot.py:38:0: C0301: Line too long (116/100) (line-too-long)
testcases/TrustedBoot.py:39:0: C0301: Line too long (121/100) (line-too-long)
testcases/TrustedBoot.py:40:0: C0301: Line too long (118/100) (line-too-long)
testcases/TrustedBoot.py:1:0: C0103: Module name "TrustedBoot" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:44:0: E0401: Unable to import 'pexpect' (import-error)
testcases/TrustedBoot.py:56:0: C0115: Missing class docstring (missing-class-docstring)
testcases/TrustedBoot.py:59:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:60:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:61:8: C0103: Attribute name "cv_REST" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:62:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:63:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:56:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
testcases/TrustedBoot.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:86:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:91:15: C0117: Consider changing "not 'trusted mode on' in data" to "'trusted mode on' not in data" (unnecessary-negation)
testcases/TrustedBoot.py:92:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/TrustedBoot.py:94:15: C0117: Consider changing "not 'trusted mode off' in data" to "'trusted mode off' not in data" (unnecessary-negation)
testcases/TrustedBoot.py:95:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/TrustedBoot.py:98:20: E0601: Using variable 'part_list' before assignment (used-before-assignment)
testcases/TrustedBoot.py:99:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:101:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/TrustedBoot.py:101:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:102:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:104:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/TrustedBoot.py:105:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:108:11: C0117: Consider changing "not msg in data" to "msg not in data" (unnecessary-negation)
testcases/TrustedBoot.py:109:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/TrustedBoot.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:123:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:124:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:125:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:126:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:127:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:128:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:129:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:130:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/TrustedBoot.py:132:4: R1711: Useless return at end of function or method (useless-return)
testcases/TrustedBoot.py:78:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/TrustedBoot.py:148:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/TrustedBoot.py:147:8: W0612: Unused variable 'conf' (unused-variable)
testcases/TrustedBoot.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:150:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:159:0: C0103: Class name "FunctionalTPM_PolicyOFF" doesn't conform to PascalCase naming style (invalid-name)
testcases/TrustedBoot.py:167:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/TrustedBoot.py:166:8: W0612: Unused variable 'conf' (unused-variable)
testcases/TrustedBoot.py:169:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:169:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:183:0: C0103: Class name "FunctionalTPM_PolicyON" doesn't conform to PascalCase naming style (invalid-name)
testcases/TrustedBoot.py:191:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/TrustedBoot.py:190:8: W0612: Unused variable 'conf' (unused-variable)
testcases/TrustedBoot.py:193:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:193:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:206:0: C0103: Class name "NoFunctionalTPM_PolicyOFF" doesn't conform to PascalCase naming style (invalid-name)
testcases/TrustedBoot.py:214:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/TrustedBoot.py:213:8: W0612: Unused variable 'conf' (unused-variable)
testcases/TrustedBoot.py:216:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:216:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:230:0: C0103: Class name "NoFunctionalTPM_PolicyON" doesn't conform to PascalCase naming style (invalid-name)
testcases/TrustedBoot.py:238:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/TrustedBoot.py:237:8: W0612: Unused variable 'conf' (unused-variable)
testcases/TrustedBoot.py:240:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:240:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/TrustedBoot.py:259:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/TrustedBoot.py:51:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/TrustedBoot.py:44:0: W0611: Unused import pexpect (unused-import)
testcases/TrustedBoot.py:48:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/TrustedBoot.py:49:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
testcases/TrustedBoot.py:51:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestKernelArg
testcases/OpTestKernelArg.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/OpTestKernelArg.py:1:0: C0103: Module name "OpTestKernelArg" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestKernelArg.py:43:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestKernelArg.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestKernelArg.py:51:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
************* Module testcases.DeviceTreeValidation
testcases/DeviceTreeValidation.py:108:27: W1401: Anomalous backslash in string: '\('. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeValidation.py:108:31: W1401: Anomalous backslash in string: '\)'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/DeviceTreeValidation.py:1:0: C0103: Module name "DeviceTreeValidation" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:44:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/DeviceTreeValidation.py:58:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DeviceTreeValidation.py:63:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:64:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:65:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:70:34: C0103: Argument name "L" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:73:34: C0103: Argument name "L" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:76:29: C0103: Argument name "L" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:79:29: C0103: Argument name "L" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:106:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/DeviceTreeValidation.py:101:14: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:101:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:115:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/DeviceTreeValidation.py:113:14: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:113:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:117:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:121:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:124:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/DeviceTreeValidation.py:122:14: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:122:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:126:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:130:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:150:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/DeviceTreeValidation.py:150:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:140:12: W0612: Unused variable 'has_stop_inst' (unused-variable)
testcases/DeviceTreeValidation.py:187:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:233:16: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/DeviceTreeValidation.py:203:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:203:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:220:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/DeviceTreeValidation.py:220:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:223:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/DeviceTreeValidation.py:223:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:227:25: W1310: Using formatting for a string that does not have any interpolated variables (format-string-without-interpolation)
testcases/DeviceTreeValidation.py:227:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:241:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:250:16: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:250:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:256:16: W0707: Consider explicitly re-raising using 'except CommandFailed as exc' and 'raise OpTestError('DT: Firmware version property is missing') from exc' (raise-missing-from)
testcases/DeviceTreeValidation.py:258:16: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:258:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:260:18: E1101: Instance of 'DeviceTreeValidation' has no 'c' member (no-member)
testcases/DeviceTreeValidation.py:260:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:263:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:265:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:265:4: R0914: Too many local variables (27/15) (too-many-locals)
testcases/DeviceTreeValidation.py:295:47: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:297:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:297:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:299:12: C0206: Consider iterating with .items() (consider-using-dict-items)
testcases/DeviceTreeValidation.py:306:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:306:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:308:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:308:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:321:48: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:323:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:323:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:326:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:326:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:329:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:329:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:331:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:331:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:333:23: C0121: Comparison 'ignore_dict.get(str(prop)) != None' should be 'ignore_dict.get(str(prop)) is not None' (singleton-comparison)
testcases/DeviceTreeValidation.py:343:23: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/DeviceTreeValidation.py:345:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:351:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:351:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:357:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:366:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/DeviceTreeValidation.py:366:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:369:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/DeviceTreeValidation.py:369:39: W1308: Duplicate string formatting argument 'unified_failed_props', consider passing as named argument (duplicate-string-formatting-argument)
testcases/DeviceTreeValidation.py:265:4: R0912: Too many branches (16/12) (too-many-branches)
testcases/DeviceTreeValidation.py:265:4: R0915: Too many statements (54/50) (too-many-statements)
testcases/DeviceTreeValidation.py:398:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DeviceTreeValidation.py:398:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/DeviceTreeValidation.py:403:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DeviceTreeValidation.py:409:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:424:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:430:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:412:8: W0612: Unused variable 'system_state' (unused-variable)
testcases/DeviceTreeValidation.py:413:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/DeviceTreeValidation.py:435:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DeviceTreeValidation.py:441:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:450:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:456:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/DeviceTreeValidation.py:444:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/DeviceTreeValidation.py:45:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.Exceptions.CommandFailed", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.OpTestQemu"  (wrong-import-order)
testcases/DeviceTreeValidation.py:43:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/DeviceTreeValidation.py:45:0: W0611: Unused import logging (unused-import)
************* Module testcases.EPOW
testcases/EPOW.py:260:0: C0301: Line too long (108/100) (line-too-long)
testcases/EPOW.py:288:5: W0511: TODO: s.addTest(EPOW3CRITICAL()) (fixme)
testcases/EPOW.py:80:31: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/EPOW.py:1:0: C0103: Module name "EPOW" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:47:0: W0404: Reimport 'subprocess' (imported line 46) (reimported)
testcases/EPOW.py:50:0: E0401: Unable to import 'pexpect' (import-error)
testcases/EPOW.py:65:0: C0115: Missing class docstring (missing-class-docstring)
testcases/EPOW.py:68:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:69:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:70:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:71:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:65:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
testcases/EPOW.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:79:8: C0103: Variable name "fsp_MTM" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:80:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:89:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:92:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:99:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:101:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:104:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:112:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/EPOW.py:118:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:122:8: C0103: Variable name "searchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:123:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/EPOW.py:129:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:132:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:140:15: R1714: Consider merging these comparisons with 'in' by using 'rc in (0, 1)'. Use a set instead if elements are hashable. (consider-using-in)
testcases/EPOW.py:141:16: W0612: Unused variable 'res' (unused-variable)
testcases/EPOW.py:144:8: W0612: Unused variable 'e' (unused-variable)
testcases/EPOW.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:151:8: C0103: Variable name "EPOW3" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:152:8: C0103: Variable name "CRITICAL" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:153:8: C0103: Variable name "EPOW3_RESET" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:154:8: C0103: Variable name "CRITICAL_RESET" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:153:8: W0612: Unused variable 'EPOW3_RESET' (unused-variable)
testcases/EPOW.py:154:8: W0612: Unused variable 'CRITICAL_RESET' (unused-variable)
testcases/EPOW.py:161:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:86:8: W0201: Attribute 'proc_gen' defined outside __init__ (attribute-defined-outside-init)
testcases/EPOW.py:149:8: W0201: Attribute 'limits' defined outside __init__ (attribute-defined-outside-init)
testcases/EPOW.py:184:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:184:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:194:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:195:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:199:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:199:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:200:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:200:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:202:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:202:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:203:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:203:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:208:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:208:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:217:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:217:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:218:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:218:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:222:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:222:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:245:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:245:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:253:8: C0103: Variable name "EPOW3" doesn't conform to snake_case naming style (invalid-name)
testcases/EPOW.py:257:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:258:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:262:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:262:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:264:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:264:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:265:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:265:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:272:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:272:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:274:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:279:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/EPOW.py:279:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/EPOW.py:248:8: W0612: Unused variable 'console' (unused-variable)
testcases/EPOW.py:270:16: W0612: Unused variable 'i' (unused-variable)
testcases/EPOW.py:284:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/EPOW.py:51:0: C0411: standard import "random" should be placed before third party import "pexpect" (wrong-import-order)
testcases/EPOW.py:56:0: C0411: standard import "unittest" should be placed before third party import "pexpect" and first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/EPOW.py:60:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/EPOW.py:58:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/EPOW.py:46:0: W0611: Unused import subprocess (unused-import)
testcases/EPOW.py:49:0: W0611: Unused import sys (unused-import)
testcases/EPOW.py:60:0: W0611: Unused import logging (unused-import)
************* Module testcases.GcovSetup
testcases/GcovSetup.py:112:0: C0301: Line too long (149/100) (line-too-long)
testcases/GcovSetup.py:122:0: C0301: Line too long (102/100) (line-too-long)
testcases/GcovSetup.py:123:0: C0301: Line too long (110/100) (line-too-long)
testcases/GcovSetup.py:126:0: C0301: Line too long (134/100) (line-too-long)
testcases/GcovSetup.py:135:0: C0301: Line too long (101/100) (line-too-long)
testcases/GcovSetup.py:137:0: C0301: Line too long (111/100) (line-too-long)
testcases/GcovSetup.py:146:0: C0301: Line too long (108/100) (line-too-long)
testcases/GcovSetup.py:1:0: C0103: Module name "GcovSetup" doesn't conform to snake_case naming style (invalid-name)
testcases/GcovSetup.py:48:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/GcovSetup.py:49:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/GcovSetup.py:53:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/GcovSetup.py:58:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:58:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:64:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
testcases/GcovSetup.py:78:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:78:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:80:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:81:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:100:55: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
testcases/GcovSetup.py:103:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
testcases/GcovSetup.py:93:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/GcovSetup.py:115:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:115:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:117:15: C0207: Use param.rsplit('=', maxsplit=1)[-1] instead (use-maxsplit-arg)
testcases/GcovSetup.py:124:15: C0207: Use param.rsplit('=', maxsplit=1)[-1] instead (use-maxsplit-arg)
testcases/GcovSetup.py:125:34: C0207: Use unset_param.split('=', maxsplit=1)[0] instead (use-maxsplit-arg)
testcases/GcovSetup.py:130:15: C0207: Use param.rsplit('=', maxsplit=1)[-1] instead (use-maxsplit-arg)
testcases/GcovSetup.py:137:20: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:137:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:140:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:140:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:143:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:143:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:148:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/GcovSetup.py:148:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:154:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:108:4: R0912: Too many branches (14/12) (too-many-branches)
testcases/GcovSetup.py:162:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/GcovSetup.py:172:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/GcovSetup.py:168:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/GcovSetup.py:169:18: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
testcases/GcovSetup.py:57:8: W0201: Attribute 'distro_name' defined outside __init__ (attribute-defined-outside-init)
testcases/GcovSetup.py:60:12: W0201: Attribute 'installer' defined outside __init__ (attribute-defined-outside-init)
testcases/GcovSetup.py:62:12: W0201: Attribute 'installer' defined outside __init__ (attribute-defined-outside-init)
************* Module testcases.OpTestOCC
testcases/OpTestOCC.py:251:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestOCC.py:35:12: W1401: Anomalous backslash in string: '\E'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:35:19: W1401: Anomalous backslash in string: '\D'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:193:45: W1401: Anomalous backslash in string: '\D'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:193:57: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:231:49: W1401: Anomalous backslash in string: '\D'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:231:61: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:273:49: W1401: Anomalous backslash in string: '\D'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:273:61: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:309:49: W1401: Anomalous backslash in string: '\D'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:309:61: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:334:53: W1401: Anomalous backslash in string: '\%'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestOCC.py:1:0: C0103: Module name "OpTestOCC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOCC.py:60:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOCC.py:66:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOCC.py:60:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
testcases/OpTestOCC.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:78:8: E1101: Instance of 'OpTestOCCBase' has no 'assertEqual' member (no-member)
testcases/OpTestOCC.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:90:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestOCC.py:91:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestOCC.py:91:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:92:12: E1101: Instance of 'OpTestOCCBase' has no 'assertTrue' member (no-member)
testcases/OpTestOCC.py:93:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:104:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestOCC.py:105:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestOCC.py:105:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:106:12: E1101: Instance of 'OpTestOCCBase' has no 'assertTrue' member (no-member)
testcases/OpTestOCC.py:107:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:117:16: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/OpTestOCC.py:124:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestOCC.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:140:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestOCC.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:162:8: W0702: No exception type(s) specified (bare-except)
testcases/OpTestOCC.py:166:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOCC.py:170:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:182:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOCC.py:193:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:193:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:225:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:226:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:231:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:231:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:251:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:267:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:268:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:273:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:273:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:302:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestOCC.py:303:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestOCC.py:303:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:304:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestOCC.py:305:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:309:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:309:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:294:12: W0612: Unused variable 'count' (unused-variable)
testcases/OpTestOCC.py:321:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOCC.py:321:0: C0103: Class name "OCCRESET_FSP" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestOCC.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:323:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOCC.py:334:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOCC.py:334:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOCC.py:327:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestOCC.py:337:20: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestOCC.py:340:16: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestOCC.py:350:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOCC.py:350:0: C0103: Class name "OCC_RESET" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestOCC.py:351:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:351:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOCC.py:355:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:359:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOCC.py:46:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestOCC.py:55:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "testcases.OpTestEM"  (wrong-import-order)
testcases/OpTestOCC.py:49:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestOCC.py:39:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestOCC.py:40:0: W0611: Unused import re (unused-import)
testcases/OpTestOCC.py:41:0: W0611: Unused import sys (unused-import)
testcases/OpTestOCC.py:42:0: W0611: Unused import os (unused-import)
testcases/OpTestOCC.py:49:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestOCC.py:55:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestSwitchEndianSyscall
testcases/OpTestSwitchEndianSyscall.py:127:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestSwitchEndianSyscall.py:143:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestSwitchEndianSyscall.py:1:0: C0103: Module name "OpTestSwitchEndianSyscall" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSwitchEndianSyscall.py:69:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSwitchEndianSyscall.py:70:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSwitchEndianSyscall.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSwitchEndianSyscall.py:72:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSwitchEndianSyscall.py:94:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestSwitchEndianSyscall.py:98:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
testcases/OpTestSwitchEndianSyscall.py:106:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSwitchEndianSyscall.py:107:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSwitchEndianSyscall.py:109:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestSwitchEndianSyscall.py:121:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSwitchEndianSyscall.py:127:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSwitchEndianSyscall.py:123:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestSwitchEndianSyscall.py:140:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestSwitchEndianSyscall.py:143:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestSwitchEndianSyscall.py:143:12: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestSwitchEndianSyscall.py:74:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestSwitchEndianSyscall.py:55:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestError.OpTestError", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestSwitchEndianSyscall.py:44:0: W0611: Unused import time (unused-import)
testcases/OpTestSwitchEndianSyscall.py:45:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestSwitchEndianSyscall.py:46:0: W0611: Unused import re (unused-import)
testcases/OpTestSwitchEndianSyscall.py:52:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpTestSwitchEndianSyscall.py:55:0: W0611: Unused import logging (unused-import)
************* Module testcases.SbePassThrough
testcases/SbePassThrough.py:1:0: C0103: Module name "SbePassThrough" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:47:0: C0115: Missing class docstring (missing-class-docstring)
testcases/SbePassThrough.py:50:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:51:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:52:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:66:12: C0103: Attribute name "DOORBELL_REG" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:47:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
testcases/SbePassThrough.py:56:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SbePassThrough.py:63:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SbePassThrough.py:72:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SbePassThrough.py:75:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:83:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/SbePassThrough.py:76:12: W0612: Unused variable 'i' (unused-variable)
testcases/SbePassThrough.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SbePassThrough.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/SbePassThrough.py:92:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/SbePassThrough.py:105:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/SbePassThrough.py:102:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/SbePassThrough.py:102:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:104:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/SbePassThrough.py:104:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:106:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/SbePassThrough.py:106:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:108:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/SbePassThrough.py:108:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:114:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:118:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/SbePassThrough.py:128:20: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/SbePassThrough.py:111:12: W0612: Unused variable 'i' (unused-variable)
testcases/SbePassThrough.py:58:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:66:12: W0201: Attribute 'DOORBELL_REG' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:67:8: W0201: Attribute 'os_level' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:68:8: W0201: Attribute 'chips' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:71:8: W0201: Attribute 'prd_log_cmd' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:77:12: W0201: Attribute 'data' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:94:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/SbePassThrough.py:42:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/SbePassThrough.py:40:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
testcases/SbePassThrough.py:42:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpenBMCReset
testcases/OpenBMCReset.py:1:0: C0103: Module name "OpenBMCReset" doesn't conform to snake_case naming style (invalid-name)
testcases/OpenBMCReset.py:39:0: W0404: Reimport 'subprocess' (imported line 38) (reimported)
testcases/OpenBMCReset.py:61:4: C0202: Class method setUpClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpenBMCReset.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:76:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpenBMCReset.py:80:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpenBMCReset.py:80:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpenBMCReset.py:82:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpenBMCReset.py:95:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpenBMCReset.py:105:4: C0202: Class method setUpClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpenBMCReset.py:117:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:120:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpenBMCReset.py:124:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpenBMCReset.py:124:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpenBMCReset.py:126:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpenBMCReset.py:137:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpenBMCReset.py:147:4: C0202: Class method setUpClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpenBMCReset.py:159:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:162:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpenBMCReset.py:162:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpenBMCReset.py:166:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpenBMCReset.py:166:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpenBMCReset.py:202:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpenBMCReset.py:199:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpenBMCReset.py:168:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpenBMCReset.py:205:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpenBMCReset.py:51:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpenBMCReset.py:37:0: W0611: Unused import time (unused-import)
testcases/OpenBMCReset.py:38:0: W0611: Unused import subprocess (unused-import)
testcases/OpenBMCReset.py:40:0: W0611: Unused import re (unused-import)
testcases/OpenBMCReset.py:41:0: W0611: Unused import sys (unused-import)
testcases/OpenBMCReset.py:47:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/OpenBMCReset.py:51:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestPCI
testcases/OpTestPCI.py:286:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestPCI.py:322:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestPCI.py:627:0: C0301: Line too long (123/100) (line-too-long)
testcases/OpTestPCI.py:632:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestPCI.py:727:0: C0301: Line too long (128/100) (line-too-long)
testcases/OpTestPCI.py:728:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestPCI.py:732:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestPCI.py:339:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPCI.py:349:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPCI.py:360:32: W1401: Anomalous backslash in string: '\['. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPCI.py:360:47: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPCI.py:416:44: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestPCI.py:1:0: C0103: Module name "OpTestPCI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:51:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestPCI.py:63:0: C0103: Constant name "skiroot_done" doesn't conform to UPPER_CASE naming style (invalid-name)
testcases/OpTestPCI.py:64:0: C0103: Constant name "host_done" doesn't conform to UPPER_CASE naming style (invalid-name)
testcases/OpTestPCI.py:65:0: C0103: Constant name "skiroot_lspci" doesn't conform to UPPER_CASE naming style (invalid-name)
testcases/OpTestPCI.py:66:0: C0103: Constant name "host_lspci" doesn't conform to UPPER_CASE naming style (invalid-name)
testcases/OpTestPCI.py:67:0: C0103: Constant name "reset_console" doesn't conform to UPPER_CASE naming style (invalid-name)
testcases/OpTestPCI.py:106:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestPCI.py:106:8: W0612: Unused variable 'e' (unused-variable)
testcases/OpTestPCI.py:116:8: W0602: Using global for 'skiroot_done' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:117:8: W0602: Using global for 'host_done' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:118:8: W0602: Using global for 'skiroot_lspci' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:119:8: W0602: Using global for 'host_lspci' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:120:8: W0602: Using global for 'reset_console' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:141:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:153:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestPCI.py:159:8: W0602: Using global for 'reset_console' but no assignment is done (global-variable-not-assigned)
testcases/OpTestPCI.py:224:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
testcases/OpTestPCI.py:226:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:226:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:212:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestPCI.py:230:25: C0103: Argument name "listA" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:231:25: C0103: Argument name "listA_name" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:232:25: C0103: Argument name "listB" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:233:25: C0103: Argument name "listB_name" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:244:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:244:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:267:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:268:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:269:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:270:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:283:15: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/OpTestPCI.py:285:33: E1305: Too many arguments for format string (too-many-format-args)
testcases/OpTestPCI.py:318:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:318:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:319:15: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/OpTestPCI.py:343:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:343:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:346:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:346:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:353:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:353:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:356:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:356:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:364:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:364:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:370:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:370:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:373:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:373:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:375:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:340:8: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestPCI.py:383:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:402:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:442:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/OpTestPCI.py:434:8: W0603: Using the global statement (global-statement)
testcases/OpTestPCI.py:451:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:452:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:454:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:454:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:459:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:463:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:465:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:467:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:471:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:473:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:473:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:477:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:481:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:484:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:491:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:495:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:498:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:420:4: R0915: Too many statements (56/50) (too-many-statements)
testcases/OpTestPCI.py:458:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestPCI.py:500:4: R0914: Too many local variables (16/15) (too-many-locals)
testcases/OpTestPCI.py:516:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:516:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:518:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:526:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:537:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:538:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:540:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:542:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:542:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:545:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:550:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:556:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:566:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:500:4: R0915: Too many statements (51/50) (too-many-statements)
testcases/OpTestPCI.py:522:8: W0612: Unused variable 'slot_list' (unused-variable)
testcases/OpTestPCI.py:541:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestPCI.py:568:4: R0914: Too many local variables (18/15) (too-many-locals)
testcases/OpTestPCI.py:592:8: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestPCI.py:592:8: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
testcases/OpTestPCI.py:637:12: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPCI.py:638:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:640:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:644:12: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestPCI.py:645:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:648:8: C0103: Function name "devicesLinked" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:662:8: C0103: Function name "optimalSpeed" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:672:8: C0103: Function name "optimalWidth" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:685:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:693:8: C0103: Function name "subLinkInfo" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestPCI.py:694:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:702:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:710:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:722:38: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:722:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:727:48: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:730:51: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:739:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:739:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:740:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestPCI.py:740:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestPCI.py:568:4: R0915: Too many statements (102/50) (too-many-statements)
testcases/OpTestPCI.py:715:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
testcases/OpTestPCI.py:750:4: W0221: Number of parameters was 3 in 'OpClassPCI.setUpClass' and is now 1 in overriding 'PCISkirootSoftboot.setUpClass' method (arguments-differ)
testcases/OpTestPCI.py:762:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:764:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:772:4: W0221: Number of parameters was 3 in 'OpClassPCI.setUpClass' and is now 1 in overriding 'PCISkirootHardboot.setUpClass' method (arguments-differ)
testcases/OpTestPCI.py:779:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:781:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:789:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:791:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:799:4: W0221: Number of parameters was 3 in 'OpClassPCI.setUpClass' and is now 1 in overriding 'PCIHostSoftboot.setUpClass' method (arguments-differ)
testcases/OpTestPCI.py:811:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:813:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:821:4: W0221: Number of parameters was 3 in 'OpClassPCI.setUpClass' and is now 1 in overriding 'PCIHostHardboot.setUpClass' method (arguments-differ)
testcases/OpTestPCI.py:829:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:831:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:839:4: W0221: Number of parameters was 3 in 'OpClassPCI.setUpClass' and is now 1 in overriding 'PCIHost.setUpClass' method (arguments-differ)
testcases/OpTestPCI.py:842:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestPCI.py:844:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestPCI.py:52:0: C0411: standard import "time" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestPCI.py:53:0: C0411: standard import "re" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestPCI.py:54:0: C0411: standard import "difflib" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestPCI.py:55:0: C0411: standard import "distutils.version.LooseVersion" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestPCI.py:50:0: W0611: Unused import logging (unused-import)
testcases/OpTestPCI.py:51:0: W0611: Unused import pexpect (unused-import)
testcases/OpTestPCI.py:60:0: W0611: Unused UnexpectedCase imported from common.Exceptions (unused-import)
************* Module testcases.InstallUbuntu
testcases/InstallUbuntu.py:72:0: C0301: Line too long (192/100) (line-too-long)
testcases/InstallUbuntu.py:177:0: C0301: Line too long (110/100) (line-too-long)
testcases/InstallUbuntu.py:178:0: C0301: Line too long (131/100) (line-too-long)
testcases/InstallUbuntu.py:209:0: C0301: Line too long (109/100) (line-too-long)
testcases/InstallUbuntu.py:169:39: W0511: FIXME :) (fixme)
testcases/InstallUbuntu.py:242:13: W0511: FIXME: looping forever isn't ideal (fixme)
testcases/InstallUbuntu.py:88:33: W1401: Anomalous backslash in string: '\*'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/InstallUbuntu.py:88:37: W1401: Anomalous backslash in string: '\s'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/InstallUbuntu.py:88:51: W1401: Anomalous backslash in string: '\*'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/InstallUbuntu.py:88:55: W1401: Anomalous backslash in string: '\s'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/InstallUbuntu.py:1:0: C0103: Module name "InstallUbuntu" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:33:0: E0401: Unable to import 'pexpect' (import-error)
testcases/InstallUbuntu.py:45:0: C0115: Missing class docstring (missing-class-docstring)
testcases/InstallUbuntu.py:48:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:49:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:50:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:51:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallUbuntu.py:53:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:57:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:55:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/InstallUbuntu.py:60:0: C0115: Missing class docstring (missing-class-docstring)
testcases/InstallUbuntu.py:64:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:65:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:66:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:67:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallUbuntu.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallUbuntu.py:96:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:96:4: R0914: Too many local variables (16/15) (too-many-locals)
testcases/InstallUbuntu.py:108:8: C0103: Variable name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallUbuntu.py:131:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:133:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:150:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:151:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:152:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:153:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:157:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:177:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:180:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:199:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/InstallUbuntu.py:187:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:191:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:195:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:200:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallUbuntu.py:200:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:215:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallUbuntu.py:215:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:216:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallUbuntu.py:216:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:217:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallUbuntu.py:217:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallUbuntu.py:96:4: R0912: Too many branches (16/12) (too-many-branches)
testcases/InstallUbuntu.py:96:4: R0915: Too many statements (108/50) (too-many-statements)
testcases/InstallUbuntu.py:159:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/InstallUbuntu.py:34:0: C0411: standard import "os" should be placed before third party import "pexpect" (wrong-import-order)
testcases/InstallUbuntu.py:40:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestInstallUtil"  (wrong-import-order)
testcases/InstallUbuntu.py:40:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpalMsglog
testcases/OpalMsglog.py:120:29: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpalMsglog.py:1:0: C0103: Module name "OpalMsglog" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:40:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalMsglog.py:43:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:44:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:45:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:41:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalMsglog.py:41:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalMsglog.py:49:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalMsglog.py:50:8: E1101: Instance of 'OpalMsglog' has no 'setup_test' member (no-member)
testcases/OpalMsglog.py:119:26: E1101: Instance of 'OpalMsglog' has no 'c' member (no-member)
testcases/OpalMsglog.py:127:12: E1101: Instance of 'OpalMsglog' has no 'assertTrue' member (no-member)
testcases/OpalMsglog.py:128:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalMsglog.py:130:15: R0123: In 'cf.exitcode is 1', use '==' when comparing constant literals not 'is' ('cf.exitcode == 1') (literal-comparison)
testcases/OpalMsglog.py:130:36: R0123: In 'len(cf.output) is 0', use '==' when comparing constant literals not 'is' ('len(cf.output) == 0') (literal-comparison)
testcases/OpalMsglog.py:49:4: R0915: Too many statements (57/50) (too-many-statements)
testcases/OpalMsglog.py:137:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalMsglog.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalMsglog.py:140:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalMsglog.py:143:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalMsglog.py:144:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalMsglog.py:146:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalMsglog.py:36:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
************* Module testcases.IpmiTorture
testcases/IpmiTorture.py:226:0: C0301: Line too long (103/100) (line-too-long)
testcases/IpmiTorture.py:1:0: C0103: Module name "IpmiTorture" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:38:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:41:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:46:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:53:30: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:55:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:59:12: W0702: No exception type(s) specified (bare-except)
testcases/IpmiTorture.py:66:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:69:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:75:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:76:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:66:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/IpmiTorture.py:67:4: R0913: Too many arguments (6/5) (too-many-arguments)
testcases/IpmiTorture.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:83:33: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:86:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:90:12: W0702: No exception type(s) specified (bare-except)
testcases/IpmiTorture.py:85:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:97:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:100:8: C0103: Attribute name "threadID" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:105:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:112:33: C0103: Argument name "threadName" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:119:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:131:12: W0702: No exception type(s) specified (bare-except)
testcases/IpmiTorture.py:128:20: W0702: No exception type(s) specified (bare-except)
testcases/IpmiTorture.py:112:33: W0613: Unused argument 'threadName' (unused-argument)
testcases/IpmiTorture.py:112:45: W0613: Unused argument 't' (unused-argument)
testcases/IpmiTorture.py:113:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:139:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:142:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:143:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:144:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:148:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:149:8: E1101: Instance of 'IpmiInterfaceTorture' has no 'setup_test' member (no-member)
testcases/IpmiTorture.py:158:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:163:24: E1101: Instance of 'IpmiInterfaceTorture' has no 'test' member (no-member)
testcases/IpmiTorture.py:166:11: E1101: Instance of 'IpmiInterfaceTorture' has no 'test' member (no-member)
testcases/IpmiTorture.py:176:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:188:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:150:8: W0201: Attribute 'thread_list' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:198:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:201:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:202:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:203:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:206:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:215:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:220:11: E1101: Instance of 'ConsoleIpmiTorture' has no 'test' member (no-member)
testcases/IpmiTorture.py:223:24: E1101: Instance of 'ConsoleIpmiTorture' has no 'test' member (no-member)
testcases/IpmiTorture.py:228:8: W0101: Unreachable code (unreachable)
testcases/IpmiTorture.py:234:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IpmiTorture.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:240:29: E1101: Instance of 'ConsoleIpmiTorture' has no 'test' member (no-member)
testcases/IpmiTorture.py:244:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:244:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/IpmiTorture.py:245:8: E1101: Instance of 'ConsoleIpmiTorture' has no 'setup_test' member (no-member)
testcases/IpmiTorture.py:209:8: W0201: Attribute 'thread_list' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:255:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:256:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:257:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:259:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:262:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:263:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:264:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:266:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:269:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:270:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:271:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:273:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:276:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:277:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:278:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:280:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:283:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:284:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:285:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:287:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:290:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IpmiTorture.py:291:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IpmiTorture.py:292:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/IpmiTorture.py:294:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
************* Module testcases.OpTestEEH
testcases/OpTestEEH.py:107:0: C0301: Line too long (109/100) (line-too-long)
testcases/OpTestEEH.py:343:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestEEH.py:408:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestEEH.py:410:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestEEH.py:446:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEEH.py:448:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestEEH.py:506:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEEH.py:519:0: C0301: Line too long (119/100) (line-too-long)
testcases/OpTestEEH.py:532:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestEEH.py:537:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestEEH.py:593:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEEH.py:606:0: C0301: Line too long (122/100) (line-too-long)
testcases/OpTestEEH.py:141:57: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestEEH.py:153:27: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestEEH.py:1:0: C0103: Module name "OpTestEEH" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:39:0: W0404: Reimport 'subprocess' (imported line 38) (reimported)
testcases/OpTestEEH.py:63:35: W0621: Redefining name 'log' from outer scope (line 52) (redefined-outer-name)
testcases/OpTestEEH.py:69:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:77:35: W0621: Redefining name 'log' from outer scope (line 52) (redefined-outer-name)
testcases/OpTestEEH.py:83:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:91:35: W0621: Redefining name 'log' from outer scope (line 52) (redefined-outer-name)
testcases/OpTestEEH.py:97:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:100:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEEH.py:121:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:124:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:125:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:128:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:128:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:181:12: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/OpTestEEH.py:169:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:169:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:186:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestEEH.py:180:12: W0612: Unused variable 'j' (unused-variable)
testcases/OpTestEEH.py:214:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:214:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:218:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:223:4: R0913: Too many arguments (7/5) (too-many-arguments)
testcases/OpTestEEH.py:236:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestEEH.py:239:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:239:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:223:44: W0613: Unused argument 'con' (unused-argument)
testcases/OpTestEEH.py:242:4: R0913: Too many arguments (6/5) (too-many-arguments)
testcases/OpTestEEH.py:267:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:269:8: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestEEH.py:307:12: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/OpTestEEH.py:296:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:296:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:312:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestEEH.py:306:12: W0612: Unused variable 'j' (unused-variable)
testcases/OpTestEEH.py:315:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:325:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestEEH.py:324:12: W0101: Unreachable code (unreachable)
testcases/OpTestEEH.py:318:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestEEH.py:320:16: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestEEH.py:321:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestEEH.py:328:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:338:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestEEH.py:337:12: W0101: Unreachable code (unreachable)
testcases/OpTestEEH.py:331:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestEEH.py:333:16: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestEEH.py:334:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestEEH.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:383:8: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:369:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestEEH.py:374:12: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestEEH.py:392:0: C0103: Class name "OpTestEEHbasic_fenced_phb" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEEH.py:404:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:404:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:408:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:409:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:410:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:414:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:414:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:421:0: C0103: Class name "OpTestEEHmax_fenced_phb" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEEH.py:438:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:438:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:446:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:447:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:448:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:453:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:453:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:459:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:460:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:467:0: C0103: Class name "OpTestEEHbasic_frozen_pe" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEEH.py:489:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:489:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:501:8: C0103: Variable name "ERROR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:518:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:519:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:531:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:532:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:536:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:537:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:540:28: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:541:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:508:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
testcases/OpTestEEH.py:544:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:545:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:547:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:548:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:508:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
testcases/OpTestEEH.py:553:0: C0103: Class name "OpTestEEHmax_frozen_pe" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEEH.py:573:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:573:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:588:8: C0103: Variable name "ERROR" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEEH.py:605:24: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:606:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:618:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:619:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:622:28: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
testcases/OpTestEEH.py:623:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:624:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:628:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:629:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:595:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
testcases/OpTestEEH.py:632:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:632:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:634:32: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEEH.py:634:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEEH.py:573:4: R0912: Too many branches (13/12) (too-many-branches)
testcases/OpTestEEH.py:595:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
testcases/OpTestEEH.py:639:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEEH.py:50:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestEEH.py:38:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestEEH.py:41:0: W0611: Unused import sys (unused-import)
testcases/OpTestEEH.py:42:0: W0611: Unused import os (unused-import)
testcases/OpTestEEH.py:50:0: W0611: Unused import logging (unused-import)
************* Module testcases.CpuHotPlug
testcases/CpuHotPlug.py:35:1: W0511: FIXME: Add a smaller version of this test to the normal host test suite (fixme)
testcases/CpuHotPlug.py:36:1: W0511: FIXME: Work out a way to add this to the skiroot test suite. (fixme)
testcases/CpuHotPlug.py:1:0: C0103: Module name "CpuHotPlug" doesn't conform to snake_case naming style (invalid-name)
testcases/CpuHotPlug.py:58:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/CpuHotPlug.py:59:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/CpuHotPlug.py:60:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/CpuHotPlug.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/CpuHotPlug.py:62:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/CpuHotPlug.py:70:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/CpuHotPlug.py:70:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/CpuHotPlug.py:72:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/CpuHotPlug.py:74:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/CpuHotPlug.py:78:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/CpuHotPlug.py:64:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/CpuHotPlug.py:67:8: W0201: Attribute 'num_avail_cores' defined outside __init__ (attribute-defined-outside-init)
testcases/CpuHotPlug.py:43:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/CpuHotPlug.py:43:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestEM
testcases/OpTestEM.py:114:0: C0301: Line too long (141/100) (line-too-long)
testcases/OpTestEM.py:138:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestEM.py:175:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestEM.py:177:0: C0301: Line too long (124/100) (line-too-long)
testcases/OpTestEM.py:220:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestEM.py:237:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEM.py:241:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEM.py:251:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEM.py:255:0: C0301: Line too long (114/100) (line-too-long)
testcases/OpTestEM.py:299:0: C0301: Line too long (118/100) (line-too-long)
testcases/OpTestEM.py:437:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEM.py:528:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestEM.py:602:0: C0301: Line too long (135/100) (line-too-long)
testcases/OpTestEM.py:662:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEM.py:605:9: W0511: TODO: Check the expected idle states (/proc/device-tree/ibm,opal/power-mgt) (fixme)
testcases/OpTestEM.py:573:34: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestEM.py:1:0: C0103: Module name "OpTestEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:51:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/OpTestEM.py:59:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:62:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:63:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:64:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:60:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:70:11: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:73:13: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:77:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestEM.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:80:4: C0103: Method name "tearDown" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:81:11: C0121: Comparison 'self.c == None' should be 'self.c is None' (singleton-comparison)
testcases/OpTestEM.py:89:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:101:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:138:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:159:8: E1101: Instance of 'OpTestEM' has no 'assertEqual' member (no-member)
testcases/OpTestEM.py:160:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:172:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEM.py:172:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:174:8: E1101: Instance of 'OpTestEM' has no 'assertAlmostEqual' member (no-member)
testcases/OpTestEM.py:176:8: E1101: Instance of 'OpTestEM' has no 'assertAlmostEqual' member (no-member)
testcases/OpTestEM.py:179:8: E1101: Instance of 'OpTestEM' has no 'assertAlmostEqual' member (no-member)
testcases/OpTestEM.py:189:15: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
testcases/OpTestEM.py:198:15: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
testcases/OpTestEM.py:206:16: E1101: Instance of 'OpTestEM' has no 'assertAlmostEqual' member (no-member)
testcases/OpTestEM.py:207:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:213:8: E1101: Instance of 'OpTestEM' has no 'assertTrue' member (no-member)
testcases/OpTestEM.py:214:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:220:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:229:8: E1101: Instance of 'OpTestEM' has no 'assertEqual' member (no-member)
testcases/OpTestEM.py:230:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:237:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:238:11: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:239:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:240:13: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:241:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:251:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:252:11: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:253:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:254:13: E1101: Instance of 'OpTestEM' has no 'test' member (no-member)
testcases/OpTestEM.py:255:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:265:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:267:8: E1101: Instance of 'OpTestEM' has no 'assertEqual' member (no-member)
testcases/OpTestEM.py:267:44: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:273:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:275:8: E1101: Instance of 'OpTestEM' has no 'assertEqual' member (no-member)
testcases/OpTestEM.py:276:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:286:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:288:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:290:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:292:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:299:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:304:0: C0103: Class name "slw_info" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:311:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestEM.py:313:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:313:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:329:8: W0612: Unused variable 'cf' (unused-variable)
testcases/OpTestEM.py:333:0: C0103: Class name "cpu_freq_states_host" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:346:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestEM.py:351:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:351:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:365:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:381:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestEM.py:377:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpTestEM.py:384:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:384:0: C0103: Class name "cpu_freq_states_skiroot" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:390:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:390:0: C0103: Class name "cpu_freq_gov_host" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:393:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestEM.py:405:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestEM.py:405:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:421:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:425:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:444:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:444:0: C0103: Class name "cpu_freq_gov_skiroot" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:450:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:450:0: C0103: Class name "cpu_boost_freqs_host" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:453:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestEM.py:455:4: R0914: Too many local variables (18/15) (too-many-locals)
testcases/OpTestEM.py:465:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:480:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:492:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:494:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestEM.py:498:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestEM.py:498:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:514:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestEM.py:530:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEM.py:530:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:531:43: W0631: Using possibly undefined loop variable 'freq' (undefined-loop-variable)
testcases/OpTestEM.py:459:8: W0612: Unused variable 'pstate_min' (unused-variable)
testcases/OpTestEM.py:459:20: W0612: Unused variable 'pstate_max' (unused-variable)
testcases/OpTestEM.py:459:32: W0612: Unused variable 'pstate_nom' (unused-variable)
testcases/OpTestEM.py:534:0: C0103: Class name "cpu_idle_states_host" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:546:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestEM.py:548:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:548:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEM.py:548:4: R0914: Too many local variables (20/15) (too-many-locals)
testcases/OpTestEM.py:568:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:577:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestEM.py:600:12: R1730: Consider using 'nrcpus = min(nrcpus, 60)' instead of unnecessary if block (consider-using-min-builtin)
testcases/OpTestEM.py:602:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:608:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestEM.py:608:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:613:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/OpTestEM.py:627:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:630:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:645:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:648:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:651:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEM.py:651:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:653:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEM.py:653:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:660:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestEM.py:660:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:662:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestEM.py:668:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestEM.py:548:4: R0912: Too many branches (13/12) (too-many-branches)
testcases/OpTestEM.py:548:4: R0915: Too many statements (66/50) (too-many-statements)
testcases/OpTestEM.py:671:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEM.py:671:0: C0103: Class name "cpu_idle_states_skiroot" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestEM.py:677:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:687:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEM.py:54:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestIPMI.IPMIConsoleState", "common.OpTestQemu", "testcases.DeviceTreeValidation.DeviceTreeValidation"  (wrong-import-order)
testcases/OpTestEM.py:40:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestEM.py:50:0: W0611: Unused IPMIConsoleState imported from common.OpTestIPMI (unused-import)
testcases/OpTestEM.py:54:0: W0611: Unused import logging (unused-import)
************* Module testcases.Petitbooti18n
testcases/Petitbooti18n.py:52:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/Petitbooti18n.py:1:0: C0103: Module name "Petitbooti18n" doesn't conform to snake_case naming style (invalid-name)
testcases/Petitbooti18n.py:33:0: E0401: Unable to import 'pexpect' (import-error)
testcases/Petitbooti18n.py:38:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/Petitbooti18n.py:44:0: C0115: Missing class docstring (missing-class-docstring)
testcases/Petitbooti18n.py:47:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/Petitbooti18n.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Petitbooti18n.py:49:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/Petitbooti18n.py:91:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/Petitbooti18n.py:60:8: W0612: Unused variable 'rc' (unused-variable)
testcases/Petitbooti18n.py:34:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/Petitbooti18n.py:39:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestMambo"  (wrong-import-order)
testcases/Petitbooti18n.py:39:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestEnergyScale
testcases/OpTestEnergyScale.py:113:0: C0301: Line too long (121/100) (line-too-long)
testcases/OpTestEnergyScale.py:126:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestEnergyScale.py:170:0: C0301: Line too long (120/100) (line-too-long)
testcases/OpTestEnergyScale.py:176:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestEnergyScale.py:183:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestEnergyScale.py:225:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestEnergyScale.py:238:0: C0301: Line too long (107/100) (line-too-long)
testcases/OpTestEnergyScale.py:1:0: C0103: Module name "OpTestEnergyScale" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:39:0: W0404: Reimport 'subprocess' (imported line 38) (reimported)
testcases/OpTestEnergyScale.py:51:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEnergyScale.py:54:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:55:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:56:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:58:8: C0103: Attribute name "cv_PLATFORM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:124:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:180:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:180:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:235:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:235:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:263:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestEnergyScale.py:264:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:264:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestEnergyScale.py:288:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:295:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestEnergyScale.py:37:0: W0611: Unused import time (unused-import)
testcases/OpTestEnergyScale.py:38:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestEnergyScale.py:40:0: W0611: Unused import re (unused-import)
testcases/OpTestEnergyScale.py:41:0: W0611: Unused import sys (unused-import)
************* Module testcases.OpTestMamboSim
testcases/OpTestMamboSim.py:1:0: C0103: Module name "OpTestMamboSim" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMamboSim.py:39:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestMamboSim.py:44:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/OpTestMamboSim.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestMamboSim.py:71:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMamboSim.py:71:4: R0914: Too many local variables (19/15) (too-many-locals)
testcases/OpTestMamboSim.py:80:8: C0103: Variable name "target_OS_command_1" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestMamboSim.py:82:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:82:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:84:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:84:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:92:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:92:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:94:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:94:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:121:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:125:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:129:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:133:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:137:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:141:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:148:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:148:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:150:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:150:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:153:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:153:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:155:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:155:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:158:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:158:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:160:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:160:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:163:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:163:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:165:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:165:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:168:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:168:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:170:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:170:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:173:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:173:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:175:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:175:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:186:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:186:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:189:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:189:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:192:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:192:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:198:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:198:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:203:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:203:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:207:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestMamboSim.py:207:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestMamboSim.py:71:4: R0915: Too many statements (62/50) (too-many-statements)
testcases/OpTestMamboSim.py:103:8: W0612: Unused variable 'rc' (unused-variable)
testcases/OpTestMamboSim.py:108:8: W0612: Unused variable 'cmdline_output' (unused-variable)
testcases/OpTestMamboSim.py:46:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestMambo"  (wrong-import-order)
testcases/OpTestMamboSim.py:38:0: W0611: Unused import time (unused-import)
testcases/OpTestMamboSim.py:43:0: W0611: Unused CommandFailed imported from common.Exceptions (unused-import)
testcases/OpTestMamboSim.py:46:0: W0611: Unused import logging (unused-import)
************* Module testcases.PetitbootConfig
testcases/PetitbootConfig.py:140:9: W0511: TODO extend to use real network device in qemu / real machine (fixme)
testcases/PetitbootConfig.py:241:9: W0511: TODO extend to use real network device in qemu / real machine (fixme)
testcases/PetitbootConfig.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/PetitbootConfig.py:1:0: C0103: Module name "PetitbootConfig" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:13:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootConfig.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:25:4: C0103: Method name "testConfigAvailable" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:35:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootConfig.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:48:4: C0103: Method name "setConfigTimeout" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:72:4: C0103: Method name "testConfigTimeoutDisplay" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:86:4: C0103: Method name "testConfigTimeoutSave" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:87:8: W0612: Unused variable 'c' (unused-variable)
testcases/PetitbootConfig.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:99:4: C0103: Method name "testConfigTimeoutSaveDefault" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:100:8: W0612: Unused variable 'c' (unused-variable)
testcases/PetitbootConfig.py:130:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootConfig.py:137:11: R0123: In 'conf.args.bmc_type is not 'qemu'', use '!=' when comparing constant literals not 'is not' ('conf.args.bmc_type != 'qemu'') (literal-comparison)
testcases/PetitbootConfig.py:149:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:149:4: C0103: Method name "testConfigStaticNetworkVar" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:157:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:158:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:159:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:160:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:161:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:162:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:165:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:166:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:170:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:171:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:175:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:177:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:179:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:181:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:185:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:186:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_UP' member (no-member)
testcases/PetitbootConfig.py:187:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_UP' member (no-member)
testcases/PetitbootConfig.py:194:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PetitbootConfig.py:195:51: E0602: Undefined variable 'tconfig' (undefined-variable)
testcases/PetitbootConfig.py:193:8: W0612: Unused variable 'config' (unused-variable)
testcases/PetitbootConfig.py:199:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:199:4: C0103: Method name "testReconfig" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:206:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:207:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:210:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:211:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:212:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:216:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:216:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:217:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:217:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:218:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:218:15: E1101: Instance of 'StaticNetworkConfigTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:219:8: E0602: Undefined variable 'c' (undefined-variable)
testcases/PetitbootConfig.py:225:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PetitbootConfig.py:226:51: E0602: Undefined variable 'tconfig' (undefined-variable)
testcases/PetitbootConfig.py:224:8: W0612: Unused variable 'config' (unused-variable)
testcases/PetitbootConfig.py:231:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootConfig.py:238:11: R0123: In 'conf.args.bmc_type is not 'qemu'', use '!=' when comparing constant literals not 'is not' ('conf.args.bmc_type != 'qemu'') (literal-comparison)
testcases/PetitbootConfig.py:250:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:250:4: C0103: Method name "testRestoreDefaultAutoboot" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:259:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:260:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:261:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:262:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:266:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:267:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:268:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:283:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_DOWN' member (no-member)
testcases/PetitbootConfig.py:286:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:287:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:289:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_UP' member (no-member)
testcases/PetitbootConfig.py:290:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_UP' member (no-member)
testcases/PetitbootConfig.py:294:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:295:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:296:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:308:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootConfig.py:308:4: C0103: Method name "testRestoreDefaultTimeout" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootConfig.py:317:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:318:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:319:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:320:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:321:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:327:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:328:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:329:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:345:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:346:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:347:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:348:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:349:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_TAB' member (no-member)
testcases/PetitbootConfig.py:355:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_PGDOWN' member (no-member)
testcases/PetitbootConfig.py:356:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:357:15: E1101: Instance of 'RestoreConfigDefaultTestCase' has no 'KEY_BTAB' member (no-member)
testcases/PetitbootConfig.py:7:0: W0611: Unused OpTestUtil imported from common.OpTestUtil (unused-import)
testcases/PetitbootConfig.py:9:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.testCronus
testcases/testCronus.py:80:0: C0301: Line too long (109/100) (line-too-long)
testcases/testCronus.py:82:0: C0301: Line too long (130/100) (line-too-long)
testcases/testCronus.py:183:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/testCronus.py:1:0: C0103: Module name "testCronus" doesn't conform to snake_case naming style (invalid-name)
testcases/testCronus.py:108:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/testCronus.py:104:15: E1101: Class 'Cronus' has no 'desired' member (no-member)
testcases/testCronus.py:110:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:110:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:116:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:116:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:118:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:145:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:145:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:142:12: W0612: Unused variable 'output' (unused-variable)
testcases/testCronus.py:160:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:160:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:157:12: W0612: Unused variable 'output' (unused-variable)
testcases/testCronus.py:186:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:186:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:189:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/testCronus.py:189:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:193:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:193:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:197:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:206:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:206:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:208:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testCronus.py:208:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testCronus.py:203:12: W0612: Unused variable 'output' (unused-variable)
testcases/testCronus.py:232:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/testCronus.py:239:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/testCronus.py:41:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.UnexpectedCase"  (wrong-import-order)
testcases/testCronus.py:30:0: W0611: Unused import time (unused-import)
testcases/testCronus.py:32:0: W0611: Unused import subprocess (unused-import)
testcases/testCronus.py:33:0: W0611: Unused import traceback (unused-import)
testcases/testCronus.py:39:0: W0611: Unused UnexpectedCase imported from common.Exceptions (unused-import)
testcases/testCronus.py:41:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestOOBIPMI
testcases/OpTestOOBIPMI.py:555:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestOOBIPMI.py:766:9: W0511: TODO: need to execute ipmi commands from a file (fixme)
testcases/OpTestOOBIPMI.py:1:0: C0103: Module name "OpTestOOBIPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:44:0: W0404: Reimport 'subprocess' (imported line 40) (reimported)
testcases/OpTestOOBIPMI.py:59:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOOBIPMI.py:62:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:63:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:64:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:66:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestOOBIPMI.py:79:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestOOBIPMI.py:79:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:82:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:87:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOOBIPMI.py:93:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOOBIPMI.py:293:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestOOBIPMI.py:339:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestOOBIPMI.py:374:4: C0103: Method name "test_chassisIdentifytests" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:385:4: C0103: Method name "test_chassisBootdev" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:402:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:401:21: W0612: Unused variable 'ipmiresponse' (unused-variable)
testcases/OpTestOOBIPMI.py:438:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestOOBIPMI.py:435:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestOOBIPMI.py:436:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestOOBIPMI.py:436:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:439:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:442:4: C0103: Method name "test_Info" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestOOBIPMI.py:458:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:474:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:489:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:500:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:508:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:518:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:533:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:544:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:545:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:564:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:583:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:593:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:604:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:613:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:626:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:627:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:637:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:638:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:648:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:649:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:659:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:660:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestOOBIPMI.py:668:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:676:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:681:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestOOBIPMI.py:683:16: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestOOBIPMI.py:676:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestOOBIPMI.py:700:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:719:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:735:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:752:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:763:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:765:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestOOBIPMI.py:828:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:87:0: R0904: Too many public methods (49/20) (too-many-public-methods)
testcases/OpTestOOBIPMI.py:854:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOOBIPMI.py:856:4: C0202: Class method setUpClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpTestOOBIPMI.py:861:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOOBIPMI.py:864:4: C0202: Class method tearDownClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpTestOOBIPMI.py:869:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestOOBIPMI.py:871:4: C0202: Class method setUpClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpTestOOBIPMI.py:877:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestOOBIPMI.py:880:4: C0202: Class method tearDownClass should have 'cls' as first argument (bad-classmethod-argument)
testcases/OpTestOOBIPMI.py:885:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:889:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:893:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestOOBIPMI.py:47:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestOOBIPMI.py:54:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestError.OpTestError", "common.OpTestSystem.OpTestSystem", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/OpTestOOBIPMI.py:44:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/OpTestOOBIPMI.py:50:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestOOBIPMI.py:41:0: W0611: Unused import re (unused-import)
testcases/OpTestOOBIPMI.py:42:0: W0611: Unused import os (unused-import)
testcases/OpTestOOBIPMI.py:43:0: W0611: Unused import sys (unused-import)
testcases/OpTestOOBIPMI.py:51:0: W0611: Unused OpTestSystem imported from common.OpTestSystem (unused-import)
testcases/OpTestOOBIPMI.py:54:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestInbandUsbInterface
testcases/OpTestInbandUsbInterface.py:1:0: C0103: Module name "OpTestInbandUsbInterface" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandUsbInterface.py:46:0: W0404: Reimport 'subprocess' (imported line 44) (reimported)
testcases/OpTestInbandUsbInterface.py:57:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandUsbInterface.py:61:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandUsbInterface.py:65:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandUsbInterface.py:69:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandUsbInterface.py:73:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandUsbInterface.py:80:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandUsbInterface.py:83:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandUsbInterface.py:90:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandUsbInterface.py:93:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandUsbInterface.py:100:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandUsbInterface.py:103:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandUsbInterface.py:110:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandUsbInterface.py:113:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandUsbInterface.py:120:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandUsbInterface.py:50:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestInbandUsbInterface.py:46:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/OpTestInbandUsbInterface.py:53:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestInbandUsbInterface.py:43:0: W0611: Unused import time (unused-import)
testcases/OpTestInbandUsbInterface.py:44:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestInbandUsbInterface.py:45:0: W0611: Unused import re (unused-import)
testcases/OpTestInbandUsbInterface.py:47:0: W0611: Unused import sys (unused-import)
testcases/OpTestInbandUsbInterface.py:53:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
************* Module testcases.HelloWorld
testcases/HelloWorld.py:1:0: C0103: Module name "HelloWorld" doesn't conform to snake_case naming style (invalid-name)
testcases/HelloWorld.py:35:0: C0115: Missing class docstring (missing-class-docstring)
testcases/HelloWorld.py:38:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/HelloWorld.py:39:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/HelloWorld.py:40:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/HelloWorld.py:42:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/HelloWorld.py:42:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/HelloWorld.py:32:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
************* Module testcases.InstallRhel
testcases/InstallRhel.py:98:0: C0301: Line too long (121/100) (line-too-long)
testcases/InstallRhel.py:99:0: C0301: Line too long (113/100) (line-too-long)
testcases/InstallRhel.py:100:0: C0301: Line too long (125/100) (line-too-long)
testcases/InstallRhel.py:101:0: C0301: Line too long (125/100) (line-too-long)
testcases/InstallRhel.py:102:0: C0301: Line too long (122/100) (line-too-long)
testcases/InstallRhel.py:103:0: C0301: Line too long (121/100) (line-too-long)
testcases/InstallRhel.py:104:0: C0301: Line too long (104/100) (line-too-long)
testcases/InstallRhel.py:1:0: C0103: Module name "InstallRhel" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:30:0: E0401: Unable to import 'pexpect' (import-error)
testcases/InstallRhel.py:41:0: C0115: Missing class docstring (missing-class-docstring)
testcases/InstallRhel.py:44:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:45:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:46:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:47:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallRhel.py:65:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:65:4: R0914: Too many local variables (18/15) (too-many-locals)
testcases/InstallRhel.py:75:8: C0103: Variable name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallRhel.py:97:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:98:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:106:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:125:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/InstallRhel.py:113:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:117:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:121:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:126:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallRhel.py:126:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:146:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallRhel.py:146:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:147:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallRhel.py:147:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:148:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/InstallRhel.py:148:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallRhel.py:65:4: R0915: Too many statements (62/50) (too-many-statements)
testcases/InstallRhel.py:105:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/InstallRhel.py:36:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestInstallUtil"  (wrong-import-order)
testcases/InstallRhel.py:36:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestGSBStaticKey
testcases/OpTestGSBStaticKey.py:101:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:106:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
testcases/OpTestGSBStaticKey.py:108:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
testcases/OpTestGSBStaticKey.py:122:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:142:90: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:168:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:169:72: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:203:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
testcases/OpTestGSBStaticKey.py:207:57: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:234:60: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestGSBStaticKey.py:193:62: W1401: Anomalous backslash in string: '\|'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestGSBStaticKey.py:1:0: C0103: Module name "OpTestGSBStaticKey" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:50:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:51:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:52:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:61:8: C0103: Attribute name "prepDisk" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:43:0: R0902: Too many instance attributes (18/7) (too-many-instance-attributes)
testcases/OpTestGSBStaticKey.py:91:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:94:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:96:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:110:4: C0103: Method name "getPRePDisk" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:121:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:123:4: C0103: Method name "backup_restore_PRepDisk" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:125:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:127:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:130:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:138:11: C0121: Comparison 'self.kernel_signature == True' should be 'self.kernel_signature is True' if checking for the singleton value True, or 'self.kernel_signature' if testing for truthiness (singleton-comparison)
testcases/OpTestGSBStaticKey.py:160:19: C0121: Comparison 'self.grub_signature == True' should be 'self.grub_signature is True' if checking for the singleton value True, or 'self.grub_signature' if testing for truthiness (singleton-comparison)
testcases/OpTestGSBStaticKey.py:162:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:169:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:179:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:163:24: W0612: Unused variable 'line' (unused-variable)
testcases/OpTestGSBStaticKey.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:181:4: C0103: Method name "collectData" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:194:8: W0105: String statement has no effect (pointless-string-statement)
testcases/OpTestGSBStaticKey.py:212:8: W0105: String statement has no effect (pointless-string-statement)
testcases/OpTestGSBStaticKey.py:225:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:225:4: C0103: Method name "validateData" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:230:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:238:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestGSBStaticKey.py:246:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:246:4: C0103: Method name "SecureBootEnable" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:258:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:266:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:266:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestGSBStaticKey.py:270:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestGSBStaticKey.py:270:0: C0103: Function name "GSB_suite" doesn't conform to snake_case naming style (invalid-name)
************* Module testcases.OpTestDlpar
testcases/OpTestDlpar.py:44:19: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:56:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:57:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:58:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:59:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:60:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:61:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:62:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:63:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:64:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:65:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:66:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:69:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:70:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:71:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:72:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:73:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:74:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:75:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:76:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:78:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:79:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:79:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:81:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:82:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:83:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:83:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:84:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:86:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:87:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:88:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:88:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:89:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:90:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:91:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:92:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:93:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:94:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:94:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
testcases/OpTestDlpar.py:95:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:96:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:96:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:97:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:98:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:99:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:99:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:100:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:101:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:102:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:103:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:105:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:107:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:110:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:113:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:115:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:117:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:118:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:119:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:119:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:120:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:121:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:122:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:123:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:124:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:125:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:125:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
testcases/OpTestDlpar.py:126:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:127:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:127:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:128:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:129:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:130:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:130:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:131:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:132:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:133:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
testcases/OpTestDlpar.py:134:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:136:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:138:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:140:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:142:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:143:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestDlpar.py:144:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:145:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestDlpar.py:146:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:148:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:150:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:152:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:154:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:156:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:159:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:160:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:161:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:162:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:163:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:164:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:166:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:169:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:170:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:171:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:172:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:173:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:174:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:176:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:179:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:180:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:181:0: W0311: Bad indentation. Found 3 spaces, expected 4 (bad-indentation)
testcases/OpTestDlpar.py:182:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:182:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:183:0: C0301: Line too long (306/100) (line-too-long)
testcases/OpTestDlpar.py:183:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:184:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:185:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:186:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:187:30: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:187:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:188:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:189:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:190:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:191:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:192:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:193:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:194:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:195:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:196:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:197:41: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:197:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:198:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:199:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:200:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:201:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:202:34: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:202:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:203:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:204:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:205:37: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:205:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:206:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:207:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:208:35: C0303: Trailing whitespace (trailing-whitespace)
testcases/OpTestDlpar.py:208:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:209:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:210:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:211:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:212:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:213:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:214:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:215:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:216:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:217:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:218:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:219:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:220:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:221:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:222:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:223:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:224:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:225:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:226:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:227:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:228:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:229:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:230:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:231:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:232:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:233:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:234:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:235:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:236:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:237:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:238:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:239:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:240:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:241:0: W0311: Bad indentation. Found 6 spaces, expected 8 (bad-indentation)
testcases/OpTestDlpar.py:241:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:242:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:243:0: W0311: Bad indentation. Found 10 spaces, expected 12 (bad-indentation)
testcases/OpTestDlpar.py:254:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:256:0: C0301: Line too long (287/100) (line-too-long)
testcases/OpTestDlpar.py:314:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestDlpar.py:1:0: C0103: Module name "OpTestDlpar" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:44:0: W0404: Reimport 'path' (imported line 43) (reimported)
testcases/OpTestDlpar.py:48:0: W0404: Reimport 'OpTestHMC' (imported line 47) (reimported)
testcases/OpTestDlpar.py:52:0: W0404: Reimport 'OpSystemState' (imported line 49) (reimported)
testcases/OpTestDlpar.py:55:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestDlpar.py:58:6: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:66:6: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:55:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
testcases/OpTestDlpar.py:76:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:76:3: C0103: Method name "AddRemove" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:82:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:82:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:87:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:87:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:92:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:92:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:95:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:95:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:103:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:103:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:105:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:107:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:107:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:110:46: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:113:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:113:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:115:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:118:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:118:3: C0103: Method name "Move" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:123:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:123:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:126:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:126:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:134:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:134:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:136:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:138:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:138:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:140:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:142:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:142:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:144:46: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:146:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:146:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:148:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:150:10: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestDlpar.py:150:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:152:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestDlpar.py:159:3: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestDlpar.py:160:6: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestDlpar.py:161:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:161:3: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:169:3: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestDlpar.py:170:6: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestDlpar.py:171:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:171:3: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:179:3: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestDlpar.py:180:6: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestDlpar.py:181:3: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:181:3: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:241:21: E0602: Undefined variable 'smt_script' (undefined-variable)
testcases/OpTestDlpar.py:181:3: R0915: Too many statements (63/50) (too-many-statements)
testcases/OpTestDlpar.py:250:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestDlpar.py:251:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestDlpar.py:253:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:253:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:314:24: E0602: Undefined variable 'smt_script' (undefined-variable)
testcases/OpTestDlpar.py:253:4: R0915: Too many statements (63/50) (too-many-statements)
testcases/OpTestDlpar.py:318:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestDlpar.py:318:0: C0103: Function name "tearDown" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestDlpar.py:321:0: W0604: Using the global statement at the module level (global-at-module-level)
testcases/OpTestDlpar.py:51:0: C0411: standard import "random.randint" should be placed before first party imports "OpTestConfiguration", "OpTestLogger", "common.OpTestHMC", "common.OpTestHMC", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestDlpar.py:42:0: W0611: Unused import logging (unused-import)
testcases/OpTestDlpar.py:43:0: W0611: Unused import os.path (unused-import)
testcases/OpTestDlpar.py:47:0: W0611: Unused OpTestHMC imported from common (unused-import)
testcases/OpTestDlpar.py:47:0: W0611: Unused OpTestFSP imported from common (unused-import)
testcases/OpTestDlpar.py:49:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
testcases/OpTestDlpar.py:50:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
************* Module testcases.OpTestLparFreq
testcases/OpTestLparFreq.py:59:0: W0311: Bad indentation. Found 12 spaces, expected 8 (bad-indentation)
testcases/OpTestLparFreq.py:75:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestLparFreq.py:88:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestLparFreq.py:121:0: C0301: Line too long (106/100) (line-too-long)
testcases/OpTestLparFreq.py:123:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestLparFreq.py:190:0: W0311: Bad indentation. Found 13 spaces, expected 12 (bad-indentation)
testcases/OpTestLparFreq.py:191:0: W0311: Bad indentation. Found 13 spaces, expected 12 (bad-indentation)
testcases/OpTestLparFreq.py:192:0: W0311: Bad indentation. Found 13 spaces, expected 12 (bad-indentation)
testcases/OpTestLparFreq.py:193:0: W0311: Bad indentation. Found 13 spaces, expected 12 (bad-indentation)
testcases/OpTestLparFreq.py:194:0: W0311: Bad indentation. Found 17 spaces, expected 16 (bad-indentation)
testcases/OpTestLparFreq.py:195:0: W0311: Bad indentation. Found 17 spaces, expected 16 (bad-indentation)
testcases/OpTestLparFreq.py:196:0: W0311: Bad indentation. Found 17 spaces, expected 16 (bad-indentation)
testcases/OpTestLparFreq.py:197:0: C0301: Line too long (113/100) (line-too-long)
testcases/OpTestLparFreq.py:197:0: W0311: Bad indentation. Found 21 spaces, expected 20 (bad-indentation)
testcases/OpTestLparFreq.py:199:0: W0311: Bad indentation. Found 17 spaces, expected 16 (bad-indentation)
testcases/OpTestLparFreq.py:200:0: C0301: Line too long (105/100) (line-too-long)
testcases/OpTestLparFreq.py:200:0: W0311: Bad indentation. Found 21 spaces, expected 20 (bad-indentation)
testcases/OpTestLparFreq.py:1:0: C0103: Module name "OpTestLparFreq" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:45:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestLparFreq.py:65:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:72:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:45:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
testcases/OpTestLparFreq.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:55:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:55:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:59:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:73:13: C0321: More than one statement on a single line (multiple-statements)
testcases/OpTestLparFreq.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:82:4: C0103: Method name "powersaveMode_test" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:87:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:88:52: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:98:4: C0103: Method name "ModeFreq_test" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:111:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:111:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:117:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:117:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:123:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:125:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:125:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:136:4: C0103: Method name "Lpar_shutdown_freq_test" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:148:4: C0103: Method name "Lpar_freq_test_workload" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:161:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:182:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:182:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:184:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:184:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:188:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:188:4: C0103: Method name "Lpar_freq_test_smt" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:194:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:197:45: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:200:21: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestLparFreq.py:200:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:204:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestLparFreq.py:204:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestLparFreq.py:211:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestLparFreq.py:90:8: W0201: Attribute 'powersave_modes_list' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestLparFreq.py:91:8: W0201: Attribute 'powersave_check_list' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestLparFreq.py:37:0: W0611: Unused OpTestHMC imported from common (unused-import)
testcases/OpTestLparFreq.py:39:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.OpTestInbandIPMI
testcases/OpTestInbandIPMI.py:76:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
testcases/OpTestInbandIPMI.py:215:0: C0301: Line too long (143/100) (line-too-long)
testcases/OpTestInbandIPMI.py:477:0: C0301: Line too long (112/100) (line-too-long)
testcases/OpTestInbandIPMI.py:508:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestInbandIPMI.py:510:0: C0301: Line too long (111/100) (line-too-long)
testcases/OpTestInbandIPMI.py:667:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestInbandIPMI.py:732:0: C0301: Line too long (123/100) (line-too-long)
testcases/OpTestInbandIPMI.py:331:13: W0511: TODO: Check for file output (fixme)
testcases/OpTestInbandIPMI.py:682:9: W0511: TODO: need to execute ipmi commands from a file (fixme)
testcases/OpTestInbandIPMI.py:1:0: C0103: Module name "OpTestInbandIPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:43:0: W0404: Reimport 'subprocess' (imported line 41) (reimported)
testcases/OpTestInbandIPMI.py:53:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/OpTestInbandIPMI.py:60:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:66:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:69:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:72:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:73:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:74:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:75:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:69:0: R0205: Class 'OpTestInbandIPMIBase' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
testcases/OpTestInbandIPMI.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:70:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:80:11: E1101: Instance of 'OpTestInbandIPMIBase' has no 'test' member (no-member)
testcases/OpTestInbandIPMI.py:83:13: E1101: Instance of 'OpTestInbandIPMIBase' has no 'test' member (no-member)
testcases/OpTestInbandIPMI.py:88:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestInbandIPMI.py:106:16: E1101: Instance of 'OpTestInbandIPMIBase' has no 'skipTest' member (no-member)
testcases/OpTestInbandIPMI.py:82:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestInbandIPMI.py:86:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestInbandIPMI.py:111:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:115:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandIPMI.py:137:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandIPMI.py:139:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:149:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:202:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:208:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:227:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestInbandIPMI.py:201:20: W0612: Unused variable 'r' (unused-variable)
testcases/OpTestInbandIPMI.py:229:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:236:8: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
testcases/OpTestInbandIPMI.py:233:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestInbandIPMI.py:234:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestInbandIPMI.py:234:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:319:43: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:321:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestInbandIPMI.py:321:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:330:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:332:12: W0612: Unused variable 'l_res' (unused-variable)
testcases/OpTestInbandIPMI.py:404:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:419:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:437:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:457:15: E0602: Undefined variable 'OpTestError' (undefined-variable)
testcases/OpTestInbandIPMI.py:457:8: W0612: Unused variable 'e' (unused-variable)
testcases/OpTestInbandIPMI.py:468:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:482:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestInbandIPMI.py:482:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:499:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:515:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestInbandIPMI.py:515:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:537:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:551:19: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestInbandIPMI.py:553:20: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestInbandIPMI.py:556:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:561:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:574:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/OpTestInbandIPMI.py:580:18: E0602: Undefined variable 'OpTestError' (undefined-variable)
testcases/OpTestInbandIPMI.py:589:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:628:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:668:20: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestInbandIPMI.py:681:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpTestInbandIPMI.py:745:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestInbandIPMI.py:750:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
testcases/OpTestInbandIPMI.py:129:0: R0904: Too many public methods (36/20) (too-many-public-methods)
testcases/OpTestInbandIPMI.py:816:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:820:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestInbandIPMI.py:822:4: C0103: Method name "test_Info" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestInbandIPMI.py:848:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:855:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestInbandIPMI.py:862:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:866:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:870:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:874:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:878:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestInbandIPMI.py:47:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpTestInbandIPMI.py:55:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestIPMI.IPMIConsoleState", "common.Exceptions.CommandFailed", "common.OpTestMambo"  (wrong-import-order)
testcases/OpTestInbandIPMI.py:43:0: C0412: Imports from package subprocess are not grouped (ungrouped-imports)
testcases/OpTestInbandIPMI.py:50:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestInbandIPMI.py:40:0: W0611: Unused import time (unused-import)
testcases/OpTestInbandIPMI.py:41:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestInbandIPMI.py:42:0: W0611: Unused import re (unused-import)
testcases/OpTestInbandIPMI.py:44:0: W0611: Unused import sys (unused-import)
testcases/OpTestInbandIPMI.py:51:0: W0611: Unused IPMIConsoleState imported from common.OpTestIPMI (unused-import)
testcases/OpTestInbandIPMI.py:55:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestHMIHandling
testcases/OpTestHMIHandling.py:55:0: C0301: Line too long (116/100) (line-too-long)
testcases/OpTestHMIHandling.py:108:0: C0301: Line too long (168/100) (line-too-long)
testcases/OpTestHMIHandling.py:113:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestHMIHandling.py:126:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestHMIHandling.py:128:0: C0301: Line too long (156/100) (line-too-long)
testcases/OpTestHMIHandling.py:141:0: C0301: Line too long (103/100) (line-too-long)
testcases/OpTestHMIHandling.py:150:0: C0301: Line too long (101/100) (line-too-long)
testcases/OpTestHMIHandling.py:168:0: C0301: Line too long (116/100) (line-too-long)
testcases/OpTestHMIHandling.py:182:0: C0301: Line too long (148/100) (line-too-long)
testcases/OpTestHMIHandling.py:184:0: C0301: Line too long (123/100) (line-too-long)
testcases/OpTestHMIHandling.py:187:0: C0301: Line too long (117/100) (line-too-long)
testcases/OpTestHMIHandling.py:204:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestHMIHandling.py:208:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestHMIHandling.py:214:0: C0301: Line too long (130/100) (line-too-long)
testcases/OpTestHMIHandling.py:276:0: C0301: Line too long (108/100) (line-too-long)
testcases/OpTestHMIHandling.py:316:0: C0301: Line too long (102/100) (line-too-long)
testcases/OpTestHMIHandling.py:335:0: C0301: Line too long (104/100) (line-too-long)
testcases/OpTestHMIHandling.py:1:0: C0103: Module name "OpTestHMIHandling" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:47:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestHMIHandling.py:62:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:85:38: C0117: Consider changing "not self.revision in ['2.0', '2.1', '2.2', '2.3']" to "self.revision not in ['2.0', '2.1', '2.2', '2.3']" (unnecessary-negation)
testcases/OpTestHMIHandling.py:87:39: C0117: Consider changing "not self.revision in ['1.0']" to "self.revision not in ['1.0']" (unnecessary-negation)
testcases/OpTestHMIHandling.py:90:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:90:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:92:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:95:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:95:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:108:20: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:108:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:112:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:118:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:118:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:119:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:119:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:128:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:128:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:132:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:136:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:139:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:140:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestHMIHandling.py:145:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:149:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestHMIHandling.py:154:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:156:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:162:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:166:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:190:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:204:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:207:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:208:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:212:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:216:15: R0123: In 'state is '0'', use '==' when comparing constant literals not 'is' ('state == '0'') (literal-comparison)
testcases/OpTestHMIHandling.py:225:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:229:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:233:22: W0123: Use of eval (eval-used)
testcases/OpTestHMIHandling.py:233:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:238:4: C0103: Method name "clearGardEntries" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:257:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:257:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:258:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:258:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:259:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:259:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:265:23: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestHMIHandling.py:267:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:267:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:268:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestHMIHandling.py:277:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:277:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:278:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:278:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:279:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:279:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:286:31: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestHMIHandling.py:288:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:288:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:293:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:293:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:295:28: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:295:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:296:34: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:296:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:298:28: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:306:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:306:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:307:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:307:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:308:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:308:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:310:20: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:315:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:322:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:322:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:323:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:323:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:324:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:324:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:330:23: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestHMIHandling.py:332:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHMIHandling.py:332:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:334:20: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHMIHandling.py:238:4: R0912: Too many branches (19/12) (too-many-branches)
testcases/OpTestHMIHandling.py:238:4: R0915: Too many statements (87/50) (too-many-statements)
testcases/OpTestHMIHandling.py:265:16: W0612: Unused variable 'e' (unused-variable)
testcases/OpTestHMIHandling.py:344:4: C0103: Method name "_testHMIHandling" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:381:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
testcases/OpTestHMIHandling.py:404:16: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:413:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:344:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
testcases/OpTestHMIHandling.py:433:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:446:24: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
testcases/OpTestHMIHandling.py:447:28: W0707: Consider explicitly re-raising using 'raise Exception('Processor recovery failed: Kernel got panic') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:447:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:450:28: W0707: Consider explicitly re-raising using 'raise Exception('System reached petitboot:Processor recovery failed') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:450:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:453:28: W0707: Consider explicitly re-raising using 'raise Exception('System started booting: Processor recovery failed') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:453:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:456:28: W0707: Consider explicitly re-raising using 'raise Exception('Failed to inject thread hang recoverable error %s', str(cf)) from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:456:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:456:28: W0715: Exception arguments suggest string formatting might be intended (raising-format-tuple)
testcases/OpTestHMIHandling.py:478:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:491:24: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
testcases/OpTestHMIHandling.py:492:28: W0707: Consider explicitly re-raising using 'raise Exception('Processor recovery failed: Kernel got panic') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:492:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:495:28: W0707: Consider explicitly re-raising using 'raise Exception('System reached petitboot:Processor recovery failed') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:495:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:498:28: W0707: Consider explicitly re-raising using 'raise Exception('System started booting: Processor recovery failed') from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:498:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:501:28: W0707: Consider explicitly re-raising using 'raise Exception('Failed to inject thread hang recoverable error %s', str(cf)) from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:501:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:501:28: W0715: Exception arguments suggest string formatting might be intended (raising-format-tuple)
testcases/OpTestHMIHandling.py:529:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:538:8: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestHMIHandling.py:564:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:569:8: W0612: Unused variable 'res' (unused-variable)
testcases/OpTestHMIHandling.py:575:4: C0103: Method name "_testTFMR_Errors" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:602:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:622:28: W0707: Consider explicitly re-raising using 'raise Exception('Failed to inject TFMR error %s ' % str(cf)) from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:622:28: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:623:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:616:28: W0612: Unused variable 'l_msg' (unused-variable)
testcases/OpTestHMIHandling.py:645:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHMIHandling.py:673:20: W0707: Consider explicitly re-raising using 'raise Exception('TOD: PSS Hamming distance error injection failed %s', str(cf)) from cf' (raise-missing-from)
testcases/OpTestHMIHandling.py:673:20: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpTestHMIHandling.py:673:20: W0715: Exception arguments suggest string formatting might be intended (raising-format-tuple)
testcases/OpTestHMIHandling.py:630:4: R1711: Useless return at end of function or method (useless-return)
testcases/OpTestHMIHandling.py:157:8: W0201: Attribute 'proc_gen' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHMIHandling.py:174:8: W0201: Attribute 'l_dic' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHMIHandling.py:681:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:681:0: C0103: Class name "HMI_TFMR_ERRORS" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestHMIHandling.py:682:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:682:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:686:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:686:0: C0103: Class name "TOD_ERRORS" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestHMIHandling.py:687:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:687:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:691:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:691:0: C0103: Class name "SingleCoreTOD_ERRORS" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestHMIHandling.py:693:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestHMIHandling.py:696:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:696:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:700:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:700:0: C0103: Class name "PROC_RECOV_DONE" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestHMIHandling.py:701:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:701:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:705:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:705:0: C0103: Class name "PROC_RECV_ERROR_MASKED" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestHMIHandling.py:706:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:706:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:710:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:711:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:711:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:716:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:717:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:717:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:722:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHMIHandling.py:723:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:723:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHMIHandling.py:727:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:735:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:744:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHMIHandling.py:48:0: C0411: standard import "unittest" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestHMIHandling.py:57:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestSSH.ConsoleState", "common.OpTestIPMI.IPMIConsoleState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestHMIHandling.py:42:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestHMIHandling.py:43:0: W0611: Unused import re (unused-import)
testcases/OpTestHMIHandling.py:44:0: W0611: Unused import sys (unused-import)
testcases/OpTestHMIHandling.py:45:0: W0611: Unused import os (unused-import)
testcases/OpTestHMIHandling.py:52:0: W0611: Unused ConsoleState imported from common.OpTestSSH as SSHConnectionState (unused-import)
testcases/OpTestHMIHandling.py:53:0: W0611: Unused IPMIConsoleState imported from common.OpTestIPMI (unused-import)
testcases/OpTestHMIHandling.py:57:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestSystemBootSequence
testcases/OpTestSystemBootSequence.py:1:0: C0103: Module name "OpTestSystemBootSequence" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:56:0: W0404: Reimport 'subprocess' (imported line 55) (reimported)
testcases/OpTestSystemBootSequence.py:67:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestSystemBootSequence.py:70:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:71:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:72:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:73:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:84:0: C0103: Class name "ColdReset_IPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:96:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:112:0: C0103: Class name "WarmReset_IPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:124:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:139:0: C0103: Class name "PowerPolicyOFF_IPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:152:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:152:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:178:0: C0103: Class name "PowerPolicyON_IPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:191:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:191:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:217:0: C0103: Class name "PowerPolicyPrevious_IPL" doesn't conform to PascalCase naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:230:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:230:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestSystemBootSequence.py:264:12: E0702: Raising str while only classes or instances are allowed (raising-bad-type)
testcases/OpTestSystemBootSequence.py:267:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestSystemBootSequence.py:62:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/OpTestSystemBootSequence.py:64:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpTestSystemBootSequence.py:54:0: W0611: Unused import time (unused-import)
testcases/OpTestSystemBootSequence.py:55:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestSystemBootSequence.py:57:0: W0611: Unused import re (unused-import)
testcases/OpTestSystemBootSequence.py:58:0: W0611: Unused import sys (unused-import)
testcases/OpTestSystemBootSequence.py:61:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
************* Module testcases.OpTestHugepage
testcases/OpTestHugepage.py:1:0: C0103: Module name "OpTestHugepage" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:62:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:63:8: C0103: Attribute name "cv_HMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:64:8: C0103: Attribute name "cv_FSP" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:56:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
testcases/OpTestHugepage.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHugepage.py:66:4: C0103: Method name "setupHugepage" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:75:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHugepage.py:84:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHugepage.py:84:4: C0103: Method name "validateHugepage" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:86:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHugepage.py:99:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHugepage.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHugepage.py:105:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHugepage.py:110:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHugepage.py:69:8: W0201: Attribute 'des_hp' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHugepage.py:70:8: W0201: Attribute 'min_hp' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHugepage.py:71:8: W0201: Attribute 'max_hp' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHugepage.py:72:8: W0201: Attribute 'os_level' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHugepage.py:73:8: W0201: Attribute 'obj' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHugepage.py:121:4: W0246: Useless parent or super() delegation in method 'setUp' (useless-parent-delegation)
testcases/OpTestHugepage.py:122:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestHugepage.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHugepage.py:124:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHugepage.py:132:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module testcases.OsSecureBoot
testcases/OsSecureBoot.py:47:0: C0301: Line too long (107/100) (line-too-long)
testcases/OsSecureBoot.py:49:0: C0301: Line too long (102/100) (line-too-long)
testcases/OsSecureBoot.py:54:0: C0301: Line too long (110/100) (line-too-long)
testcases/OsSecureBoot.py:65:0: C0301: Line too long (130/100) (line-too-long)
testcases/OsSecureBoot.py:66:0: C0301: Line too long (115/100) (line-too-long)
testcases/OsSecureBoot.py:68:0: C0301: Line too long (103/100) (line-too-long)
testcases/OsSecureBoot.py:76:0: C0301: Line too long (123/100) (line-too-long)
testcases/OsSecureBoot.py:129:0: C0301: Line too long (112/100) (line-too-long)
testcases/OsSecureBoot.py:158:0: C0301: Line too long (103/100) (line-too-long)
testcases/OsSecureBoot.py:166:0: C0301: Line too long (102/100) (line-too-long)
testcases/OsSecureBoot.py:172:0: C0301: Line too long (102/100) (line-too-long)
testcases/OsSecureBoot.py:176:0: C0301: Line too long (103/100) (line-too-long)
testcases/OsSecureBoot.py:179:0: C0301: Line too long (107/100) (line-too-long)
testcases/OsSecureBoot.py:188:0: C0303: Trailing whitespace (trailing-whitespace)
testcases/OsSecureBoot.py:208:0: C0301: Line too long (104/100) (line-too-long)
testcases/OsSecureBoot.py:210:0: C0301: Line too long (105/100) (line-too-long)
testcases/OsSecureBoot.py:214:0: C0301: Line too long (106/100) (line-too-long)
testcases/OsSecureBoot.py:237:0: C0301: Line too long (109/100) (line-too-long)
testcases/OsSecureBoot.py:255:52: C0303: Trailing whitespace (trailing-whitespace)
testcases/OsSecureBoot.py:261:0: C0301: Line too long (103/100) (line-too-long)
testcases/OsSecureBoot.py:270:0: C0301: Line too long (102/100) (line-too-long)
testcases/OsSecureBoot.py:335:0: C0301: Line too long (103/100) (line-too-long)
testcases/OsSecureBoot.py:354:0: C0301: Line too long (105/100) (line-too-long)
testcases/OsSecureBoot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/OsSecureBoot.py:1:0: C0103: Module name "OsSecureBoot" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:2:0: C0410: Multiple imports on one line (os, time) (multiple-imports)
testcases/OsSecureBoot.py:9:0: W0105: String statement has no effect (pointless-string-statement)
testcases/OsSecureBoot.py:27:0: W0105: String statement has no effect (pointless-string-statement)
testcases/OsSecureBoot.py:45:0: W0105: String statement has no effect (pointless-string-statement)
testcases/OsSecureBoot.py:99:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OsSecureBoot.py:102:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:103:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:104:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:105:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:106:8: C0103: Attribute name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:107:8: C0103: Attribute name "URL" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:111:4: C0103: Method name "getTestData" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:115:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:118:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:119:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:122:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:122:4: C0103: Method name "checkFirmwareSupport" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:144:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:144:4: C0103: Method name "cleanPhysicalPresence" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:161:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:161:4: C0103: Method name "assertPhysicalPresence" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:221:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:225:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:232:4: C0103: Method name "addSecureBootKeys" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:266:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:273:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:278:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:285:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:285:4: C0103: Method name "checkKexecKernels" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:320:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:320:4: C0103: Method name "replaceAndDeletePK" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:367:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:370:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:373:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OsSecureBoot.py:378:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OsSecureBoot.py:378:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OsSecureBoot.py:2:0: W0611: Unused import os (unused-import)
testcases/OsSecureBoot.py:2:0: W0611: Unused import time (unused-import)
************* Module testcases.PciSlotLocCodes
testcases/PciSlotLocCodes.py:119:40: W1401: Anomalous backslash in string: '\d'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/PciSlotLocCodes.py:1:0: C0103: Module name "PciSlotLocCodes" doesn't conform to snake_case naming style (invalid-name)
testcases/PciSlotLocCodes.py:65:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/PciSlotLocCodes.py:59:15: E1101: Class 'PciDT' has no 'desired' member (no-member)
testcases/PciSlotLocCodes.py:65:8: W0612: Unused variable 'e' (unused-variable)
testcases/PciSlotLocCodes.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PciSlotLocCodes.py:72:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:72:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PciSlotLocCodes.py:74:4: W0102: Dangerous default value {} as argument (dangerous-default-value)
testcases/PciSlotLocCodes.py:92:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/PciSlotLocCodes.py:93:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:93:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PciSlotLocCodes.py:103:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
testcases/PciSlotLocCodes.py:119:12: C0103: Variable name "matchObj" doesn't conform to snake_case naming style (invalid-name)
testcases/PciSlotLocCodes.py:122:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:129:24: C0103: Variable name "pciObj" doesn't conform to snake_case naming style (invalid-name)
testcases/PciSlotLocCodes.py:130:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:133:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:137:38: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:137:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:139:53: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:149:38: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:149:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:118:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
testcases/PciSlotLocCodes.py:156:49: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:171:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:171:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:151:20: W0612: Unused variable 'cf' (unused-variable)
testcases/PciSlotLocCodes.py:191:8: C0206: Consider iterating with .items() (consider-using-dict-items)
testcases/PciSlotLocCodes.py:194:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:198:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:199:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:200:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:202:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:204:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:204:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:205:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:205:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:207:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:207:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:209:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:209:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:211:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:211:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:215:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:215:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:217:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:217:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:219:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:219:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:221:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:221:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:223:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/PciSlotLocCodes.py:223:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:226:11: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/PciSlotLocCodes.py:228:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/PciSlotLocCodes.py:228:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/PciSlotLocCodes.py:116:8: W0201: Attribute 'slot_failures' defined outside __init__ (attribute-defined-outside-init)
testcases/PciSlotLocCodes.py:117:8: W0201: Attribute 'loccode_failures' defined outside __init__ (attribute-defined-outside-init)
testcases/PciSlotLocCodes.py:244:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PciSlotLocCodes.py:244:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PciSlotLocCodes.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PciSlotLocCodes.py:258:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PciSlotLocCodes.py:42:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/PciSlotLocCodes.py:42:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestExample
testcases/OpTestExample.py:136:0: C0301: Line too long (118/100) (line-too-long)
testcases/OpTestExample.py:96:35: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/OpTestExample.py:1:0: C0103: Module name "OpTestExample" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:56:34: E1101: Instance of 'OpTestExample' has no 'my_desired_state' member (no-member)
testcases/OpTestExample.py:55:20: W0613: Unused argument 'my_connect' (unused-argument)
testcases/OpTestExample.py:62:4: C0103: Method name "OPComboTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:74:4: C0103: Method name "HostVersions" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:87:4: C0103: Method name "PetitbootVersions" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:106:4: C0103: Method name "OPMisc" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:117:4: C0103: Method name "OPDemoFunc" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:139:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestExample.py:125:33: R1728: Consider using a generator instead 'list(_f for _f in self.my_console.run_command(xcommand) if _f)' (consider-using-generator)
testcases/OpTestExample.py:129:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestExample.py:136:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestExample.py:138:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestExample.py:138:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestExample.py:140:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestExample.py:128:22: W0612: Unused variable 'xvalue' (unused-variable)
testcases/OpTestExample.py:148:4: W0221: Number of parameters was 2 in 'OpTestExample.setUp' and is now 1 in overriding 'SkirootBasicCheck.setUp' method (arguments-differ)
testcases/OpTestExample.py:150:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestExample.py:152:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestExample.py:152:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:163:4: W0221: Number of parameters was 2 in 'OpTestExample.setUp' and is now 1 in overriding 'HostBasicCheck.setUp' method (arguments-differ)
testcases/OpTestExample.py:166:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestExample.py:168:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestExample.py:168:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestExample.py:29:0: W0611: Unused import logging (unused-import)
************* Module testcases.LightPathDiagnostics
testcases/LightPathDiagnostics.py:1:0: C0103: Module name "LightPathDiagnostics" doesn't conform to snake_case naming style (invalid-name)
testcases/LightPathDiagnostics.py:51:0: C0115: Missing class docstring (missing-class-docstring)
testcases/LightPathDiagnostics.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:84:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:97:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/LightPathDiagnostics.py:103:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:103:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:105:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:109:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:114:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:115:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:115:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:121:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:121:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:122:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:126:20: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:131:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:132:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:132:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:107:16: W0612: Unused variable 'i' (unused-variable)
testcases/LightPathDiagnostics.py:140:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:140:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/LightPathDiagnostics.py:154:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:171:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:153:12: W0612: Unused variable 'i' (unused-variable)
testcases/LightPathDiagnostics.py:186:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:186:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/LightPathDiagnostics.py:192:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:196:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:207:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:211:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:195:12: W0612: Unused variable 'i' (unused-variable)
testcases/LightPathDiagnostics.py:226:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:226:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/LightPathDiagnostics.py:231:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:231:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:233:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:233:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:234:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:239:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:245:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:247:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/LightPathDiagnostics.py:247:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:251:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/LightPathDiagnostics.py:251:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:252:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:256:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:262:26: W1310: Using formatting for a string that does not have any interpolated variables (format-string-without-interpolation)
testcases/LightPathDiagnostics.py:262:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:264:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/LightPathDiagnostics.py:264:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/LightPathDiagnostics.py:238:16: W0612: Unused variable 'i' (unused-variable)
testcases/LightPathDiagnostics.py:267:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:275:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/LightPathDiagnostics.py:42:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/LightPathDiagnostics.py:46:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestIPMI.OpTestIPMI", "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/LightPathDiagnostics.py:44:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/LightPathDiagnostics.py:35:0: W0611: Unused import subprocess (unused-import)
testcases/LightPathDiagnostics.py:36:0: W0611: Unused import re (unused-import)
testcases/LightPathDiagnostics.py:38:0: W0611: Unused OpTestIPMI imported from common.OpTestIPMI (unused-import)
testcases/LightPathDiagnostics.py:39:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/LightPathDiagnostics.py:46:0: W0611: Unused import logging (unused-import)
************* Module testcases.AT24driver
testcases/AT24driver.py:1:0: C0103: Module name "AT24driver" doesn't conform to snake_case naming style (invalid-name)
testcases/AT24driver.py:59:0: C0115: Missing class docstring (missing-class-docstring)
testcases/AT24driver.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/AT24driver.py:85:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/AT24driver.py:91:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/AT24driver.py:96:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/AT24driver.py:132:15: C2801: Unnecessarily calls dunder method __contains__. Use in keyword. (unnecessary-dunder-call)
testcases/AT24driver.py:139:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/AT24driver.py:141:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/AT24driver.py:151:33: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/AT24driver.py:161:42: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/AT24driver.py:166:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/AT24driver.py:52:0: C0411: standard import "difflib" should be placed before first party imports "OpTestConfiguration", "testcases.I2C.I2C", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.Exceptions.KernelConfigNotSet"  (wrong-import-order)
testcases/AT24driver.py:54:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "testcases.I2C.I2C", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.Exceptions.KernelConfigNotSet"  (wrong-import-order)
testcases/AT24driver.py:40:0: W0611: Unused import time (unused-import)
testcases/AT24driver.py:41:0: W0611: Unused import subprocess (unused-import)
testcases/AT24driver.py:42:0: W0611: Unused import re (unused-import)
testcases/AT24driver.py:43:0: W0611: Unused import sys (unused-import)
testcases/AT24driver.py:49:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
testcases/AT24driver.py:54:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestHostboot
testcases/OpTestHostboot.py:1:0: C0103: Module name "OpTestHostboot" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:29:0: E0401: Unable to import 'pexpect' (import-error)
testcases/OpTestHostboot.py:52:20: W0613: Unused argument 'my_connect' (unused-argument)
testcases/OpTestHostboot.py:65:4: C0103: Method name "SniffTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:95:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/OpTestHostboot.py:89:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHostboot.py:96:26: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpTestHostboot.py:96:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestHostboot.py:107:16: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
testcases/OpTestHostboot.py:111:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
testcases/OpTestHostboot.py:116:4: C0103: Method name "HostChecks" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:124:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHostboot.py:124:35: E1305: Too many arguments for format string (too-many-format-args)
testcases/OpTestHostboot.py:129:4: C0103: Method name "PetitbootChecks" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:137:12: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/OpTestHostboot.py:137:35: E1305: Too many arguments for format string (too-many-format-args)
testcases/OpTestHostboot.py:68:8: W0201: Attribute 'snippet_list' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHostboot.py:69:8: W0201: Attribute 'snippet_count' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHostboot.py:148:4: W0221: Number of parameters was 2 in 'OpTestHostboot.setUp' and is now 1 in overriding 'SkirootBasicCheck.setUp' method (arguments-differ)
testcases/OpTestHostboot.py:149:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestHostboot.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHostboot.py:151:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:160:4: W0221: Number of parameters was 2 in 'OpTestHostboot.setUp' and is now 1 in overriding 'HostBasicCheck.setUp' method (arguments-differ)
testcases/OpTestHostboot.py:162:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
testcases/OpTestHostboot.py:164:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHostboot.py:164:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHostboot.py:30:0: C0411: standard import "time" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestHostboot.py:31:0: C0411: standard import "string" should be placed before third party import "pexpect" (wrong-import-order)
testcases/OpTestHostboot.py:28:0: W0611: Unused import logging (unused-import)
testcases/OpTestHostboot.py:30:0: W0611: Unused import time (unused-import)
testcases/OpTestHostboot.py:31:0: W0611: Unused import string (unused-import)
************* Module testcases.OpalSysfsTests
testcases/OpalSysfsTests.py:1:0: C0103: Module name "OpalSysfsTests" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalSysfsTests.py:57:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalSysfsTests.py:60:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalSysfsTests.py:61:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalSysfsTests.py:62:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalSysfsTests.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:58:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalSysfsTests.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:71:31: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:75:8: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:75:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:77:20: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:77:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:81:8: E1101: Instance of 'OpalSysfsTests' has no 'assertTrue' member (no-member)
testcases/OpalSysfsTests.py:76:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpalSysfsTests.py:84:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:85:19: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:85:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:89:8: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:89:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:92:12: E1101: Instance of 'OpalSysfsTests' has no 'assertIn' member (no-member)
testcases/OpalSysfsTests.py:93:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:103:8: E1101: Instance of 'OpalSysfsTests' has no 'assertEqual' member (no-member)
testcases/OpalSysfsTests.py:104:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:90:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpalSysfsTests.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:109:8: E1101: Instance of 'OpalSysfsTests' has no 'setup_test' member (no-member)
testcases/OpalSysfsTests.py:114:12: E1101: Instance of 'OpalSysfsTests' has no 'skipTest' member (no-member)
testcases/OpalSysfsTests.py:116:27: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:116:46: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:118:27: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:119:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:120:27: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:121:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:123:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/OpalSysfsTests.py:123:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:131:12: W0612: Unused variable 'i' (unused-variable)
testcases/OpalSysfsTests.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:145:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/OpalSysfsTests.py:138:8: E1101: Instance of 'OpalSysfsTests' has no 'setup_test' member (no-member)
testcases/OpalSysfsTests.py:143:12: E1101: Instance of 'OpalSysfsTests' has no 'skipTest' member (no-member)
testcases/OpalSysfsTests.py:145:15: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:145:34: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:147:20: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:147:39: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:148:12: E1101: Instance of 'OpalSysfsTests' has no 'assertTrue' member (no-member)
testcases/OpalSysfsTests.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:163:8: W0622: Redefining built-in 'list' (redefined-builtin)
testcases/OpalSysfsTests.py:155:8: E1101: Instance of 'OpalSysfsTests' has no 'setup_test' member (no-member)
testcases/OpalSysfsTests.py:161:12: E1101: Instance of 'OpalSysfsTests' has no 'skipTest' member (no-member)
testcases/OpalSysfsTests.py:163:15: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:164:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:166:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:166:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:168:15: E1101: Instance of 'OpalSysfsTests' has no 'test' member (no-member)
testcases/OpalSysfsTests.py:169:16: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:169:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:173:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:174:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:175:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:176:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:176:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:178:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:179:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:180:12: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:180:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:184:8: E1101: Instance of 'OpalSysfsTests' has no 'setup_test' member (no-member)
testcases/OpalSysfsTests.py:185:8: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:185:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:187:8: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:187:27: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:190:8: E1101: Instance of 'OpalSysfsTests' has no 'setup_test' member (no-member)
testcases/OpalSysfsTests.py:192:8: E1101: Instance of 'OpalSysfsTests' has no 'c' member (no-member)
testcases/OpalSysfsTests.py:193:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalSysfsTests.py:71:12: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalSysfsTests.py:196:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalSysfsTests.py:197:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:198:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalSysfsTests.py:200:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalSysfsTests.py:203:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalSysfsTests.py:204:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalSysfsTests.py:205:8: W0201: Attribute 'test' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalSysfsTests.py:207:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalSysfsTests.py:44:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/OpalSysfsTests.py:44:0: W0611: Unused import logging (unused-import)
************* Module testcases.testRestAPI
testcases/testRestAPI.py:133:0: C0301: Line too long (101/100) (line-too-long)
testcases/testRestAPI.py:1:0: C0103: Module name "testRestAPI" doesn't conform to snake_case naming style (invalid-name)
testcases/testRestAPI.py:69:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/testRestAPI.py:65:15: E1101: Class 'RestAPI' has no 'desired' member (no-member)
testcases/testRestAPI.py:69:8: W0612: Unused variable 'e' (unused-variable)
testcases/testRestAPI.py:93:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:93:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:109:8: C0103: Variable name "PowerCapEnable" doesn't conform to snake_case naming style (invalid-name)
testcases/testRestAPI.py:109:24: C0103: Variable name "PowerCap" doesn't conform to snake_case naming style (invalid-name)
testcases/testRestAPI.py:110:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:110:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:115:8: C0103: Variable name "PowerCapEnable" doesn't conform to snake_case naming style (invalid-name)
testcases/testRestAPI.py:115:24: C0103: Variable name "PowerCap" doesn't conform to snake_case naming style (invalid-name)
testcases/testRestAPI.py:116:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:116:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:130:12: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/testRestAPI.py:129:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:129:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:131:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:131:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:136:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:140:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:151:12: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/testRestAPI.py:150:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:150:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:152:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:152:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:154:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:154:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:158:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:158:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:171:12: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/testRestAPI.py:170:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:170:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:173:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:173:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:175:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:175:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:180:16: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:180:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:185:30: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:185:30: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:191:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:191:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:192:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:192:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:220:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/testRestAPI.py:223:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:223:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:223:71: E1101: Instance of 'Exception' has no 'message' member (no-member)
testcases/testRestAPI.py:227:57: E1101: Instance of 'Exception' has no 'message' member (no-member)
testcases/testRestAPI.py:228:15: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/testRestAPI.py:229:16: W1503: Redundant use of assertTrue with constant value False (redundant-unittest-assert)
testcases/testRestAPI.py:239:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:239:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:250:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:250:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:260:8: W0612: Unused variable 'r' (unused-variable)
testcases/testRestAPI.py:277:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:277:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:280:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:280:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:291:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:291:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:302:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:302:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:317:8: W0612: Unused variable 'r' (unused-variable)
testcases/testRestAPI.py:328:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:328:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:339:12: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/testRestAPI.py:338:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:338:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:341:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:341:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:343:11: C1802: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (use-implicit-booleaness-not-len)
testcases/testRestAPI.py:357:8: W0622: Redefining built-in 'id' (redefined-builtin)
testcases/testRestAPI.py:354:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:354:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:373:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:373:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:393:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:393:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:403:18: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/testRestAPI.py:403:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/testRestAPI.py:422:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/testRestAPI.py:433:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/testRestAPI.py:74:0: R0904: Too many public methods (24/20) (too-many-public-methods)
testcases/testRestAPI.py:521:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/testRestAPI.py:528:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/testRestAPI.py:43:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.HTTPCheck"  (wrong-import-order)
testcases/testRestAPI.py:43:0: W0611: Unused import logging (unused-import)
************* Module testcases.BisectKernel
testcases/BisectKernel.py:85:0: C0301: Line too long (102/100) (line-too-long)
testcases/BisectKernel.py:106:0: C0301: Line too long (129/100) (line-too-long)
testcases/BisectKernel.py:109:0: C0301: Line too long (103/100) (line-too-long)
testcases/BisectKernel.py:135:0: C0301: Line too long (107/100) (line-too-long)
testcases/BisectKernel.py:136:0: C0301: Line too long (116/100) (line-too-long)
testcases/BisectKernel.py:140:0: C0301: Line too long (104/100) (line-too-long)
testcases/BisectKernel.py:141:0: C0301: Line too long (112/100) (line-too-long)
testcases/BisectKernel.py:160:0: C0301: Line too long (115/100) (line-too-long)
testcases/BisectKernel.py:164:0: C0301: Line too long (117/100) (line-too-long)
testcases/BisectKernel.py:201:0: C0301: Line too long (132/100) (line-too-long)
testcases/BisectKernel.py:220:0: C0301: Line too long (102/100) (line-too-long)
testcases/BisectKernel.py:263:0: C0301: Line too long (107/100) (line-too-long)
testcases/BisectKernel.py:338:0: C0301: Line too long (103/100) (line-too-long)
testcases/BisectKernel.py:343:0: C0301: Line too long (106/100) (line-too-long)
testcases/BisectKernel.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/BisectKernel.py:1:0: C0103: Module name "BisectKernel" doesn't conform to snake_case naming style (invalid-name)
testcases/BisectKernel.py:63:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/BisectKernel.py:64:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/BisectKernel.py:48:0: R0902: Too many instance attributes (18/7) (too-many-instance-attributes)
testcases/BisectKernel.py:122:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:103:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:106:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:109:32: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:111:37: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:117:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:124:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:146:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:135:48: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:136:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:136:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:141:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:141:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:148:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:167:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:160:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:161:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:161:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:164:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:165:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:165:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:169:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:179:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:179:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:183:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:187:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:188:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:188:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:195:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:193:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:194:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:194:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:197:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:198:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:198:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:201:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:202:17: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:202:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:207:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:206:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:207:8: W0612: Unused variable 'e' (unused-variable)
testcases/BisectKernel.py:220:28: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:229:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:229:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:243:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
testcases/BisectKernel.py:249:23: E1101: Class 'Status' has no 'SKIP' member (no-member)
testcases/BisectKernel.py:253:24: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:253:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:263:58: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:264:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:264:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:266:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:282:36: E1101: Class 'Status' has no 'SKIP' member (no-member)
testcases/BisectKernel.py:288:36: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:321:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:302:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:305:40: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:307:21: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:307:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:323:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:326:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BisectKernel.py:340:19: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/BisectKernel.py:339:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:339:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:343:25: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:343:25: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:355:16: R1723: Unnecessary "else" after "break", remove the "else" and de-indent the code inside it (no-else-break)
testcases/BisectKernel.py:357:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:357:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:361:29: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/BisectKernel.py:361:29: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/BisectKernel.py:27:0: W0611: Unused OpSystemState imported from common.OpTestSystem (unused-import)
testcases/BisectKernel.py:29:0: W0611: Unused InstallUtil imported from common.OpTestInstallUtil (unused-import)
************* Module testcases.BasicIPL
testcases/BasicIPL.py:183:9: W0511: FIXME currently we have to go via OFF to ensure we go to petitboot (fixme)
testcases/BasicIPL.py:186:9: W0511: TODO skip if no IPMI (fixme)
testcases/BasicIPL.py:187:9: W0511: TODO use abstracted out-of-band warm reset (fixme)
testcases/BasicIPL.py:149:25: W1401: Anomalous backslash in string: '\]'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
testcases/BasicIPL.py:1:0: C0103: Module name "BasicIPL" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:31:0: E0401: Unable to import 'pexpect' (import-error)
testcases/BasicIPL.py:42:0: C0115: Missing class docstring (missing-class-docstring)
testcases/BasicIPL.py:45:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:46:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:47:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:48:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:60:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:75:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:90:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:99:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:116:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:143:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:143:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:166:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:166:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:181:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:201:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:216:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:216:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/BasicIPL.py:225:0: C0116: Missing function or method docstring (missing-function-docstring)
testcases/BasicIPL.py:226:4: W0621: Redefining name 'suite' from outer scope (line 225) (redefined-outer-name)
testcases/BasicIPL.py:37:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/BasicIPL.py:37:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpalUtils
testcases/OpalUtils.py:83:13: W0511: TODO: Disable stop states here in P9 (fixme)
testcases/OpalUtils.py:1:0: C0103: Module name "OpalUtils" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:55:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpalUtils.py:58:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:59:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:60:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:87:12: C0103: Attribute name "IPOLL_MASK_REGISTER" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:109:12: C0103: Attribute name "TFMR_PURR_REGISTER" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:112:12: C0103: Attribute name "DOORBELL_REG" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:55:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
testcases/OpalUtils.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:68:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpalUtils.py:68:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:92:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:97:12: W0707: Consider explicitly re-raising using 'raise Exception('SCOM read operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:97:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:109:38: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:114:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:119:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:125:12: W0707: Consider explicitly re-raising using 'raise Exception('SCOM write operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:125:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:127:14: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:133:12: W0707: Consider explicitly re-raising using 'raise Exception('SCOM read operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:133:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:122:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:141:12: W0707: Consider explicitly re-raising using 'raise Exception('List gard records operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:141:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:138:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:143:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:149:12: W0707: Consider explicitly re-raising using 'raise Exception('Clear gard records operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:149:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:146:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:157:12: W0707: Consider explicitly re-raising using 'raise Exception('pflash info operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:157:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:154:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:159:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:165:12: W0707: Consider explicitly re-raising using 'raise Exception('pflash read PART operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:165:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:162:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:167:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:173:12: W0707: Consider explicitly re-raising using 'raise Exception('pflash read GUARD PART operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:173:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:170:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:175:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:181:12: W0707: Consider explicitly re-raising using 'raise Exception('pflash erase GUARD operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:181:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:178:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpalUtils.py:189:12: W0707: Consider explicitly re-raising using 'raise Exception('pflash programme GUARD operation failed') from cf' (raise-missing-from)
testcases/OpalUtils.py:189:12: W0719: Raising too general exception: Exception (broad-exception-raised)
testcases/OpalUtils.py:186:12: W0612: Unused variable 'res' (unused-variable)
testcases/OpalUtils.py:191:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpalUtils.py:210:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpalUtils.py:223:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/OpalUtils.py:87:12: W0201: Attribute 'IPOLL_MASK_REGISTER' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:90:12: W0201: Attribute 'IPOLL_MASK_REGISTER' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:109:12: W0201: Attribute 'TFMR_PURR_REGISTER' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:112:12: W0201: Attribute 'DOORBELL_REG' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:202:8: W0201: Attribute 'l_dic' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:204:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:207:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/OpalUtils.py:44:0: C0411: standard import "unittest" should be placed before first party import "common.OpTestConstants.OpTestConstants"  (wrong-import-order)
testcases/OpalUtils.py:50:0: C0411: standard import "logging" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpalUtils.py:47:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/OpalUtils.py:39:0: W0611: Unused import re (unused-import)
testcases/OpalUtils.py:50:0: W0611: Unused import logging (unused-import)
************* Module testcases.DPO
testcases/DPO.py:1:0: C0103: Module name "DPO" doesn't conform to snake_case naming style (invalid-name)
testcases/DPO.py:40:0: E0401: Unable to import 'pexpect' (import-error)
testcases/DPO.py:43:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/DPO.py:44:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/DPO.py:51:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DPO.py:54:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/DPO.py:55:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/DPO.py:56:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/DPO.py:60:0: C0115: Missing class docstring (missing-class-docstring)
testcases/DPO.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/DPO.py:67:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/DPO.py:74:11: R1701: Consider merging these isinstance calls to isinstance(self.cv_SYSTEM.console, (OpTestMambo.MamboConsole, OpTestQemu.QemuConsole)) (consider-merging-isinstance)
testcases/DPO.py:64:8: W0201: Attribute 'host' defined outside __init__ (attribute-defined-outside-init)
testcases/DPO.py:39:0: C0411: standard import "unittest" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/DPO.py:40:0: C0411: third party import "pexpect" should be placed before first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError"  (wrong-import-order)
testcases/DPO.py:46:0: C0411: standard import "logging" should be placed before third party import "pexpect" and first party imports "common.OpTestConstants.OpTestConstants", "common.OpTestError.OpTestError", "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestQemu", "common.OpTestMambo"  (wrong-import-order)
testcases/DPO.py:42:0: C0412: Imports from package common are not grouped (ungrouped-imports)
testcases/DPO.py:36:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/DPO.py:37:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/DPO.py:46:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestKexec
testcases/OpTestKexec.py:1:0: C0103: Module name "OpTestKexec" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestKexec.py:115:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestKexec.py:117:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestKexec.py:61:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
testcases/OpTestKexec.py:264:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestKexec.py:264:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestKexec.py:392:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestKexec.py:392:17: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestKexec.py:398:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestKexec.py:398:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
************* Module testcases.PetitbootDropbearServer
testcases/PetitbootDropbearServer.py:1:0: C0103: Module name "PetitbootDropbearServer" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootDropbearServer.py:41:0: W0404: Reimport 'subprocess' (imported line 40) (reimported)
testcases/PetitbootDropbearServer.py:54:0: C0115: Missing class docstring (missing-class-docstring)
testcases/PetitbootDropbearServer.py:57:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootDropbearServer.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/PetitbootDropbearServer.py:59:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/PetitbootDropbearServer.py:72:8: W0107: Unnecessary pass statement (unnecessary-pass)
testcases/PetitbootDropbearServer.py:49:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState"  (wrong-import-order)
testcases/PetitbootDropbearServer.py:39:0: W0611: Unused import time (unused-import)
testcases/PetitbootDropbearServer.py:40:0: W0611: Unused import subprocess (unused-import)
testcases/PetitbootDropbearServer.py:42:0: W0611: Unused import re (unused-import)
testcases/PetitbootDropbearServer.py:43:0: W0611: Unused import sys (unused-import)
testcases/PetitbootDropbearServer.py:49:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestHeartbeat
testcases/OpTestHeartbeat.py:34:0: C0301: Line too long (110/100) (line-too-long)
testcases/OpTestHeartbeat.py:1:0: C0103: Module name "OpTestHeartbeat" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHeartbeat.py:51:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHeartbeat.py:52:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHeartbeat.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHeartbeat.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestHeartbeat.py:58:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestHeartbeat.py:56:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestHeartbeat.py:64:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestHeartbeat.py:67:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
************* Module testcases.InstallHostOS
testcases/InstallHostOS.py:96:0: C0301: Line too long (121/100) (line-too-long)
testcases/InstallHostOS.py:97:0: C0301: Line too long (113/100) (line-too-long)
testcases/InstallHostOS.py:98:0: C0301: Line too long (125/100) (line-too-long)
testcases/InstallHostOS.py:99:0: C0301: Line too long (125/100) (line-too-long)
testcases/InstallHostOS.py:100:0: C0301: Line too long (122/100) (line-too-long)
testcases/InstallHostOS.py:101:0: C0301: Line too long (121/100) (line-too-long)
testcases/InstallHostOS.py:102:0: C0301: Line too long (104/100) (line-too-long)
testcases/InstallHostOS.py:1:0: C0103: Module name "InstallHostOS" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:37:0: C0115: Missing class docstring (missing-class-docstring)
testcases/InstallHostOS.py:40:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:41:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:42:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:43:8: C0103: Attribute name "cv_BMC" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/InstallHostOS.py:61:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:61:4: R0914: Too many local variables (16/15) (too-many-locals)
testcases/InstallHostOS.py:71:8: C0103: Variable name "OpIU" doesn't conform to snake_case naming style (invalid-name)
testcases/InstallHostOS.py:95:21: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:96:26: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:104:18: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:109:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:110:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:111:31: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/InstallHostOS.py:103:12: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
************* Module testcases.gcov
testcases/gcov.py:87:0: C0301: Line too long (101/100) (line-too-long)
testcases/gcov.py:45:0: C0103: Class name "gcov" doesn't conform to PascalCase naming style (invalid-name)
testcases/gcov.py:60:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:61:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:62:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/gcov.py:58:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/gcov.py:65:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:65:4: R0914: Too many local variables (18/15) (too-many-locals)
testcases/gcov.py:66:8: E1101: Instance of 'gcov' has no 'setup_test' member (no-member)
testcases/gcov.py:68:22: E1101: Instance of 'gcov' has no 'c' member (no-member)
testcases/gcov.py:71:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/gcov.py:71:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:74:12: E1101: Instance of 'gcov' has no 'skipTest' member (no-member)
testcases/gcov.py:76:12: E1101: Instance of 'gcov' has no 'c' member (no-member)
testcases/gcov.py:81:15: W0718: Catching too general exception Exception (broad-exception-caught)
testcases/gcov.py:80:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/gcov.py:80:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:82:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/gcov.py:82:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:83:12: E1101: Instance of 'gcov' has no 'fail' member (no-member)
testcases/gcov.py:86:12: E1101: Instance of 'gcov' has no 'fail' member (no-member)
testcases/gcov.py:89:8: C0103: Variable name "HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:89:14: C0103: Variable name "PORT" doesn't conform to snake_case naming style (invalid-name)
testcases/gcov.py:94:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:97:24: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:98:12: E1101: Instance of 'gcov' has no 'c' member (no-member)
testcases/gcov.py:103:16: W0603: Using the global statement (global-statement)
testcases/gcov.py:106:35: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/gcov.py:112:37: C0321: More than one statement on a single line (multiple-statements)
testcases/gcov.py:114:12: E1101: Instance of 'gcov' has no 'c' member (no-member)
testcases/gcov.py:115:8: E1101: Instance of 'gcov' has no 'c' member (no-member)
testcases/gcov.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/gcov.py:125:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/gcov.py:133:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/gcov.py:135:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/gcov.py:37:0: C0411: standard import "socket" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestInstallUtil"  (wrong-import-order)
testcases/gcov.py:39:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestInstallUtil"  (wrong-import-order)
testcases/gcov.py:39:0: W0611: Unused import logging (unused-import)
************* Module testcases.OpTestNVRAM
testcases/OpTestNVRAM.py:64:0: C0301: Line too long (127/100) (line-too-long)
testcases/OpTestNVRAM.py:1:0: C0103: Module name "OpTestNVRAM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:39:0: W0404: Reimport 'subprocess' (imported line 38) (reimported)
testcases/OpTestNVRAM.py:56:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestNVRAM.py:64:15: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestNVRAM.py:67:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestNVRAM.py:70:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:71:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:72:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestNVRAM.py:78:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestNVRAM.py:81:16: W0707: Consider explicitly re-raising using 'raise NVRAMUpdateError(i_part, key, value, ''.join(cf.output)) from cf' (raise-missing-from)
testcases/OpTestNVRAM.py:85:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestNVRAM.py:88:16: W0707: Consider explicitly re-raising using 'raise NVRAMUpdateError(i_part, key, value, ''.join(cf.output)) from cf' (raise-missing-from)
testcases/OpTestNVRAM.py:91:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/OpTestNVRAM.py:91:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/OpTestNVRAM.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestNVRAM.py:95:4: C0103: Method name "doNVRAMTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:95:4: R0915: Too many statements (55/50) (too-many-statements)
testcases/OpTestNVRAM.py:97:8: W0201: Attribute 'console' defined outside __init__ (attribute-defined-outside-init)
testcases/OpTestNVRAM.py:177:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestNVRAM.py:177:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:182:0: C0115: Missing class docstring (missing-class-docstring)
testcases/OpTestNVRAM.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/OpTestNVRAM.py:183:4: C0103: Method name "runTest" doesn't conform to snake_case naming style (invalid-name)
testcases/OpTestNVRAM.py:51:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.OpTestConstants.OpTestConstants", "common.Exceptions.CommandFailed"  (wrong-import-order)
testcases/OpTestNVRAM.py:37:0: W0611: Unused import time (unused-import)
testcases/OpTestNVRAM.py:38:0: W0611: Unused import subprocess (unused-import)
testcases/OpTestNVRAM.py:41:0: W0611: Unused import sys (unused-import)
testcases/OpTestNVRAM.py:42:0: W0611: Unused import os (unused-import)
testcases/OpTestNVRAM.py:43:0: W0611: Unused import os.path (unused-import)
testcases/OpTestNVRAM.py:49:0: W0611: Unused OpTestConstants imported from common.OpTestConstants as BMC_CONST (unused-import)
testcases/OpTestNVRAM.py:51:0: W0611: Unused import logging (unused-import)
************* Module testcases.Petitboot10000Disks
testcases/Petitboot10000Disks.py:1:0: C0114: Missing module docstring (missing-module-docstring)
testcases/Petitboot10000Disks.py:1:0: C0103: Module name "Petitboot10000Disks" doesn't conform to snake_case naming style (invalid-name)
testcases/Petitboot10000Disks.py:13:0: C0115: Missing class docstring (missing-class-docstring)
testcases/Petitboot10000Disks.py:25:12: W0612: Unused variable 'i' (unused-variable)
testcases/Petitboot10000Disks.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/Petitboot10000Disks.py:30:4: C0103: Method name "testListDisks" doesn't conform to snake_case naming style (invalid-name)
testcases/Petitboot10000Disks.py:3:0: W0611: Unused import time (unused-import)
testcases/Petitboot10000Disks.py:7:0: W0611: Unused OpTestUtil imported from common.OpTestUtil (unused-import)
testcases/Petitboot10000Disks.py:9:0: W0611: Unused OpTestError imported from common.OpTestError (unused-import)
testcases/Petitboot10000Disks.py:10:0: W0611: Unused OpTestKeys imported from common.OpTestKeys as keys (unused-import)
************* Module testcases.IplParams
testcases/IplParams.py:193:0: C0301: Line too long (145/100) (line-too-long)
testcases/IplParams.py:224:0: C0301: Line too long (106/100) (line-too-long)
testcases/IplParams.py:225:0: C0301: Line too long (155/100) (line-too-long)
testcases/IplParams.py:227:0: C0301: Line too long (147/100) (line-too-long)
testcases/IplParams.py:243:0: C0301: Line too long (105/100) (line-too-long)
testcases/IplParams.py:253:0: C0301: Line too long (106/100) (line-too-long)
testcases/IplParams.py:254:0: C0301: Line too long (155/100) (line-too-long)
testcases/IplParams.py:256:0: C0301: Line too long (147/100) (line-too-long)
testcases/IplParams.py:273:0: C0301: Line too long (106/100) (line-too-long)
testcases/IplParams.py:1:0: C0103: Module name "IplParams" doesn't conform to snake_case naming style (invalid-name)
testcases/IplParams.py:36:0: R0402: Use 'from common import OpTestMambo' instead (consider-using-from-import)
testcases/IplParams.py:37:0: R0402: Use 'from common import OpTestQemu' instead (consider-using-from-import)
testcases/IplParams.py:44:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IplParams.py:47:8: C0103: Attribute name "cv_HOST" doesn't conform to snake_case naming style (invalid-name)
testcases/IplParams.py:48:8: C0103: Attribute name "cv_IPMI" doesn't conform to snake_case naming style (invalid-name)
testcases/IplParams.py:49:8: C0103: Attribute name "cv_SYSTEM" doesn't conform to snake_case naming style (invalid-name)
testcases/IplParams.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:45:4: C0103: Method name "setUp" doesn't conform to snake_case naming style (invalid-name)
testcases/IplParams.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:179:27: E1101: Instance of 'IplParams' has no 'c' member (no-member)
testcases/IplParams.py:184:22: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/IplParams.py:184:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:185:15: C0117: Consider changing "not self.revision in ['2.2', '2.3']" to "self.revision not in ['2.2', '2.3']" (unnecessary-negation)
testcases/IplParams.py:196:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
testcases/IplParams.py:205:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
testcases/IplParams.py:206:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:211:12: E1101: Instance of 'IplParams' has no 'c' member (no-member)
testcases/IplParams.py:212:16: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:219:8: E1101: Instance of 'IplParams' has no 'setup_test' member (no-member)
testcases/IplParams.py:222:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/IplParams.py:222:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:235:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:237:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:243:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:245:12: E1101: Instance of 'IplParams' has no 'assertTrue' member (no-member)
testcases/IplParams.py:247:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:248:8: E1101: Instance of 'IplParams' has no 'setup_test' member (no-member)
testcases/IplParams.py:251:12: W1202: Use lazy % formatting in logging functions (logging-format-interpolation)
testcases/IplParams.py:251:12: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:264:19: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:266:23: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:273:22: C0209: Formatting a regular string which could be an f-string (consider-using-f-string)
testcases/IplParams.py:275:12: E1101: Instance of 'IplParams' has no 'assertTrue' member (no-member)
testcases/IplParams.py:179:8: W0201: Attribute 'cpu' defined outside __init__ (attribute-defined-outside-init)
testcases/IplParams.py:182:12: W0201: Attribute 'revision' defined outside __init__ (attribute-defined-outside-init)
testcases/IplParams.py:278:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IplParams.py:279:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:282:11: R1701: Consider merging these isinstance calls to isinstance(self.cv_SYSTEM.console, (OpTestMambo.MamboConsole, OpTestQemu.QemuConsole)) (consider-merging-isinstance)
testcases/IplParams.py:281:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IplParams.py:287:0: C0115: Missing class docstring (missing-class-docstring)
testcases/IplParams.py:288:4: C0116: Missing function or method docstring (missing-function-docstring)
testcases/IplParams.py:291:11: R1701: Consider merging these isinstance calls to isinstance(self.cv_SYSTEM.console, (OpTestMambo.MamboConsole, OpTestQemu.QemuConsole)) (consider-merging-isinstance)
testcases/IplParams.py:290:8: W0201: Attribute 'c' defined outside __init__ (attribute-defined-outside-init)
testcases/IplParams.py:39:0: C0411: standard import "logging" should be placed before first party imports "OpTestConfiguration", "common.OpTestSystem.OpSystemState", "common.Exceptions.CommandFailed", "common.OpTestMambo", "common.OpTestQemu"  (wrong-import-order)
testcases/IplParams.py:39:0: W0611: Unused import logging (unused-import)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.autopylint:[37:373]
==src.autopylint:[37:373]
logging.basicConfig(level=logging.DEBUG)
LOGGER = logging.getLogger(__name__)


Item = namedtuple("Item", ["type", "line_no", "line_offset", "desc", "error"])


def item_assert(item):
    """ Assert that Item is correctly constructed """
    assert isinstance(item.type, str)
    assert isinstance(item.desc, str)
    assert isinstance(item.error, str)
    assert isinstance(item.line_no, int)
    assert isinstance(item.line_offset, int)
    assert item.desc
    assert item.type
    assert item.error


def item_maker(match):
    """ Helper function for making an Item from a dict """
    return Item(
        match["type"],
        int(match["where1"]) - 1,
        int(match["where2"]),
        match["desc"].rstrip(),
        match["error"].rstrip()
    )


def start_of_function_def(editor, start_line):
    """ Find where a function starts, beginning with `start_line` and working backward """
    for i in reversed(range(start_line + 1)):
        if editor.lines[i].lstrip().startswith("def "):
            return i
    return None


def end_of_function_def(editor, start_line):
    """ Find where a function ends, beginning with `start_line` and working forward """
    for i in range(start_line, len(editor.lines)):
        if editor.lines[i].endswith("):"):
            return i
    return None


def end_of_string_doc(editor, start_line):
    """ Find where a docstring ends, beginning with `start_line` and working forward """
    for i in range(start_line, len(editor.lines)):
        if editor.lines[i].endswith(('"""', "'''")):
            return i
    return None


def get_indent(src):
    """ Helper function to get the leading whitespace from a line """
    match = re.match(r"^(\s*)(.*)$", src)
    return match.group(1), match.group(2)


def line_split(s, length):
    """ Helper method to split lines """
    def get_counts(s, k):
        """ Calculate indexes where character is 'k' """
        return [i for i, c in enumerate(s) if c == k]

    #def remove_negative_counts(counts):
    #    """ Filter the Counter to remove items with non+ counts """
    #    return Counter({k: v for k, v in counts.items() if v > 0})

    if len(s) <= length:
        result = [s]
    elif s.lstrip().startswith("#"):
        # Hard/annoying to split a long comment
        result = [s]
    elif re.match(r"^.*?#.*$", s):
        ind0, non_indent = get_indent(s)
        i = non_indent.index('#')
        non_comment, comment = non_indent[:i].rstrip(), non_indent[i:]
        if all(len(ind0 + part) < length
               for part in (comment, non_comment)):
            result = [
                ind0 + comment,
                ind0 + non_comment,
            ]
        else:
            result = None
    else:
        ind0, non_indent = get_indent(s)
        ind1 = ind0 + 2 * "    "
        m1 = IF_STMT_OR.match(non_indent)
        m2 = IF_STMT_AND.match(non_indent)
        if m1 or m2:
            g, conj = (
                (m1.groupdict(), " or") if m1 else
                (m2.groupdict(), " and")
            )
            result = [
                ind0 + "if (",
                ind1 + g["first"] + conj,
                ind1 + g["second"],
                ind0 + "):"
            ]
        else:
            counts = Counter({
                k: get_counts(s, k)
                for k in """()[]{}"'"""
            })
            # counts = remove_negative_counts(counts)

            cv = [a for a in counts.values() if a]
            if cv:
                mi, ma = min(a[0] for a in cv), max(a[-1] for a in cv)
                pair = s[mi] + s[ma]
                if pair in {'()', '{}', '[]'}:
                    result = [
                        s[:mi + 1],
                        ind1 + s[mi + 1:ma],
                        ind0 + s[ma:]
                    ]
                else:
                    result = None
            else:
                LOGGER.info("Weird: {0}".format(counts))
                result = None
    return result

def find_string(s):
    """ Find start and end of a quoted string """
    result = next((i, c) for i, c in enumerate(s) if c in ('"', "'"))
    if result is not None:
        start, quote_char = result
        end = next(
            i for i, c in enumerate(s[start + 1: ])
            if c == quote_char and s[i - 1] != '\\'
        )
        if end is not None:
            return (start, start + end + 1)
    return None, None


class DerivedStreamEditor(StreamEditor):
    """
    Simple derived class to allow simple stream-editing.
    """
    table = [None]
    def apply_match(self, *_):  # pylint: disable=arguments-differ
        """ Required method for StreamEditor """
        pass


class EditorOptions(object):
    """ Hack: make an object to initialize StreamEditor """
    def __init__(self):
        self.verbose = True
        self.ext = None
        self.new_ext = None
        self.dryrun = False


def bad_whitespace(editor, item):
    """ Pylint method to fix bad-whitespace error """
    line_no = item.line_no
    error_text = editor.lines[line_no]
    x = WHITESPACE_TABLE.get(item.desc)
    if x:
        repaired_line = error_text
        for regex, repl, kwargs in x:
            r = re.compile(regex)
            m = r.match(repaired_line)
            if not m:
                LOGGER.debug("No match: {0} | {1}".format(regex, repaired_line))
            repaired_line = re.sub(regex, repl, repaired_line, **kwargs)

        # Sometimes, these fixes add trailing whitespace to lines
        repaired_line = repaired_line.rstrip()

        if error_text == repaired_line:
            LOGGER.debug("Bad whitespace repair: {0}".format(repaired_line))
            LOGGER.debug("Repair: {0}".format(item.desc))
            LOGGER.debug("regex applied: {0}".format(x))
        editor.replace_range((line_no, line_no + 1), [repaired_line])
    else:
        LOGGER.info("No match on '{0}'".format(item.desc))

    return (line_no, 0)


def bad_continuation(editor, item):
    """ Pylint method to fix bad-continuation error """
    line_no = item.line_no
    error_text = editor.lines[line_no]
    m = CONTINUATION.match(item.desc) or HANGING.match(item.desc)
    if m:
        g = m.groupdict()
        verb, count = g.get("verb"), int(g.get("count"))
        if verb:
            repaired_line = (
                error_text[count:] if verb == "remove" else
                (" " * count) + error_text if verb == "add" else
                None
            )
            if repaired_line is not None:
                editor.replace_range((line_no, line_no + 1), [repaired_line])
        else:
            LOGGER.debug("Missing verb in 'bad_continuation': {0}".format(item.desc))
    else:
        LOGGER.debug("No match {1}: {0}".format(error_text, line_no))
    return (line_no, 0)


def trailing_newline(editor, item):
    """ Pylint method to fix trailing-newline error """
    line_no = item.line_no
    loc = (
        next(
            x for x in reversed(range(line_no, len(editor.lines)))
            if not re.match(r'^\s*$', editor.lines[x])
        ) or line_no,
        len(editor.lines)
    )
    editor.delete_range(loc)
    return (line_no, loc[1] - loc[0])


def no_self_use(editor, item):
    """ Pylint method to fix no_self_use error """
    line_no = item.line_no
    LOGGER.info("no_self_use: {0}".format(line_no))
    error_text = editor.lines[line_no]
    LOGGER.info(error_text)
    decorator_line_no = start_of_function_def(editor, line_no)
    indent, _ = get_indent(editor.lines[decorator_line_no])
    editor.lines[line_no] = error_text.replace("self, ", "").replace("(self)", "()")
    editor.insert_range(decorator_line_no, ["{0}@staticmethod".format(indent)])
    return (decorator_line_no, 1)


def no_value_for_parameter(editor, item):
    """ Pylint method to fix no_value_for_parameter error """
    line_no = item.line_no
    return (line_no, 0)


def superfluous_parens(editor, item):
    """ Pylint method to fix superfluous_parens error """
    line_no = item.line_no
    return (line_no, 0)


def missing_docstring(editor, item):
    """ Pylint method to fix missing_docstring error """
    item_assert(item)
    line_no = item.line_no
    error_text = editor.lines[line_no]
    indent, rest = get_indent(error_text)
    new_indent = indent + "    "

    if rest.startswith("def "):
        func = editor.append_range
        docstring = '{0}""" Pro forma function/method docstring """'.format(new_indent)
        i = end_of_function_def(editor, line_no)
    elif rest.startswith("class "):
        func = editor.append_range
        docstring = '{0}""" Pro forma class docstring """'.format(new_indent)
        i = line_no
    else:
        # Missing docstring is at module scope
        func = editor.insert_range
        docstring = '""" Pro forma module docstring """'
        i = line_no

    rep = i is not None
    if rep:
        func(i, [docstring])
    return (line_no, int(rep))


def invalid_name(editor, item):
    """ Pylint method to fix invalid_name error """
    line_no = item.line_no
    return (line_no, 0)


def unused_import(editor, item):
    """ Pylint method to fix unused_import error """
    line_no = item.line_no
    result = (line_no, 0)
    error_text = editor.lines[line_no]
    remove = item.desc.split(' ')[1]
    m = FROM_IMP.match(error_text)
    if m:
        groups = m.groupdict()
        library = groups["library"]
        imports = [imp.strip() for imp in groups["imports"].split(',')]
        LOGGER.debug("imports: {0}".format(imports))
        LOGGER.debug("remove: {0}".format(remove))
        final_imports = set(imports) - set([remove])
        LOGGER.debug("{0}: {1}".format(library, ", ".join(final_imports) or "<empty>"))
        if not final_imports:
            # With the import removed, the line has no operative imports -- remove line
            loc = (line_no, line_no)
            LOGGER.debug("deleting: {0}".format(loc))
            LOGGER.debug("0 <= {0} <= {1} <= {2}".format(loc[0], loc[1], len(editor.lines)))
            editor.delete_range(loc)
            result = (line_no + 1, -1)
        else:
            # Format a new line with the unused removed and the remaining imports sorted
            repaired_line = "from {0} import {1}".format(
                library,
                ", ".join(sorted(final_imports))
            )
            loc = (line_no, line_no + 1)
            editor.replace_range(loc, [repaired_line])
    return result


def misplaced_comparison_constant(editor, item):
    """ Pylint method to fix misplaced_comparison_constant error """
    line_no = item.line_no
    return (line_no, 0)


def len_as_condition(editor, item):
    """ Pylint method to fix len-as-condition error """
    zero_cmp = re.compile(r'''
        ^(?P<left>.*?)
        len\((?P<len>.*?)\)
        \s+==\s+0
        (?P<right>.*)$
    ''', re.VERBOSE)
    nzero_cmp = re.compile(r'''
        ^(?P<left>.*?)
        len\((?P<len>.*?)\)
        \s+!=\s+0
        (?P<right>.*)$ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.action_regex:[6:67]
==src.action_regex:[6:67]
STD_IMPORT = re.compile(r"""
    ^
    standard\simport\s
    \"(?P<before>[^"]+)\"
    \sshould\sbe\splaced\sbefore\s
    \"(?P<after>[^"]+)\"
    $
""", re.VERBOSE)

FROM_IMP = re.compile(r"""
    ^
    from
    \s+(?P<library>[\w\d_\.]+)
    \s+import
    \s+(?P<imports>[\w\d_\.,\s]+)
    $
""", re.VERBOSE)

IF_STMT_AND = re.compile(r"""
    ^
    if\s+
    (?P<first>.*?)
    \s+and\s+
    (?P<second>.*?):
    $
""", re.VERBOSE)


IF_STMT_OR = re.compile(r"""
    ^
    if\s+
    (?P<first>.*?)
    \s+or\s+
    (?P<second>.*?):
    $
""", re.VERBOSE)


CONTINUATION = re.compile(r"""
    ^
    Wrong\scontinued\sindentation\s
    \(
    (?P<verb>.*?)
    \s(?P<count>\d+)\s+spaces
    \)
    \.
    $
""", re.VERBOSE)


HANGING = re.compile(r"""
    ^
    Wrong\shanging\sindentation\s
    (
        \(
        (?P<verb>.*?)
        \s(?P<count>\d+)\s+spaces
        \)
    )?
    \.
    $ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.repair_regex:[4:55]
==src.repair_regex:[4:55]
COMPARISONS = r"(>=|<=|>|<|!=|==)"
ASSIGNMENTS = r"(\+=|-=|/=|\*=|=)"
START_BRACKETS = r"(\{|\[|\()"
END_BRACKETS = r"(\}|\]|\))"

WHITESPACE_TABLE = {
    "Exactly one space required after :": [
        (r":\s*(\S+)", r": \1", {}),
        # (r":\s+", ": "),
        # (r":(\S+)", r": \1"),
    ],
    "Exactly one space required after comma": [
        (r"(.*?),\s*", r"\1, ", {}),
    ],
    "Exactly one space required after comparison": [
        (r"(.*?){0}\s*(\S+)".format(COMPARISONS), r"\1\2 \3", {}),
        # (r"(.*){0}\s+".format(COMPARISONS), r"\1\2 ", {}),
        # (r"(.*){0}(\S+)".format(COMPARISONS), r"\1\2 \3", {}),
    ],
    "Exactly one space required around assignment": [
        (r"(.*?[\w\d_\[\]\(\)]+)\s*{0}\s*(\S+)".format(ASSIGNMENTS), r"\1 \2 \3", {'count': 1}),
        # (r"(.*\S+)=\s+", r"\1 = ", {'count': 1}),
        # (r"(.*)\s+=(\S+)", r"\1 = \2", {'count': 1}),
        # (r"(.*)\s+=\s+", r"\1 = ", {'count': 1}),
    ],
    "Exactly one space required around comparison": [
        (r"(.*\S+)\s*{0}\s*".format(COMPARISONS), r"\1 \2 ", {}),
        # (r"(.*)\s+{0}\s+".format(COMPARISONS), r"\1 \2", {}),
        # (r"(.*\S+){0}\s+".format(COMPARISONS), r"\1 \2 ", {}),
        # (r"(.*)\s+{0}(\S+)".format(COMPARISONS), r"\1 \2 \3", {}),
        # (r"(.*\S+){0}(\S+)".format(COMPARISONS), r"\1 \2 \3", {}),
    ],
    "No space allowed around keyword argument assignment": [
        (r"(.*\S+)\s*{0}\s*(\S+)".format(ASSIGNMENTS), r"\1\2\3", {'count': 1}),
        # (r"(.*\S+)=\s+", r"\1=", {'count': 1}),
        # (r"(.*)\s+=(\S+)", r"\1=\2", {'count': 1}),
        # (r"(.*\S+)=(\S+)", r"\1=\2", {'count': 1}),
    ],
    "No space allowed before :": [
        (r"(.*?)\s+:", r"\1:", {}),
    ],
    "No space allowed after bracket": [
        (r"(.*?){0}\s+".format(START_BRACKETS), r"\1\2", {}),
    ],
    "No space allowed before bracket": [
        (r"(.*?)\s+{0}".format(END_BRACKETS), r"\1\2", {}),
    ],
    "No space allowed before comma": [
        (r"(.*?)\s+,", r"\1,", {}),
    ],
} (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.table_regex:[6:53]
==src.table_regex:[6:53]
MODULE_NAME = re.compile(r"""
    ^\*+\s
    Module\s+
    (?P<filename>[\w\d\._-]+)
    $
""", re.VERBOSE)

#C: 75, 0: Unnecessary parens after 'print' keyword (superfluous-parens)
#C: 14, 0: Too many lines in module (6953/1000) (too-many-lines)
PYLINT_ITEM = re.compile(r"""
    ^
    (?P<type>[ERCW]):
    \s*
    (?P<where1>\d+),
    \s*
    (?P<where2>-?\d+):
    \s+
    (?P<desc>[\w\d\s\.\(\)/',]+?)
    \s
    \(
    (?P<error>[\w_\.-]+?)
    \)
    $
""", re.VERBOSE)


# Some pylint errors do not have the error type until the second line after.
PYLINT_SEMI_ITEM = re.compile(r"""
    ^
    (?P<type>[ERCW]):
    \s*
    (?P<where1>\d+),
    \s*
    (?P<where2>-?\d+):
    \s+
    (?P<desc>[\w\d\s\.\(\)/]+?)
    $
""", re.VERBOSE)


PYLINT_ERROR_ITEM = re.compile(r"""
    ^
    [\^\s\|]+
    \(
    (?P<error>[\w_\.-]+)
    \)
    $ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallRhel:[105:128]
==testcases.InstallUbuntu:[179:204]
            cmd = "[ -f %s ]&& rm -f %s;[ -f %s ] && rm -f %s;true" % (vmlinux,
                                                                       vmlinux,
                                                                       initrd,
                                                                       initrd)
            self.c.run_command(cmd)
            try:
                log.debug("Install OPEN marker for wget vmlinux")
                self.c.run_command("wget http://%s:%s/%s" %
                                   (my_ip, port, vmlinux), timeout=300)
                log.debug("Install CLOSE marker for wget vmlinux")
                log.debug("Install OPEN marker for wget initrd")
                self.c.run_command("wget http://%s:%s/%s" %
                                   (my_ip, port, initrd), timeout=300)
                log.debug("Install CLOSE marker for wget initrd")
                log.debug("Install OPEN marker for kexec")
                self.c.run_command("kexec -i %s -c \"%s\" %s -l" % (initrd,
                                                                    kernel_args,
                                                                    vmlinux), timeout=300)
                log.debug("Install CLOSE marker for kexec")
            except Exception as e:
                log.debug("wget or kexec Exception={}".format(e))
            raw_pty = self.c.get_console()
            raw_pty.sendline("kexec -e")

        # Do things (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[169:200]
==common.OpTestQemu:[259:293]
        except Exception as e:
            self.state = ConsoleState.DISCONNECTED
            raise CommandFailed('OPexpect.spawn',
                                'OPexpect.spawn encountered a problem: ' + str(e), -1)

        self.state = ConsoleState.CONNECTED
        self.pty.setwinsize(1000, 1000)
        if self.delaybeforesend:
            self.pty.delaybeforesend = self.delaybeforesend

        if self.system.SUDO_set != 1 or self.system.LOGIN_set != 1 or self.system.PS1_set != 1:
            self.util.setup_term(self.system, self.pty,
                                 None, self.system.block_setup_term)

        time.sleep(0.2)
        if not self.pty.isalive():
            raise CommandFailed(cmd, self.pty.read(), self.pty.status)
        return self.pty

    def get_console(self):
        if self.state == ConsoleState.DISCONNECTED:
            self.util.clear_state(self)
            self.connect()
        else:
            if self.system.SUDO_set != 1 or self.system.LOGIN_set != 1 or self.system.PS1_set != 1:
                self.util.setup_term(self.system, self.pty,
                                     None, self.system.block_setup_term)

        return self.pty

    def run_command(self, command, timeout=60, retry=0): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[38:64]
==testcases.InstallRhel:[42:68]
        self.conf = OpTestConfiguration.conf
        self.cv_HOST = self.conf.host()
        self.cv_IPMI = self.conf.ipmi()
        self.cv_SYSTEM = self.conf.system()
        self.cv_BMC = self.conf.bmc()
        self.bmc_type = self.conf.args.bmc_type
        if not (self.conf.args.os_repo or self.conf.args.os_cdrom):
            self.fail(
                "Provide installation media for installation, --os-repo is missing")
        if not (self.conf.args.host_ip and self.conf.args.host_gateway and self.conf.args.host_dns
                and self.conf.args.host_submask and self.conf.args.host_mac):
            self.fail(
                "Provide host network details refer, --host-{ip,gateway,dns,submask,mac}")
        if not (self.conf.args.host_user and self.conf.args.host_password):
            self.fail(
                "Provide host user details refer, --host-{user,password}")
        if not self.conf.args.host_scratch_disk:
            self.fail(
                "Provide proper host disk to install refer, --host-scratch-disk")
        if not self.conf.args.host_name:
            self.fail("Provide hostname to be set during installation")

    def runTest(self):
        self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)

        # Local path to keep install files (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[196:239]
==common.SerialConsole:[72:115]
        self.util = OpTestUtil()
        self.prompt = prompt
        self.expect_prompt = self.util.build_prompt(prompt) + "$"
        self.pty = None
        self.delaybeforesend = delaybeforesend
        # allows caller specific control of when to block setup_term
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0

        # FUTURE - System Console currently tracked in System Object
        # state tracking, reset on boot and state changes
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system):
        self.system = system

    def set_system_setup_term(self, flag):
        self.system.block_setup_term = flag

    def get_system_setup_term(self):
        return self.system.block_setup_term

    def set_block_setup_term(self, flag):
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self):
        self.util.clear_state(self) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[91:108]
==testcases.InstallRhel:[93:110]
        port = OpIU.start_server(my_ip)

        if "qemu" not in self.bmc_type:
            ks_url = 'http://%s:%s/%s' % (my_ip, port, ks)
            kernel_args = "ifname=net0:%s ip=%s::%s:%s:%s:net0:none nameserver=%s inst.ks=%s" % (self.conf.args.host_mac,
                                                                                                 self.cv_HOST.ip,
                                                                                                 self.conf.args.host_gateway,
                                                                                                 self.conf.args.host_submask,
                                                                                                 self.conf.args.host_name,
                                                                                                 self.conf.args.host_dns,
                                                                                                 ks_url)
            self.c = self.cv_SYSTEM.console
            cmd = "[ -f %s ]&& rm -f %s;[ -f %s ] && rm -f %s;true" % (vmlinux,
                                                                       vmlinux,
                                                                       initrd,
                                                                       initrd)
            self.c.run_command(cmd) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[70:88]
==testcases.InstallRhel:[74:93]
        OpIU = OpTestInstallUtil.InstallUtil(base_path=base_path,
                                             vmlinux=vmlinux,
                                             initrd=initrd,
                                             ks=ks,
                                             boot_path=boot_path)
        my_ip = OpIU.get_server_ip()
        if not my_ip:
            self.fail("Unable to get the ip from host")

        if self.conf.args.os_cdrom and not self.conf.args.os_repo:
            repo = OpIU.setup_repo(self.conf.args.os_cdrom)
        if self.conf.args.os_repo:
            repo = self.conf.args.os_repo
        if not repo:
            self.fail("No valid repo to start installation")
        if not OpIU.extract_install_files(repo):
            self.fail("Unable to download install files")

        # start our web server (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHost:[874:895]
==testcases.OpTestPNOR:[82:100]
        for line in d:
            s = re.search(partition, line)
            if s:
                m = re.match(
                    r'ID=\d+\s+\S+\s+((0[xX])?[0-9a-fA-F]+)..(0[xX])?[0-9a-fA-F]+\s+\(actual=((0[xX])?[0-9a-fA-F]+)\)\s(\[)?([A-Za-z-]+)?(\])?.*', line)
                if not m:
                    continue
                offset = int(m.group(1), 16)
                length = int(m.group(4), 16)
                ret = {'offset': offset,
                       'length': length
                       }
                flags = m.group(7)
                if flags:
                    ret['flags'] = [x for x in list(flags) if x != '-']
                return ret

    def host_has_capi_fpga_card(self, console=0):
        '''
        Check that host has a CAPI FPGA card
        ''' (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.AT24driver:[74:93]
==testcases.I2C:[84:103]
        l_kernel = self.cv_HOST.host_get_kernel_version()

        mods = {"CONFIG_I2C_OPAL": "i2c_opal",
                "CONFIG_I2C_CHARDEV": "i2c_dev",
                "CONFIG_EEPROM_AT24": "at24"}

        try:
            for (c, m) in list(mods.items()):
                self.cv_HOST.host_load_module_based_on_config(l_kernel, c, m)
        except KernelConfigNotSet as ns:
            self.assertTrue(False, str(ns))
        except KernelModuleNotLoaded as km:
            if km.module == "at24":
                # We can fail if we don't load it, not all systems have it
                pass
            else:
                self.assertTrue(False, str(km))

        # Get infomtion of EEPROM chips (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestEBMC:[141:161]
==common.OpTestOpenBMC:[1036:1054]
        self.rest_api = rest_api
        self.has_vpnor = None
        self.logfile = logfile

        self.console = OpTestSSH(ip, username, password, port=2200,
                                 logfile=self.logfile, check_ssh_keys=check_ssh_keys,
                                 known_hosts_file=known_hosts_file)

        self.bmc = OpTestBMC(ip=self.hostname,
                             username=self.username,
                             password=self.password,
                             logfile=self.logfile,
                             check_ssh_keys=check_ssh_keys,
                             known_hosts_file=known_hosts_file)

    def set_system(self, system):
        self.console.set_system(system)
        self.bmc.set_system(system)

    def bmc_host(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[271:309]
==common.OpTestQemu:[394:434]
        self.console.system = system

    def get_host_console(self):
        return self.console

    def run_command(self, command, timeout=10, retry=0):
        # mambo only supports system console object, not this bmc object
        return None  # at least return something and have the testcase handle

    def get_ipmi(self):
        return self.ipmi

    def power_off(self):
        self.console.close()

    def power_on(self):
        self.console.connect()

    def get_rest_api(self):
        return None

    def has_os_boot_sensor(self):
        return False

    def has_occ_active_sensor(self):
        return False

    def has_host_status_sensor(self):
        return False

    def has_inband_bootdev(self):
        return False

    def supports_ipmi_dcmi(self):
        return False

    def has_ipmi_sel(self):
        return False (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[87:116]
==common.SerialConsole:[86:115]
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system):
        self.system = system

    def set_system_setup_term(self, flag):
        self.system.block_setup_term = flag

    def get_system_setup_term(self):
        return self.system.block_setup_term

    def set_block_setup_term(self, flag):
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self):
        self.util.clear_state(self) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.BootTorture:[71:94]
==testcases.OpTestPCI:[224:266]
                file_content = f.read().splitlines()
            log.debug("file_content={}".format(file_content))
            return file_content

    def _diff_my_devices(self,
                         listA=None,
                         listA_name=None,
                         listB=None,
                         listB_name=None):
        '''
        Performs unified diff of two lists
        '''
        unified_output = difflib.unified_diff(
            [_f for _f in listA if _f],
            [_f for _f in listB if _f],
            fromfile=listA_name,
            tofile=listB_name,
            lineterm="")
        unified_list = list(unified_output)
        log.debug("unified_list={}".format(unified_list))
        return unified_list

    def runTest(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestEnergyd:[62:74]
==testcases.OpTestLparFreq:[63:78]
        conf = OpTestConfiguration.conf
        self.cv_SYSTEM = conf.system()
        self.console = self.cv_SYSTEM.console
        self.hmc_user = conf.args.hmc_username
        self.hmc_password = conf.args.hmc_password
        self.hmc_ip = conf.args.hmc_ip
        self.lpar_name = conf.args.lpar_name
        self.system_name = conf.args.system_name
        self.cv_HMC = self.cv_SYSTEM.hmc
        try: self.url = conf.args.url
        except AttributeError:
            self.url = "http://liquidtelecom.dl.sourceforge.net/project/ebizzy/ebizzy/0.3/ebizzy-0.3.tar.gz"


    def get_cpu_freq(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[115:127]
==common.OpTestQemu:[115:127]
        self.util.clear_state(self)
        try:
            rc_child = self.pty.close()
            exitCode = signalstatus = None
            if self.pty.status != -1:  # leaving for debug
                if os.WIFEXITED(self.pty.status):
                    exitCode = os.WEXITSTATUS(self.pty.status)
                else:
                    signalstatus = os.WTERMSIG(self.pty.status)
            self.state = ConsoleState.DISCONNECTED
        except pexpect.ExceptionPexpect as e:
            self.state = ConsoleState.DISCONNECTED (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestQemu:[83:112]
==common.SerialConsole:[86:114]
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system):
        self.system = system

    def set_system_setup_term(self, flag):
        self.system.block_setup_term = flag

    def get_system_setup_term(self):
        return self.system.block_setup_term

    def set_block_setup_term(self, flag):
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestInbandIPMI:[187:198]
==testcases.OpTestOOBIPMI:[390:401]
        boot_devices = {
            "none": "No override",
            "pxe": "Force PXE",
            "cdrom": "Force Boot from CD/DVD",
            "disk": "Force Boot from default Hard-Drive",
            "bios": "Force Boot into BIOS Setup",
            "safe": "Force Boot from default Hard-Drive, request Safe-Mode",
            "diag": "Force Boot from Diagnostic Partition",
            "floppy": "Force Boot from Floppy/primary removable media",
        }
        for bootdev, ipmiresponse in list(boot_devices.items()): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallRhel:[148:159]
==testcases.InstallUbuntu:[256:268]
        self.cv_SYSTEM.set_state(OpSystemState.IPLing)
        self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)
        OpIU.stop_server()
        OpIU.set_bootable_disk(self.cv_HOST.get_scratch_disk())
        self.cv_SYSTEM.goto_state(OpSystemState.OFF)
        self.cv_SYSTEM.goto_state(OpSystemState.OS)
        con = self.cv_SYSTEM.console
        # sometimes coming back up we need a few attempts
        con.run_command("uname -a", retry=5)
        con.run_command("cat /etc/os-release", retry=5)
        self.cv_HOST.host_gather_opal_msg_log()
        self.cv_HOST.host_gather_kernel_log() (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestSystem:[847:866]
==testcases.OpTestIPMILockMode:[90:111]
        l_oslevel = self.cv_HOST.host_get_OS_Level()

        # Get kernel version
        l_kernel = self.cv_HOST.host_get_kernel_version()

        # Checking for ipmitool command and package
        self.cv_HOST.host_check_command("ipmitool")

        l_pkg = self.cv_HOST.host_check_pkg_for_utility(l_oslevel, "ipmitool")
        log.debug("Installed package: %s" % l_pkg)

        # loading below ipmi modules based on config option
        # ipmi_devintf, ipmi_powernv and ipmi_masghandler
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_DEVICE_INTERFACE,
                                                      BMC_CONST.IPMI_DEV_INTF)
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_POWERNV,
                                                      BMC_CONST.IPMI_POWERNV)
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_HANDLER,
                                                      BMC_CONST.IPMI_MSG_HANDLER) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestEBMC:[45:62]
==common.OpTestOpenBMC:[52:70]
        self.conf = conf
        self.util = conf.util
        self.hostname = ip
        self.username = username
        self.password = password
        self.util.PingFunc(
            self.hostname, totalSleepTime=BMC_CONST.PING_RETRY_FOR_STABILITY)
        if self.conf.util_bmc_server is None:
            self.conf.util.setup(config='REST')
        r = self.conf.util_bmc_server.login()
        self.wait_for_bmc_runtime()

    def get_power_state(self, minutes=BMC_CONST.HTTP_RETRY):
        '''
        Get Current Host Power State
        GET   redfish/v1/Systems/system/
        ''' (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.BasicIPL:[122:133]
==testcases.OpTestFlash:[289:300]
            try:
                self.cv_SYSTEM.sys_wait_for_standby_state()
            except OpTestError as e:
                c += 1
                if c == 10:
                    raise e
            else:
                break

        self.cv_SYSTEM.set_state(OpSystemState.POWERING_OFF)
        self.cv_SYSTEM.goto_state(OpSystemState.OFF) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestEnergyd:[159:169]
==testcases.OpTestLparFreq:[159:169]
        try:
            self.console.run_command("wget %s -P /tmp" % self.url)
        except CommandFailed:
            self.fail("Failed to download ebizzy tar")
        self.console.run_command("tar -xf /tmp/ebizzy*.tar.gz -C /tmp")
        self.console.run_command("cd /tmp/ebizzy*/")
        try:
            self.console.run_command("./configure; make")
        except CommandFailed:
            self.fail("Failed to compile ebizzy") (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[117:127]
==common.OpTestSSH:[118:128]
            rc_child = self.pty.close()
            exitCode = signalstatus = None
            if self.pty.status != -1:  # leaving for debug
                if os.WIFEXITED(self.pty.status):
                    exitCode = os.WEXITSTATUS(self.pty.status)
                else:
                    signalstatus = os.WTERMSIG(self.pty.status)
            self.state = ConsoleState.DISCONNECTED
        except pexpect.ExceptionPexpect as e:
            self.state = ConsoleState.DISCONNECTED (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestSSH:[86:110]
==common.SerialConsole:[91:115]
        self.system = system

    def set_system_setup_term(self, flag):
        self.system.block_setup_term = flag

    def get_system_setup_term(self):
        return self.system.block_setup_term

    def set_block_setup_term(self, flag):
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self):
        self.util.clear_state(self) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.testCronus:[98:108]
==testcases.testRestAPI:[60:69]
        cls.cv_SYSTEM = cls.conf.system()
        cls.cv_BMC = cls.conf.bmc()
        cls.rest = cls.conf.system().rest

        try:
            if cls.desired == OpSystemState.OFF:
                cls.cv_SYSTEM.goto_state(OpSystemState.OFF)
            else:
                cls.cv_SYSTEM.goto_state(OpSystemState.OS)
        except Exception as e: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallRhel:[83:95]
==testcases.InstallUbuntu:[117:129]
            if self.conf.args.os_cdrom and not self.conf.args.os_repo:
                repo = OpIU.setup_repo(self.conf.args.os_cdrom)
            if self.conf.args.os_repo:
                repo = self.conf.args.os_repo
            if not repo:
                self.fail("No valid repo to start installation")
            if not OpIU.extract_install_files(repo):
                self.fail("Unable to download install files")

        # start our web server
        port = OpIU.start_server(my_ip)
 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.SecureBoot:[89:99]
==testcases.TrustedBoot:[76:85]
        c = self.cv_SYSTEM.console
        self.cpu = ''.join(c.run_command(
            "grep '^cpu' /proc/cpuinfo |uniq|sed -e 's/^.*: //;s/[,]* .*//;'"))
        log.debug(self.cpu)
        if self.cpu in ["POWER9", "POWER9P"]:
            part_list = ["CAPP", "IMA_CATALOG", "BOOTKERNEL", "VERSION"]
        elif self.cpu in ["POWER8"]:
            part_list = ["CAPP", "BOOTKERNEL"]
        else: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestQemu:[88:112]
==common.OpTestSSH:[86:109]
        self.system = system

    def set_system_setup_term(self, flag):
        self.system.block_setup_term = flag

    def get_system_setup_term(self):
        return self.system.block_setup_term

    def set_block_setup_term(self, flag):
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    # Because this makes sense for the console
    def update_disks(self, disks): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[69:83]
==common.OpTestSSH:[64:80]
        self.delaybeforesend = delaybeforesend
        self.system = None
        # OpTestUtil instance is NOT conf's
        self.util = OpTestUtil()
        self.prompt = prompt
        self.expect_prompt = self.util.build_prompt(prompt) + "$"
        self.pty = None
        # allows caller specific control of when to block setup_term
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0

        # ssh state tracking, reset on boot and state changes
        # ssh port 2200 console tracking not done on SSH object, its done on System object for the system console (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[323:333]
==common.SerialConsole:[173:183]
            self.connect(logger)

        count = 0
        while (not self.pty.isalive()):
            log.warning('# Reconnecting')
            if (count > 0):
                time.sleep(BMC_CONST.IPMI_SOL_ACTIVATE_TIME)
            self.connect()
            count += 1
            if count > 120: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestEnergyScale:[144:154]
==testcases.OpTestOOBIPMI:[720:735]
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_DISCOVER)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_POWER_READING)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_POWER_GET_LIMIT)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_SENSORS)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_GET_MC_ID_STRING)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_GET_TEMP_READING)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_GET_CONF_PARAM)
        self.run_ipmi_cmd(BMC_CONST.IPMI_DCMI_OOB_DISCOVER)

 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[79:88]
==testcases.InstallUbuntu:[117:127]
        if self.conf.args.os_cdrom and not self.conf.args.os_repo:
            repo = OpIU.setup_repo(self.conf.args.os_cdrom)
        if self.conf.args.os_repo:
            repo = self.conf.args.os_repo
        if not repo:
            self.fail("No valid repo to start installation")
        if not OpIU.extract_install_files(repo):
            self.fail("Unable to download install files")
 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.ConsoleBug150765:[53:63]
==testcases.fspresetReload:[53:63]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_FSP = self.cv_SYSTEM.bmc
        self.cv_HOST = conf.host()
        self.util = self.cv_SYSTEM.util
        self.bmc_type = conf.args.bmc_type
        self.cv_SYSTEM.goto_state(OpSystemState.OS)

    def runTest(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.BootTorture:[107:116]
==testcases.OpTestPCI:[314:335]
                                                    listA_name=self.conf.lspci_file(),
                                                    listB=active_lspci,
                                                    listB_name="Live System")
            log.debug("compare_results={}".format(compare_results))
            if len(compare_results):
                self.assertEqual(len(compare_results), 0,
                                 "Stored ({}) and Active PCI devices differ:\n{}"
                                 .format(self.conf.lspci_file(), ('\n'.join(i for i in compare_results))))

    def pcie_link_errors(self):
        '''
        Checks for link errors

        Case A --run testcases.OpTestPCI.PCISkiroot.pcie_link_errors
        Case B --run testcases.OpTestPCI.PCISkirootSoftboot.pcie_link_errors
        Case C --run testcases.OpTestPCI.PCISkirootHardboot.pcie_link_errors
        Case D --run testcases.OpTestPCI.PCIHost.pcie_link_errors
        Case E --run testcases.OpTestPCI.PCIHostSoftboot.pcie_link_errors
        Case F --run testcases.OpTestPCI.PCIHostHardboot.pcie_link_errors

        ''' (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestDlparIO:[99:112]
==testcases.OpTestLPM:[141:151]
        for pkg in lpm_pkg_list:
            pkg_status = self.cv_HOST.host_check_pkg_installed(self.oslevel, pkg)
            if not pkg_status:
                pkg_found = False
                pkg_notfound.append(pkg)
        if pkg_found:
            return True
        raise OpTestError("Install the required packages : %s" % pkg_notfound)

    def lpm_setup(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestEBMC:[111:124]
==common.OpTestOpenBMC:[492:505]
                    break
            if time.time() > timeout:
                log.warning("We timed out waiting for \"{}\", we waited {} minutes for \"{}\"".format(
                    token, minutes, value_target))
                raise HTTPCheck(message="HTTP problem getting \"{}\", we waited {} minutes for \"{}\"".format(
                    token, minutes, value_target))
            time.sleep(5)
        return True

    def wait_for_bmc_runtime(self, timeout=10):
        '''
        Wait for BMC Runtime
        ''' (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[221:247]
==common.OpTestQemu:[308:334]
        self.console = console

    def ipmi_power_off(self):
        """For Qemu, this just kills the simulator"""
        self.console.close()

    def ipmi_wait_for_standby_state(self, i_timeout=10):
        """For Qemu, we just kill the simulator"""
        self.console.close()

    def ipmi_set_boot_to_petitboot(self):
        return 0

    def ipmi_sel_check(self, i_string="Transition to Non-recoverable"):
        pass

    def ipmi_sel_elist(self, dump=False):
        pass

    def ipmi_set_no_override(self):
        pass

    def sys_set_bootdev_no_override(self):
        pass

 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[1092:1124]
==common.OpTestMambo:[101:117]
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self):
        self.util.clear_state(self)
        try: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[147:171]
==common.OpTestMambo:[75:92]
        self.pty = None
        # allows caller specific control of when to block setup_term
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0
        # functional simulators are notoriously slow, so multiply all default timeouts by this factor
        self.timeout_factor = timeout_factor

        # state tracking, reset on boot and state changes
        # console tracking done on System object for the system console
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[993:1007]
==common.SerialConsole:[75:91]
        self.pty = None
        self.delaybeforesend = delaybeforesend
        # allows caller specific control of when to block setup_term
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0

        # FUTURE - System Console currently tracked in System Object
        # state tracking, reset on boot and state changes
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.table_regex:[28:41]
==src.table_regex:[10:23]
    $
""", re.VERBOSE)

#C: 75, 0: Unnecessary parens after 'print' keyword (superfluous-parens)
#C: 14, 0: Too many lines in module (6953/1000) (too-many-lines)
PYLINT_ITEM = re.compile(r"""
    ^
    (?P<type>[ERCW]):
    \s*
    (?P<where1>\d+),
    \s*
    (?P<where2>-?\d+):
    \s+ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==build.lib.src.table_regex:[10:23]
==src.table_regex:[28:41]
    $
""", re.VERBOSE)

#C: 75, 0: Unnecessary parens after 'print' keyword (superfluous-parens)
#C: 14, 0: Too many lines in module (6953/1000) (too-many-lines)
PYLINT_ITEM = re.compile(r"""
    ^
    (?P<type>[ERCW]):
    \s*
    (?P<where1>\d+),
    \s*
    (?P<where2>-?\d+):
    \s+ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[120:127]
==testcases.InstallRhel:[133:140]
        r = None
        while r != 0:
            r = raw_pty.expect(['Running post-installation scripts',
                                'Starting installer',
                                'Setting up the installation environment',
                                'Starting package installation process',
                                'Performing post-installation setup tasks', (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[129:136]
==testcases.InstallUbuntu:[256:264]
        self.cv_SYSTEM.set_state(OpSystemState.IPLing)
        self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)
        OpIU.stop_server()
        OpIU.set_bootable_disk(self.cv_HOST.get_scratch_disk())
        self.cv_SYSTEM.goto_state(OpSystemState.OFF)
        self.cv_SYSTEM.goto_state(OpSystemState.OS)
        con = self.cv_SYSTEM.console
        # sometimes coming back up we need a few attempts (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallRhel:[74:81]
==testcases.InstallUbuntu:[107:114]
        OpIU = OpTestInstallUtil.InstallUtil(base_path=base_path,
                                             vmlinux=vmlinux,
                                             initrd=initrd,
                                             ks=ks,
                                             boot_path=boot_path)
        my_ip = OpIU.get_server_ip()
        if not my_ip: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.EPOW:[66:73]
==testcases.OpTestOCC:[61:68]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_HOST = conf.host()
        self.cv_FSP = conf.bmc()
        self.platform = conf.platform()
        self.bmc_type = conf.args.bmc_type (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.SystemLogin:[58:65]
==testcases.fspresetReload:[150:160]
        l_con = self.cv_SYSTEM.console
        r = l_con.run_command("echo 'Hello World'")
        self.assertIn("Hello World", r)
        try:
            r = l_con.run_command("false")
        except CommandFailed as r:
            self.assertEqual(r.exitcode, 1)

    # check RTC TOD read/write interface
    def check_for_rtc(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.SecureBoot:[42:49]
==testcases.TrustedBoot:[57:64]
        conf = OpTestConfiguration.conf
        self.cv_SYSTEM = conf.system()
        self.cv_BMC = conf.bmc()
        self.cv_REST = self.cv_BMC.get_rest_api()
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.bmc_type = conf.args.bmc_type (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.EnergyScale_BaseLine:[51:58]
==testcases.IMC_bug:[39:46]
       conf = OpTestConfiguration.conf
       self.cv_IPMI = conf.ipmi()
       self.cv_SYSTEM = conf.system()
       self.cv_HOST = conf.host()
       self.cv_BMC = conf.bmc()
       self.platform = conf.platform()
       self.bmc_type = conf.args.bmc_type (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.BisectKernel:[80:93]
==testcases.InstallUpstreamKernel:[54:61]
        if self.config_path:
            self.config = "olddefconfig"
        if not self.repo:
            self.fail("Provide git repo of kernel to install")
        if not (self.conf.args.host_ip and self.conf.args.host_user and self.conf.args.host_password):
            self.fail(
                "Provide host ip user details refer, --host-{ip,user,password}")

    @staticmethod
    def is_url(path):
        """
        Check if the given path is a URL.
        """ (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[72:83]
==common.OpTestQemu:[69:79]
        self.util = OpTestUtil()
        self.prompt = prompt
        self.expect_prompt = self.util.build_prompt(prompt) + "$"
        self.pty = None
        # allows caller specific control of when to block setup_term
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OPexpect:[51:60]
==common.OpTestHMC:[96:106]
                                    maxread=maxread,
                                    searchwindowsize=searchwindowsize,
                                    logfile=logfile,
                                    cwd=cwd, env=env,
                                    ignore_sighup=ignore_sighup,
                                    encoding=encoding,
                                    codec_errors=codec_errors)

    def sendline(self, command=''):
        # HMC console required an enter to be sent with each sendline (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[286:295]
==common.SerialConsole:[157:166]
        self.pty.setwinsize(1000, 1000)

        if logger:
            self.pty.logfile_read = OpTestLogger.FileLikeLogger(logger)
        else:
            self.pty.logfile_read = OpTestLogger.FileLikeLogger(log)

        if self.delaybeforesend:
            self.pty.delaybeforesend = self.delaybeforesend (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[249:256]
==common.SerialConsole:[126:133]
            exitCode = signalstatus = None
            if self.pty.status != -1:  # leaving for future debug
                if os.WIFEXITED(self.pty.status):
                    exitCode = os.WEXITSTATUS(self.pty.status)
                else:
                    signalstatus = os.WTERMSIG(self.pty.status)
        except pexpect.ExceptionPexpect: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[1092:1123]
==common.SerialConsole:[100:115]
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    def close(self):
        self.util.clear_state(self) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.testCronus:[233:243]
==testcases.testRestAPI:[522:532]
    s = unittest.TestSuite()
    s.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(HostOff))
    return s


def runtime_suite():
    # run with Host powered ON
    s = unittest.TestSuite()
    s.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(Runtime))
    return s (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestDlpar:[60:68]
==testcases.PowerNVDump:[105:111]
      self.hmc_user = conf.args.hmc_username
      self.hmc_password = conf.args.hmc_password
      self.hmc_ip = conf.args.hmc_ip
      self.lpar_name = conf.args.lpar_name
      self.system_name = conf.args.system_name
      self.cv_HMC = self.cv_SYSTEM.hmc
      # The following variables needs to be defined in
      # ~/.op-test-framework.conf (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpalGard:[49:57]
==testcases.SbePassThrough:[48:56]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_HOST = conf.host()
        self.bmc_type = conf.args.bmc_type
        self.cv_SYSTEM.goto_state(OpSystemState.OS)

    def setup_init(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestFlash:[65:71]
==testcases.SecureBoot:[42:48]
        conf = OpTestConfiguration.conf
        self.cv_SYSTEM = conf.system()
        self.cv_BMC = conf.bmc()
        self.cv_REST = self.cv_BMC.get_rest_api()
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi() (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.BasicIPL:[150:158]
==testcases.BootTorture:[168:176]
            self.cv_SYSTEM.set_state(OpSystemState.IPLing)
            try:
                self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)
            except pexpect.EOF:
                self.cv_SYSTEM.goto_state(OpSystemState.OFF)
                self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)

 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.ConsoleBug150765:[53:59]
==testcases.OpTestDumps:[60:66]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_FSP = self.cv_SYSTEM.bmc
        self.cv_HOST = conf.host()
        self.util = self.cv_SYSTEM.util (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestEnergyd:[48:59]
==testcases.OpTestLparFreq:[51:63]
        if output_mode[1] != mode:
            self.failed_test.append(mode)
        else:
            log.info("Change to %s powersave mode is successful" % mode)


    def set_powersave_mode(self, mode):
        self.cv_HMC.run_command("chpwrmgmt -m %s -r sys -o enable -t %s" %
                               (self.system_name, mode))

    def get_online_core_count(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.MachineConfig:[50:56]
==testcases.OpTestEnergyd:[65:71]
        self.hmc_user = conf.args.hmc_username
        self.hmc_password = conf.args.hmc_password
        self.hmc_ip = conf.args.hmc_ip
        self.lpar_name = conf.args.lpar_name
        self.system_name = conf.args.system_name
        self.cv_HMC = self.cv_SYSTEM.hmc (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestSystem:[860:866]
==testcases.OpTestIPMIReprovision:[88:95]
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_DEVICE_INTERFACE,
                                                      BMC_CONST.IPMI_DEV_INTF)
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_POWERNV,
                                                      BMC_CONST.IPMI_POWERNV)
        self.cv_HOST.host_load_module_based_on_config(l_kernel, BMC_CONST.CONFIG_IPMI_HANDLER,
                                                      BMC_CONST.IPMI_MSG_HANDLER) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[661:667]
==common.OpTestOpenBMC:[235:241]
        if dump:
            print(
                "\n----------------------------------------------------------------------")
            print("SELs")
            print(
                "----------------------------------------------------------------------") (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[274:280]
==common.OpTestSSH:[167:173]
        try:
            self.pty = OPexpect.spawn(cmd,
                                      logfile=self.logfile,
                                      failure_callback=set_system_to_UNKNOWN_BAD,
                                      failure_callback_data=self.system)
        except Exception as e: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[249:255]
==common.OpTestSSH:[119:125]
            exitCode = signalstatus = None
            if self.pty.status != -1:  # leaving for future debug
                if os.WIFEXITED(self.pty.status):
                    exitCode = os.WEXITSTATUS(self.pty.status)
                else:
                    signalstatus = os.WTERMSIG(self.pty.status) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[193:200]
==common.OpTestMambo:[69:77]
        self.delaybeforesend = delaybeforesend
        self.system = None
        # OpTestUtil instance is NOT conf's
        self.util = OpTestUtil()
        self.prompt = prompt
        self.expect_prompt = self.util.build_prompt(prompt) + "$"
        self.pty = None (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[293:309]
==common.OpTestOpenBMC:[1143:1159]
        return False

    def has_occ_active_sensor(self):
        return False

    def has_host_status_sensor(self):
        return False

    def has_inband_bootdev(self):
        return False

    def supports_ipmi_dcmi(self):
        return False

    def has_ipmi_sel(self):
        return False (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[1092:1122]
==common.OpTestQemu:[97:112]
        self.block_setup_term = flag

    def get_block_setup_term(self):
        return self.block_setup_term

    def enable_setup_term_quiet(self):
        self.setup_term_quiet = 1
        self.setup_term_disable = 0

    def disable_setup_term_quiet(self):
        self.setup_term_quiet = 0
        self.setup_term_disable = 0

    # Because this makes sense for the console
    def update_disks(self, disks): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[334:347]
==common.SerialConsole:[184:195]
        if self.system.SUDO_set != 1 or self.system.LOGIN_set != 1 or self.system.PS1_set != 1:
            self.util.setup_term(self.system, self.pty,
                                 None, self.system.block_setup_term)

        return self.pty

    def run_command(self, command, timeout=60, retry=0):
        return self.util.run_command(self, command, timeout, retry)

    def run_command_ignore_fail(self, command, timeout=60, retry=0):
        return self.util.run_command_ignore_fail(self, command, timeout, retry)

 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestSSH:[72:83]
==common.SerialConsole:[78:91]
        self.block_setup_term = block_setup_term
        # tells setup_term to not throw exceptions, like when system off
        self.setup_term_quiet = 0
        # flags the object to abandon setup_term operations, like when system off
        self.setup_term_disable = 0

        # FUTURE - System Console currently tracked in System Object
        # state tracking, reset on boot and state changes
        self.PS1_set = -1
        self.LOGIN_set = -1
        self.SUDO_set = -1

    def set_system(self, system): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[118:124]
==common.SerialConsole:[126:132]
            exitCode = signalstatus = None
            if self.pty.status != -1:  # leaving for future debug
                if os.WIFEXITED(self.pty.status):
                    exitCode = os.WEXITSTATUS(self.pty.status)
                else:
                    signalstatus = os.WTERMSIG(self.pty.status) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestInbandIPMI:[231:236]
==testcases.OpTestOOBIPMI:[433:438]
        for l_line in l_res:
            if l_line.__contains__(l_msg):
                log.debug("Verifying bootdev is successfull for %s" % i_dev)
                return BMC_CONST.FW_SUCCESS
        else: (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallHostOS:[103:108]
==testcases.InstallUbuntu:[179:184]
            cmd = "[ -f %s ]&& rm -f %s;[ -f %s ] && rm -f %s;true" % (vmlinux,
                                                                       vmlinux,
                                                                       initrd,
                                                                       initrd)
            self.c.run_command(cmd) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallUbuntu:[46:53]
==testcases.OpTestInbandIPMI:[70:75]
        conf = OpTestConfiguration.conf
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_BMC = conf.bmc()

    def runTest(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.InstallRhel:[53:58]
==testcases.InstallUbuntu:[72:77]
            self.fail(
                "Provide host network details refer, --host-{ip,gateway,dns,submask,mac}")
        if not (self.conf.args.host_user and self.conf.args.host_password):
            self.fail(
                "Provide host user details refer, --host-{user,password}") (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.DeviceTreeValidation:[61:66]
==testcases.OpalMsglog:[41:46]
        conf = OpTestConfiguration.conf
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.bmc_type = conf.args.bmc_type (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.DPO:[52:59]
==testcases.OpalGard:[49:54]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_HOST = conf.host()
        self.bmc_type = conf.args.bmc_type (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.AT24driver:[115:120]
==testcases.I2C:[362:367]
        l_chips = self.host_get_list_of_eeprom_chips()
        if self.cv_SYSTEM.has_host_accessible_eeprom():
            self.assertNotEqual(len(l_chips), 0,
                                "No EEPROMs detected, while OpTestSystem says "
                                "there should be") (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.I2C:[69:74]
==testcases.OpTestEM:[69:74]
        if self.test == "skiroot":
            self.cv_SYSTEM.goto_state(OpSystemState.PETITBOOT_SHELL)
            self.c = self.cv_SYSTEM.console
        elif self.test == "host":
            self.cv_SYSTEM.goto_state(OpSystemState.OS) (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestDumps:[64:71]
==testcases.OpTestSystemBootSequence:[72:80]
        self.cv_HOST = conf.host()
        self.util = self.cv_SYSTEM.util
        self.platform = conf.platform()
        self.bmc_type = conf.args.bmc_type
        self.cv_SYSTEM.goto_state(OpSystemState.OS)

    def tearDown(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestCAPI:[62:70]
==testcases.OpTestOpenCAPI:[58:66]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_HOST = conf.host()

    def set_up(self):
        self.cv_SYSTEM.goto_state(OpSystemState.OS)
        # Check that host has a OpenCAPI FPGA card (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.DeviceTreeWarnings:[46:53]
==testcases.OpTestRebootTimeout:[48:56]
        conf = OpTestConfiguration.conf
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()

    def runTest(self):
        self.setup_test() (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.DeviceTreeWarnings:[66:72]
==testcases.KernelLog:[146:152]
        for f in filter_out:
            fre = re.compile(f)
            log_entries = [l for l in log_entries if not fre.search(l)]

        msg = '\n'.join([_f for _f in log_entries if _f])
        self.assertTrue(len(log_entries) == 0, (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestDlparIO:[113:124]
==testcases.OpTestLPM:[164:175]
        if "inoperative" in str(rc):
            self.cv_HOST.host_run_command("startsrc -g rsct_rm; startsrc -g rsct")
            rc = self.cv_HOST.host_run_command("lssrc -a")
            if "inoperative" in str(rc):
                raise OpTestError("LPM cannot continue as some of rsct services are not active")

    def vnic_options(self, remote=''):
        '''
        Form the vnic_mappings param based on the adapters' details
        provided.
        ''' (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.KernelLog:[45:52]
==testcases.OpTestFastReboot:[57:64]
        conf = OpTestConfiguration.conf
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.bmc_type = conf.args.bmc_type

    def runTest(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestRTCdriver:[135:140]
==testcases.fspTODCorruption:[96:103]
        self.cv_HOST.host_read_hwclock()
        self.cv_HOST.host_set_hwclock_time("2015-01-01 10:10:10")
        self.cv_HOST.host_read_hwclock()
        self.cv_HOST.host_set_hwclock_time("2016-01-01 20:20:20")
        self.cv_HOST.host_read_hwclock() (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestDumps:[60:65]
==testcases.fspTODCorruption:[52:57]
        conf = OpTestConfiguration.conf
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.cv_FSP = self.cv_SYSTEM.bmc
        self.cv_HOST = conf.host() (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpalErrorLog:[56:63]
==testcases.fspTODCorruption:[54:61]
        self.cv_SYSTEM = conf.system()
        self.cv_FSP = self.cv_SYSTEM.bmc
        self.cv_HOST = conf.host()
        self.bmc_type = conf.args.bmc_type
        self.cv_SYSTEM.goto_state(OpSystemState.OS)

    def tearDown(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==testcases.OpTestIPMILockMode:[75:83]
==testcases.OpTestIPMIReprovision:[52:59]
        conf = OpTestConfiguration.conf
        self.cv_HOST = conf.host()
        self.cv_IPMI = conf.ipmi()
        self.cv_SYSTEM = conf.system()
        self.platform = conf.platform()

    def runTest(self):
        # FIXME: detect and don't hardcode (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestOpenBMC:[1146:1159]
==common.OpTestQemu:[416:431]
        return False

    def has_host_status_sensor(self):
        return False

    def has_occ_active_sensor(self):
        return False

    def has_ipmi_sel(self):
        return False

    def supports_ipmi_dcmi(self):
        return False (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestIPMI:[240:245]
==common.OpTestSSH:[111:116]
            return
        try:
            self.pty.send("\r")
            self.pty.send('~.')
            close_rc = self.pty.expect( (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[134:141]
==common.OpTestQemu:[134:141]
        if self.state == ConsoleState.CONNECTED:
            return self.pty
        else:
            self.util.clear_state(self)  # clear when coming in DISCONNECTED

        log.debug("#Mambo Console CONNECT")
 (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestMambo:[296:309]
==common.OpTestOpenBMC:[1143:1158]
        return False

    def has_host_status_sensor(self):
        return False

    def has_inband_bootdev(self):
        return False

    def supports_ipmi_dcmi(self):
        return False

    def has_ipmi_sel(self):
        return False (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestFSP:[479:492]
==common.OpTestMambo:[293:308]
        return False

    def has_host_status_sensor(self):
        return False

    def has_occ_active_sensor(self):
        return False

    def has_ipmi_sel(self):
        return False

    def supports_ipmi_dcmi(self):
        return False (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestHMC:[946:961]
==common.OpTestMambo:[290:305]
        return None

    def has_os_boot_sensor(self):
        return False

    def has_occ_active_sensor(self):
        return False

    def has_host_status_sensor(self):
        return False

    def has_inband_bootdev(self):
        return False

    def supports_ipmi_dcmi(self): (duplicate-code)
testcases/IplParams.py:1:0: R0801: Similar lines in 2 files
==common.OpTestSSH:[42:52]
==common.SerialConsole:[56:64]
    DISCONNECTED = 0
    CONNECTED = 1


def set_system_to_UNKNOWN_BAD(system):
    s = system.get_state()
    system.set_state(OpTestSystem.OpSystemState.UNKNOWN_BAD)
    return s

 (duplicate-code)
testcases/IplParams.py:1:0: R0401: Cyclic import (common.OpTestIPMI -> common.OpTestSystem) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestBMC -> common.OpTestIPMI -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (common.OpTestHost -> common.OpTestSSH -> common.OpTestSystem) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (common.OpTestIPMI -> common.SerialConsole -> common.OpTestSystem) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestHost -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestHost) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestBMC -> common.OpTestSSH -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestHMC -> common.OpTestSSH -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestBMC -> common.OpTestIPMI -> common.OpTestSystem -> common.OpTestHost -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (common.OpTestHMC -> common.OpTestSSH -> common.OpTestSystem) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestEBMC -> common.OpTestSSH -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestOpenBMC -> common.OpTestBMC -> common.OpTestIPMI -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestEBMC -> common.OpTestBMC -> common.OpTestIPMI -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestCronus -> common.OpTestSystem -> common.OpTestQemu) (cyclic-import)
testcases/IplParams.py:1:0: R0401: Cyclic import (OpTestConfiguration -> common.OpTestBMC -> common.OpTestIPMI -> common.OpTestSystem -> common.OpTestHost) (cyclic-import)

-----------------------------------
Your code has been rated at 5.58/10

